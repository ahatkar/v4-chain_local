// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dydxprotocol/subaccounts/query.proto

#include "dydxprotocol/subaccounts/query.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace dydxprotocol {
namespace subaccounts {
template <typename>
PROTOBUF_CONSTEXPR QueryGetSubaccountRequest::QueryGetSubaccountRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.owner_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.number_)*/ 0u

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryGetSubaccountRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryGetSubaccountRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryGetSubaccountRequestDefaultTypeInternal() {}
  union {
    QueryGetSubaccountRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryGetSubaccountRequestDefaultTypeInternal _QueryGetSubaccountRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QuerySubaccountResponse::QuerySubaccountResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.subaccount_)*/nullptr} {}
struct QuerySubaccountResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuerySubaccountResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuerySubaccountResponseDefaultTypeInternal() {}
  union {
    QuerySubaccountResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuerySubaccountResponseDefaultTypeInternal _QuerySubaccountResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryAllSubaccountRequest::QueryAllSubaccountRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryAllSubaccountRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAllSubaccountRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAllSubaccountRequestDefaultTypeInternal() {}
  union {
    QueryAllSubaccountRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAllSubaccountRequestDefaultTypeInternal _QueryAllSubaccountRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QuerySubaccountAllResponse::QuerySubaccountAllResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.subaccount_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QuerySubaccountAllResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuerySubaccountAllResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuerySubaccountAllResponseDefaultTypeInternal() {}
  union {
    QuerySubaccountAllResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuerySubaccountAllResponseDefaultTypeInternal _QuerySubaccountAllResponse_default_instance_;
}  // namespace subaccounts
}  // namespace dydxprotocol
static ::_pb::Metadata file_level_metadata_dydxprotocol_2fsubaccounts_2fquery_2eproto[4];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_dydxprotocol_2fsubaccounts_2fquery_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_dydxprotocol_2fsubaccounts_2fquery_2eproto = nullptr;
const ::uint32_t TableStruct_dydxprotocol_2fsubaccounts_2fquery_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::subaccounts::QueryGetSubaccountRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::subaccounts::QueryGetSubaccountRequest, _impl_.owner_),
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::subaccounts::QueryGetSubaccountRequest, _impl_.number_),
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::subaccounts::QuerySubaccountResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::subaccounts::QuerySubaccountResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::subaccounts::QuerySubaccountResponse, _impl_.subaccount_),
    0,
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::subaccounts::QueryAllSubaccountRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::subaccounts::QueryAllSubaccountRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::subaccounts::QueryAllSubaccountRequest, _impl_.pagination_),
    0,
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::subaccounts::QuerySubaccountAllResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::subaccounts::QuerySubaccountAllResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::subaccounts::QuerySubaccountAllResponse, _impl_.subaccount_),
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::subaccounts::QuerySubaccountAllResponse, _impl_.pagination_),
    ~0u,
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::dydxprotocol::subaccounts::QueryGetSubaccountRequest)},
        { 10, 19, -1, sizeof(::dydxprotocol::subaccounts::QuerySubaccountResponse)},
        { 20, 29, -1, sizeof(::dydxprotocol::subaccounts::QueryAllSubaccountRequest)},
        { 30, 40, -1, sizeof(::dydxprotocol::subaccounts::QuerySubaccountAllResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::dydxprotocol::subaccounts::_QueryGetSubaccountRequest_default_instance_._instance,
    &::dydxprotocol::subaccounts::_QuerySubaccountResponse_default_instance_._instance,
    &::dydxprotocol::subaccounts::_QueryAllSubaccountRequest_default_instance_._instance,
    &::dydxprotocol::subaccounts::_QuerySubaccountAllResponse_default_instance_._instance,
};
const char descriptor_table_protodef_dydxprotocol_2fsubaccounts_2fquery_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n$dydxprotocol/subaccounts/query.proto\022\030"
    "dydxprotocol.subaccounts\032\031cosmos_proto/c"
    "osmos.proto\032\024gogoproto/gogo.proto\032\034googl"
    "e/api/annotations.proto\032*cosmos/base/que"
    "ry/v1beta1/pagination.proto\032)dydxprotoco"
    "l/subaccounts/subaccount.proto\"T\n\031QueryG"
    "etSubaccountRequest\022\'\n\005owner\030\001 \001(\tB\030\322\264-\024"
    "cosmos.AddressString\022\016\n\006number\030\002 \001(\r\"Y\n\027"
    "QuerySubaccountResponse\022>\n\nsubaccount\030\001 "
    "\001(\0132$.dydxprotocol.subaccounts.Subaccoun"
    "tB\004\310\336\037\000\"W\n\031QueryAllSubaccountRequest\022:\n\n"
    "pagination\030\001 \001(\0132&.cosmos.base.query.v1b"
    "eta1.PageRequest\"\231\001\n\032QuerySubaccountAllR"
    "esponse\022>\n\nsubaccount\030\001 \003(\0132$.dydxprotoc"
    "ol.subaccounts.SubaccountB\004\310\336\037\000\022;\n\npagin"
    "ation\030\002 \001(\0132\'.cosmos.base.query.v1beta1."
    "PageResponse2\350\002\n\005Query\022\263\001\n\nSubaccount\0223."
    "dydxprotocol.subaccounts.QueryGetSubacco"
    "untRequest\0321.dydxprotocol.subaccounts.Qu"
    "erySubaccountResponse\"=\202\323\344\223\0027\0225/dydxprot"
    "ocol/subaccounts/subaccount/{owner}/{num"
    "ber}\022\250\001\n\rSubaccountAll\0223.dydxprotocol.su"
    "baccounts.QueryAllSubaccountRequest\0324.dy"
    "dxprotocol.subaccounts.QuerySubaccountAl"
    "lResponse\",\202\323\344\223\002&\022$/dydxprotocol/subacco"
    "unts/subaccountB\?Z=github.com/dydxprotoc"
    "ol/v4-chain/protocol/x/subaccounts/types"
    "b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_dydxprotocol_2fsubaccounts_2fquery_2eproto_deps[5] =
    {
        &::descriptor_table_cosmos_2fbase_2fquery_2fv1beta1_2fpagination_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_dydxprotocol_2fsubaccounts_2fsubaccount_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::absl::once_flag descriptor_table_dydxprotocol_2fsubaccounts_2fquery_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_dydxprotocol_2fsubaccounts_2fquery_2eproto = {
    false,
    false,
    1088,
    descriptor_table_protodef_dydxprotocol_2fsubaccounts_2fquery_2eproto,
    "dydxprotocol/subaccounts/query.proto",
    &descriptor_table_dydxprotocol_2fsubaccounts_2fquery_2eproto_once,
    descriptor_table_dydxprotocol_2fsubaccounts_2fquery_2eproto_deps,
    5,
    4,
    schemas,
    file_default_instances,
    TableStruct_dydxprotocol_2fsubaccounts_2fquery_2eproto::offsets,
    file_level_metadata_dydxprotocol_2fsubaccounts_2fquery_2eproto,
    file_level_enum_descriptors_dydxprotocol_2fsubaccounts_2fquery_2eproto,
    file_level_service_descriptors_dydxprotocol_2fsubaccounts_2fquery_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_dydxprotocol_2fsubaccounts_2fquery_2eproto_getter() {
  return &descriptor_table_dydxprotocol_2fsubaccounts_2fquery_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_dydxprotocol_2fsubaccounts_2fquery_2eproto(&descriptor_table_dydxprotocol_2fsubaccounts_2fquery_2eproto);
namespace dydxprotocol {
namespace subaccounts {
// ===================================================================

class QueryGetSubaccountRequest::_Internal {
 public:
};

QueryGetSubaccountRequest::QueryGetSubaccountRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dydxprotocol.subaccounts.QueryGetSubaccountRequest)
}
QueryGetSubaccountRequest::QueryGetSubaccountRequest(const QueryGetSubaccountRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryGetSubaccountRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.owner_) {}

    , decltype(_impl_.number_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.owner_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.owner_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_owner().empty()) {
    _this->_impl_.owner_.Set(from._internal_owner(), _this->GetArenaForAllocation());
  }
  _this->_impl_.number_ = from._impl_.number_;
  // @@protoc_insertion_point(copy_constructor:dydxprotocol.subaccounts.QueryGetSubaccountRequest)
}

inline void QueryGetSubaccountRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.owner_) {}

    , decltype(_impl_.number_) { 0u }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.owner_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.owner_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryGetSubaccountRequest::~QueryGetSubaccountRequest() {
  // @@protoc_insertion_point(destructor:dydxprotocol.subaccounts.QueryGetSubaccountRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryGetSubaccountRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.owner_.Destroy();
}

void QueryGetSubaccountRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryGetSubaccountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dydxprotocol.subaccounts.QueryGetSubaccountRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.owner_.ClearToEmpty();
  _impl_.number_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryGetSubaccountRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string owner = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_owner();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "dydxprotocol.subaccounts.QueryGetSubaccountRequest.owner"));
        } else {
          goto handle_unusual;
        }
        continue;
      // uint32 number = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 16)) {
          _impl_.number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryGetSubaccountRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dydxprotocol.subaccounts.QueryGetSubaccountRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string owner = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_owner().empty()) {
    const std::string& _s = this->_internal_owner();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "dydxprotocol.subaccounts.QueryGetSubaccountRequest.owner");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // uint32 number = 2;
  if (this->_internal_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_number(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dydxprotocol.subaccounts.QueryGetSubaccountRequest)
  return target;
}

::size_t QueryGetSubaccountRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dydxprotocol.subaccounts.QueryGetSubaccountRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string owner = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_owner().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_owner());
  }

  // uint32 number = 2;
  if (this->_internal_number() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_number());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryGetSubaccountRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryGetSubaccountRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryGetSubaccountRequest::GetClassData() const { return &_class_data_; }


void QueryGetSubaccountRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryGetSubaccountRequest*>(&to_msg);
  auto& from = static_cast<const QueryGetSubaccountRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dydxprotocol.subaccounts.QueryGetSubaccountRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_owner().empty()) {
    _this->_internal_set_owner(from._internal_owner());
  }
  if (from._internal_number() != 0) {
    _this->_internal_set_number(from._internal_number());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryGetSubaccountRequest::CopyFrom(const QueryGetSubaccountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dydxprotocol.subaccounts.QueryGetSubaccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryGetSubaccountRequest::IsInitialized() const {
  return true;
}

void QueryGetSubaccountRequest::InternalSwap(QueryGetSubaccountRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_, lhs_arena,
                                       &other->_impl_.owner_, rhs_arena);

  swap(_impl_.number_, other->_impl_.number_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryGetSubaccountRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dydxprotocol_2fsubaccounts_2fquery_2eproto_getter, &descriptor_table_dydxprotocol_2fsubaccounts_2fquery_2eproto_once,
      file_level_metadata_dydxprotocol_2fsubaccounts_2fquery_2eproto[0]);
}
// ===================================================================

class QuerySubaccountResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QuerySubaccountResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QuerySubaccountResponse, _impl_._has_bits_);
  static const ::dydxprotocol::subaccounts::Subaccount& subaccount(const QuerySubaccountResponse* msg);
  static void set_has_subaccount(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::dydxprotocol::subaccounts::Subaccount&
QuerySubaccountResponse::_Internal::subaccount(const QuerySubaccountResponse* msg) {
  return *msg->_impl_.subaccount_;
}
void QuerySubaccountResponse::clear_subaccount() {
  if (_impl_.subaccount_ != nullptr) _impl_.subaccount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QuerySubaccountResponse::QuerySubaccountResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dydxprotocol.subaccounts.QuerySubaccountResponse)
}
QuerySubaccountResponse::QuerySubaccountResponse(const QuerySubaccountResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QuerySubaccountResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.subaccount_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.subaccount_ = new ::dydxprotocol::subaccounts::Subaccount(*from._impl_.subaccount_);
  }
  // @@protoc_insertion_point(copy_constructor:dydxprotocol.subaccounts.QuerySubaccountResponse)
}

inline void QuerySubaccountResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.subaccount_){nullptr}
  };
}

QuerySubaccountResponse::~QuerySubaccountResponse() {
  // @@protoc_insertion_point(destructor:dydxprotocol.subaccounts.QuerySubaccountResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QuerySubaccountResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.subaccount_;
}

void QuerySubaccountResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QuerySubaccountResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dydxprotocol.subaccounts.QuerySubaccountResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.subaccount_ != nullptr);
    _impl_.subaccount_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QuerySubaccountResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .dydxprotocol.subaccounts.Subaccount subaccount = 1 [(.gogoproto.nullable) = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_subaccount(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QuerySubaccountResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dydxprotocol.subaccounts.QuerySubaccountResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .dydxprotocol.subaccounts.Subaccount subaccount = 1 [(.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::subaccount(this),
        _Internal::subaccount(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dydxprotocol.subaccounts.QuerySubaccountResponse)
  return target;
}

::size_t QuerySubaccountResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dydxprotocol.subaccounts.QuerySubaccountResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .dydxprotocol.subaccounts.Subaccount subaccount = 1 [(.gogoproto.nullable) = false];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.subaccount_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QuerySubaccountResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QuerySubaccountResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QuerySubaccountResponse::GetClassData() const { return &_class_data_; }


void QuerySubaccountResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QuerySubaccountResponse*>(&to_msg);
  auto& from = static_cast<const QuerySubaccountResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dydxprotocol.subaccounts.QuerySubaccountResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_subaccount()->::dydxprotocol::subaccounts::Subaccount::MergeFrom(
        from._internal_subaccount());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QuerySubaccountResponse::CopyFrom(const QuerySubaccountResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dydxprotocol.subaccounts.QuerySubaccountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuerySubaccountResponse::IsInitialized() const {
  return true;
}

void QuerySubaccountResponse::InternalSwap(QuerySubaccountResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.subaccount_, other->_impl_.subaccount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QuerySubaccountResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dydxprotocol_2fsubaccounts_2fquery_2eproto_getter, &descriptor_table_dydxprotocol_2fsubaccounts_2fquery_2eproto_once,
      file_level_metadata_dydxprotocol_2fsubaccounts_2fquery_2eproto[1]);
}
// ===================================================================

class QueryAllSubaccountRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryAllSubaccountRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryAllSubaccountRequest, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageRequest& pagination(const QueryAllSubaccountRequest* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageRequest&
QueryAllSubaccountRequest::_Internal::pagination(const QueryAllSubaccountRequest* msg) {
  return *msg->_impl_.pagination_;
}
void QueryAllSubaccountRequest::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryAllSubaccountRequest::QueryAllSubaccountRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dydxprotocol.subaccounts.QueryAllSubaccountRequest)
}
QueryAllSubaccountRequest::QueryAllSubaccountRequest(const QueryAllSubaccountRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryAllSubaccountRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageRequest(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:dydxprotocol.subaccounts.QueryAllSubaccountRequest)
}

inline void QueryAllSubaccountRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.pagination_){nullptr}
  };
}

QueryAllSubaccountRequest::~QueryAllSubaccountRequest() {
  // @@protoc_insertion_point(destructor:dydxprotocol.subaccounts.QueryAllSubaccountRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryAllSubaccountRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryAllSubaccountRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryAllSubaccountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dydxprotocol.subaccounts.QueryAllSubaccountRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryAllSubaccountRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.base.query.v1beta1.PageRequest pagination = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryAllSubaccountRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dydxprotocol.subaccounts.QueryAllSubaccountRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageRequest pagination = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dydxprotocol.subaccounts.QueryAllSubaccountRequest)
  return target;
}

::size_t QueryAllSubaccountRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dydxprotocol.subaccounts.QueryAllSubaccountRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.base.query.v1beta1.PageRequest pagination = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryAllSubaccountRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryAllSubaccountRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryAllSubaccountRequest::GetClassData() const { return &_class_data_; }


void QueryAllSubaccountRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryAllSubaccountRequest*>(&to_msg);
  auto& from = static_cast<const QueryAllSubaccountRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dydxprotocol.subaccounts.QueryAllSubaccountRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageRequest::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryAllSubaccountRequest::CopyFrom(const QueryAllSubaccountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dydxprotocol.subaccounts.QueryAllSubaccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAllSubaccountRequest::IsInitialized() const {
  return true;
}

void QueryAllSubaccountRequest::InternalSwap(QueryAllSubaccountRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryAllSubaccountRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dydxprotocol_2fsubaccounts_2fquery_2eproto_getter, &descriptor_table_dydxprotocol_2fsubaccounts_2fquery_2eproto_once,
      file_level_metadata_dydxprotocol_2fsubaccounts_2fquery_2eproto[2]);
}
// ===================================================================

class QuerySubaccountAllResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QuerySubaccountAllResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QuerySubaccountAllResponse, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageResponse& pagination(const QuerySubaccountAllResponse* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageResponse&
QuerySubaccountAllResponse::_Internal::pagination(const QuerySubaccountAllResponse* msg) {
  return *msg->_impl_.pagination_;
}
void QuerySubaccountAllResponse::clear_subaccount() {
  _internal_mutable_subaccount()->Clear();
}
void QuerySubaccountAllResponse::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QuerySubaccountAllResponse::QuerySubaccountAllResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dydxprotocol.subaccounts.QuerySubaccountAllResponse)
}
QuerySubaccountAllResponse::QuerySubaccountAllResponse(const QuerySubaccountAllResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QuerySubaccountAllResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.subaccount_){from._impl_.subaccount_}
    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageResponse(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:dydxprotocol.subaccounts.QuerySubaccountAllResponse)
}

inline void QuerySubaccountAllResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.subaccount_){arena}
    , decltype(_impl_.pagination_){nullptr}
  };
}

QuerySubaccountAllResponse::~QuerySubaccountAllResponse() {
  // @@protoc_insertion_point(destructor:dydxprotocol.subaccounts.QuerySubaccountAllResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QuerySubaccountAllResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_subaccount()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QuerySubaccountAllResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QuerySubaccountAllResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dydxprotocol.subaccounts.QuerySubaccountAllResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_subaccount()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QuerySubaccountAllResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .dydxprotocol.subaccounts.Subaccount subaccount = 1 [(.gogoproto.nullable) = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_subaccount(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageResponse pagination = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QuerySubaccountAllResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dydxprotocol.subaccounts.QuerySubaccountAllResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dydxprotocol.subaccounts.Subaccount subaccount = 1 [(.gogoproto.nullable) = false];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_subaccount_size()); i < n; i++) {
    const auto& repfield = this->_internal_subaccount(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dydxprotocol.subaccounts.QuerySubaccountAllResponse)
  return target;
}

::size_t QuerySubaccountAllResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dydxprotocol.subaccounts.QuerySubaccountAllResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dydxprotocol.subaccounts.Subaccount subaccount = 1 [(.gogoproto.nullable) = false];
  total_size += 1UL * this->_internal_subaccount_size();
  for (const auto& msg : this->_internal_subaccount()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .cosmos.base.query.v1beta1.PageResponse pagination = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QuerySubaccountAllResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QuerySubaccountAllResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QuerySubaccountAllResponse::GetClassData() const { return &_class_data_; }


void QuerySubaccountAllResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QuerySubaccountAllResponse*>(&to_msg);
  auto& from = static_cast<const QuerySubaccountAllResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dydxprotocol.subaccounts.QuerySubaccountAllResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_subaccount()->MergeFrom(from._internal_subaccount());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageResponse::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QuerySubaccountAllResponse::CopyFrom(const QuerySubaccountAllResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dydxprotocol.subaccounts.QuerySubaccountAllResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuerySubaccountAllResponse::IsInitialized() const {
  return true;
}

void QuerySubaccountAllResponse::InternalSwap(QuerySubaccountAllResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_subaccount()->InternalSwap(other->_internal_mutable_subaccount());
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QuerySubaccountAllResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dydxprotocol_2fsubaccounts_2fquery_2eproto_getter, &descriptor_table_dydxprotocol_2fsubaccounts_2fquery_2eproto_once,
      file_level_metadata_dydxprotocol_2fsubaccounts_2fquery_2eproto[3]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace subaccounts
}  // namespace dydxprotocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::dydxprotocol::subaccounts::QueryGetSubaccountRequest*
Arena::CreateMaybeMessage< ::dydxprotocol::subaccounts::QueryGetSubaccountRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dydxprotocol::subaccounts::QueryGetSubaccountRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dydxprotocol::subaccounts::QuerySubaccountResponse*
Arena::CreateMaybeMessage< ::dydxprotocol::subaccounts::QuerySubaccountResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dydxprotocol::subaccounts::QuerySubaccountResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dydxprotocol::subaccounts::QueryAllSubaccountRequest*
Arena::CreateMaybeMessage< ::dydxprotocol::subaccounts::QueryAllSubaccountRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dydxprotocol::subaccounts::QueryAllSubaccountRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dydxprotocol::subaccounts::QuerySubaccountAllResponse*
Arena::CreateMaybeMessage< ::dydxprotocol::subaccounts::QuerySubaccountAllResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dydxprotocol::subaccounts::QuerySubaccountAllResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
