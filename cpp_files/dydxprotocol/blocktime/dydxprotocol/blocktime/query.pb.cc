// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dydxprotocol/blocktime/query.proto

#include "dydxprotocol/blocktime/query.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace dydxprotocol {
namespace blocktime {
template <typename>
PROTOBUF_CONSTEXPR QueryDowntimeParamsRequest::QueryDowntimeParamsRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryDowntimeParamsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDowntimeParamsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDowntimeParamsRequestDefaultTypeInternal() {}
  union {
    QueryDowntimeParamsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDowntimeParamsRequestDefaultTypeInternal _QueryDowntimeParamsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryDowntimeParamsResponse::QueryDowntimeParamsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.params_)*/nullptr} {}
struct QueryDowntimeParamsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDowntimeParamsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDowntimeParamsResponseDefaultTypeInternal() {}
  union {
    QueryDowntimeParamsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDowntimeParamsResponseDefaultTypeInternal _QueryDowntimeParamsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryPreviousBlockInfoRequest::QueryPreviousBlockInfoRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryPreviousBlockInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryPreviousBlockInfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryPreviousBlockInfoRequestDefaultTypeInternal() {}
  union {
    QueryPreviousBlockInfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryPreviousBlockInfoRequestDefaultTypeInternal _QueryPreviousBlockInfoRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryPreviousBlockInfoResponse::QueryPreviousBlockInfoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.info_)*/nullptr} {}
struct QueryPreviousBlockInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryPreviousBlockInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryPreviousBlockInfoResponseDefaultTypeInternal() {}
  union {
    QueryPreviousBlockInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryPreviousBlockInfoResponseDefaultTypeInternal _QueryPreviousBlockInfoResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryAllDowntimeInfoRequest::QueryAllDowntimeInfoRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryAllDowntimeInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAllDowntimeInfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAllDowntimeInfoRequestDefaultTypeInternal() {}
  union {
    QueryAllDowntimeInfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAllDowntimeInfoRequestDefaultTypeInternal _QueryAllDowntimeInfoRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryAllDowntimeInfoResponse::QueryAllDowntimeInfoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.info_)*/nullptr} {}
struct QueryAllDowntimeInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAllDowntimeInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAllDowntimeInfoResponseDefaultTypeInternal() {}
  union {
    QueryAllDowntimeInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAllDowntimeInfoResponseDefaultTypeInternal _QueryAllDowntimeInfoResponse_default_instance_;
}  // namespace blocktime
}  // namespace dydxprotocol
static ::_pb::Metadata file_level_metadata_dydxprotocol_2fblocktime_2fquery_2eproto[6];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_dydxprotocol_2fblocktime_2fquery_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_dydxprotocol_2fblocktime_2fquery_2eproto = nullptr;
const ::uint32_t TableStruct_dydxprotocol_2fblocktime_2fquery_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::blocktime::QueryDowntimeParamsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::blocktime::QueryDowntimeParamsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::blocktime::QueryDowntimeParamsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::blocktime::QueryDowntimeParamsResponse, _impl_.params_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::blocktime::QueryPreviousBlockInfoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::blocktime::QueryPreviousBlockInfoResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::blocktime::QueryPreviousBlockInfoResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::blocktime::QueryPreviousBlockInfoResponse, _impl_.info_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::blocktime::QueryAllDowntimeInfoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::blocktime::QueryAllDowntimeInfoResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::blocktime::QueryAllDowntimeInfoResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::blocktime::QueryAllDowntimeInfoResponse, _impl_.info_),
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::dydxprotocol::blocktime::QueryDowntimeParamsRequest)},
        { 8, 17, -1, sizeof(::dydxprotocol::blocktime::QueryDowntimeParamsResponse)},
        { 18, -1, -1, sizeof(::dydxprotocol::blocktime::QueryPreviousBlockInfoRequest)},
        { 26, 35, -1, sizeof(::dydxprotocol::blocktime::QueryPreviousBlockInfoResponse)},
        { 36, -1, -1, sizeof(::dydxprotocol::blocktime::QueryAllDowntimeInfoRequest)},
        { 44, 53, -1, sizeof(::dydxprotocol::blocktime::QueryAllDowntimeInfoResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::dydxprotocol::blocktime::_QueryDowntimeParamsRequest_default_instance_._instance,
    &::dydxprotocol::blocktime::_QueryDowntimeParamsResponse_default_instance_._instance,
    &::dydxprotocol::blocktime::_QueryPreviousBlockInfoRequest_default_instance_._instance,
    &::dydxprotocol::blocktime::_QueryPreviousBlockInfoResponse_default_instance_._instance,
    &::dydxprotocol::blocktime::_QueryAllDowntimeInfoRequest_default_instance_._instance,
    &::dydxprotocol::blocktime::_QueryAllDowntimeInfoResponse_default_instance_._instance,
};
const char descriptor_table_protodef_dydxprotocol_2fblocktime_2fquery_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\"dydxprotocol/blocktime/query.proto\022\026dy"
    "dxprotocol.blocktime\032\024gogoproto/gogo.pro"
    "to\032\034google/api/annotations.proto\032&dydxpr"
    "otocol/blocktime/blocktime.proto\032#dydxpr"
    "otocol/blocktime/params.proto\"\034\n\032QueryDo"
    "wntimeParamsRequest\"[\n\033QueryDowntimePara"
    "msResponse\022<\n\006params\030\001 \001(\0132&.dydxprotoco"
    "l.blocktime.DowntimeParamsB\004\310\336\037\000\"\037\n\035Quer"
    "yPreviousBlockInfoRequest\"Q\n\036QueryPrevio"
    "usBlockInfoResponse\022/\n\004info\030\001 \001(\0132!.dydx"
    "protocol.blocktime.BlockInfo\"\035\n\033QueryAll"
    "DowntimeInfoRequest\"U\n\034QueryAllDowntimeI"
    "nfoResponse\0225\n\004info\030\001 \001(\0132\'.dydxprotocol"
    ".blocktime.AllDowntimeInfo2\272\003\n\005Query\022\255\001\n"
    "\016DowntimeParams\0222.dydxprotocol.blocktime"
    ".QueryDowntimeParamsRequest\0323.dydxprotoc"
    "ol.blocktime.QueryDowntimeParamsResponse"
    "\"2\202\323\344\223\002,\022*/dydxprotocol/v4/blocktime/dow"
    "ntime_params\022\202\001\n\021PreviousBlockInfo\0225.dyd"
    "xprotocol.blocktime.QueryPreviousBlockIn"
    "foRequest\0326.dydxprotocol.blocktime.Query"
    "PreviousBlockInfoResponse\022|\n\017AllDowntime"
    "Info\0223.dydxprotocol.blocktime.QueryAllDo"
    "wntimeInfoRequest\0324.dydxprotocol.blockti"
    "me.QueryAllDowntimeInfoResponseB=Z;githu"
    "b.com/dydxprotocol/v4-chain/protocol/x/b"
    "locktime/typesb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_dydxprotocol_2fblocktime_2fquery_2eproto_deps[4] =
    {
        &::descriptor_table_dydxprotocol_2fblocktime_2fblocktime_2eproto,
        &::descriptor_table_dydxprotocol_2fblocktime_2fparams_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::absl::once_flag descriptor_table_dydxprotocol_2fblocktime_2fquery_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_dydxprotocol_2fblocktime_2fquery_2eproto = {
    false,
    false,
    1062,
    descriptor_table_protodef_dydxprotocol_2fblocktime_2fquery_2eproto,
    "dydxprotocol/blocktime/query.proto",
    &descriptor_table_dydxprotocol_2fblocktime_2fquery_2eproto_once,
    descriptor_table_dydxprotocol_2fblocktime_2fquery_2eproto_deps,
    4,
    6,
    schemas,
    file_default_instances,
    TableStruct_dydxprotocol_2fblocktime_2fquery_2eproto::offsets,
    file_level_metadata_dydxprotocol_2fblocktime_2fquery_2eproto,
    file_level_enum_descriptors_dydxprotocol_2fblocktime_2fquery_2eproto,
    file_level_service_descriptors_dydxprotocol_2fblocktime_2fquery_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_dydxprotocol_2fblocktime_2fquery_2eproto_getter() {
  return &descriptor_table_dydxprotocol_2fblocktime_2fquery_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_dydxprotocol_2fblocktime_2fquery_2eproto(&descriptor_table_dydxprotocol_2fblocktime_2fquery_2eproto);
namespace dydxprotocol {
namespace blocktime {
// ===================================================================

class QueryDowntimeParamsRequest::_Internal {
 public:
};

QueryDowntimeParamsRequest::QueryDowntimeParamsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:dydxprotocol.blocktime.QueryDowntimeParamsRequest)
}
QueryDowntimeParamsRequest::QueryDowntimeParamsRequest(const QueryDowntimeParamsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryDowntimeParamsRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dydxprotocol.blocktime.QueryDowntimeParamsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDowntimeParamsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDowntimeParamsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryDowntimeParamsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dydxprotocol_2fblocktime_2fquery_2eproto_getter, &descriptor_table_dydxprotocol_2fblocktime_2fquery_2eproto_once,
      file_level_metadata_dydxprotocol_2fblocktime_2fquery_2eproto[0]);
}
// ===================================================================

class QueryDowntimeParamsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryDowntimeParamsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryDowntimeParamsResponse, _impl_._has_bits_);
  static const ::dydxprotocol::blocktime::DowntimeParams& params(const QueryDowntimeParamsResponse* msg);
  static void set_has_params(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::dydxprotocol::blocktime::DowntimeParams&
QueryDowntimeParamsResponse::_Internal::params(const QueryDowntimeParamsResponse* msg) {
  return *msg->_impl_.params_;
}
void QueryDowntimeParamsResponse::clear_params() {
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryDowntimeParamsResponse::QueryDowntimeParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dydxprotocol.blocktime.QueryDowntimeParamsResponse)
}
QueryDowntimeParamsResponse::QueryDowntimeParamsResponse(const QueryDowntimeParamsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryDowntimeParamsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.params_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.params_ = new ::dydxprotocol::blocktime::DowntimeParams(*from._impl_.params_);
  }
  // @@protoc_insertion_point(copy_constructor:dydxprotocol.blocktime.QueryDowntimeParamsResponse)
}

inline void QueryDowntimeParamsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.params_){nullptr}
  };
}

QueryDowntimeParamsResponse::~QueryDowntimeParamsResponse() {
  // @@protoc_insertion_point(destructor:dydxprotocol.blocktime.QueryDowntimeParamsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryDowntimeParamsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void QueryDowntimeParamsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryDowntimeParamsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dydxprotocol.blocktime.QueryDowntimeParamsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.params_ != nullptr);
    _impl_.params_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryDowntimeParamsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .dydxprotocol.blocktime.DowntimeParams params = 1 [(.gogoproto.nullable) = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryDowntimeParamsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dydxprotocol.blocktime.QueryDowntimeParamsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .dydxprotocol.blocktime.DowntimeParams params = 1 [(.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dydxprotocol.blocktime.QueryDowntimeParamsResponse)
  return target;
}

::size_t QueryDowntimeParamsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dydxprotocol.blocktime.QueryDowntimeParamsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .dydxprotocol.blocktime.DowntimeParams params = 1 [(.gogoproto.nullable) = false];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryDowntimeParamsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryDowntimeParamsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryDowntimeParamsResponse::GetClassData() const { return &_class_data_; }


void QueryDowntimeParamsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryDowntimeParamsResponse*>(&to_msg);
  auto& from = static_cast<const QueryDowntimeParamsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dydxprotocol.blocktime.QueryDowntimeParamsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_params()->::dydxprotocol::blocktime::DowntimeParams::MergeFrom(
        from._internal_params());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDowntimeParamsResponse::CopyFrom(const QueryDowntimeParamsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dydxprotocol.blocktime.QueryDowntimeParamsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryDowntimeParamsResponse::IsInitialized() const {
  return true;
}

void QueryDowntimeParamsResponse::InternalSwap(QueryDowntimeParamsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.params_, other->_impl_.params_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryDowntimeParamsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dydxprotocol_2fblocktime_2fquery_2eproto_getter, &descriptor_table_dydxprotocol_2fblocktime_2fquery_2eproto_once,
      file_level_metadata_dydxprotocol_2fblocktime_2fquery_2eproto[1]);
}
// ===================================================================

class QueryPreviousBlockInfoRequest::_Internal {
 public:
};

QueryPreviousBlockInfoRequest::QueryPreviousBlockInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:dydxprotocol.blocktime.QueryPreviousBlockInfoRequest)
}
QueryPreviousBlockInfoRequest::QueryPreviousBlockInfoRequest(const QueryPreviousBlockInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryPreviousBlockInfoRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dydxprotocol.blocktime.QueryPreviousBlockInfoRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryPreviousBlockInfoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryPreviousBlockInfoRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryPreviousBlockInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dydxprotocol_2fblocktime_2fquery_2eproto_getter, &descriptor_table_dydxprotocol_2fblocktime_2fquery_2eproto_once,
      file_level_metadata_dydxprotocol_2fblocktime_2fquery_2eproto[2]);
}
// ===================================================================

class QueryPreviousBlockInfoResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryPreviousBlockInfoResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryPreviousBlockInfoResponse, _impl_._has_bits_);
  static const ::dydxprotocol::blocktime::BlockInfo& info(const QueryPreviousBlockInfoResponse* msg);
  static void set_has_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::dydxprotocol::blocktime::BlockInfo&
QueryPreviousBlockInfoResponse::_Internal::info(const QueryPreviousBlockInfoResponse* msg) {
  return *msg->_impl_.info_;
}
void QueryPreviousBlockInfoResponse::clear_info() {
  if (_impl_.info_ != nullptr) _impl_.info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryPreviousBlockInfoResponse::QueryPreviousBlockInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dydxprotocol.blocktime.QueryPreviousBlockInfoResponse)
}
QueryPreviousBlockInfoResponse::QueryPreviousBlockInfoResponse(const QueryPreviousBlockInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryPreviousBlockInfoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.info_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.info_ = new ::dydxprotocol::blocktime::BlockInfo(*from._impl_.info_);
  }
  // @@protoc_insertion_point(copy_constructor:dydxprotocol.blocktime.QueryPreviousBlockInfoResponse)
}

inline void QueryPreviousBlockInfoResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.info_){nullptr}
  };
}

QueryPreviousBlockInfoResponse::~QueryPreviousBlockInfoResponse() {
  // @@protoc_insertion_point(destructor:dydxprotocol.blocktime.QueryPreviousBlockInfoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryPreviousBlockInfoResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.info_;
}

void QueryPreviousBlockInfoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryPreviousBlockInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dydxprotocol.blocktime.QueryPreviousBlockInfoResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.info_ != nullptr);
    _impl_.info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryPreviousBlockInfoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .dydxprotocol.blocktime.BlockInfo info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryPreviousBlockInfoResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dydxprotocol.blocktime.QueryPreviousBlockInfoResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .dydxprotocol.blocktime.BlockInfo info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::info(this),
        _Internal::info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dydxprotocol.blocktime.QueryPreviousBlockInfoResponse)
  return target;
}

::size_t QueryPreviousBlockInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dydxprotocol.blocktime.QueryPreviousBlockInfoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .dydxprotocol.blocktime.BlockInfo info = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryPreviousBlockInfoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryPreviousBlockInfoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryPreviousBlockInfoResponse::GetClassData() const { return &_class_data_; }


void QueryPreviousBlockInfoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryPreviousBlockInfoResponse*>(&to_msg);
  auto& from = static_cast<const QueryPreviousBlockInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dydxprotocol.blocktime.QueryPreviousBlockInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_info()->::dydxprotocol::blocktime::BlockInfo::MergeFrom(
        from._internal_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryPreviousBlockInfoResponse::CopyFrom(const QueryPreviousBlockInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dydxprotocol.blocktime.QueryPreviousBlockInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryPreviousBlockInfoResponse::IsInitialized() const {
  return true;
}

void QueryPreviousBlockInfoResponse::InternalSwap(QueryPreviousBlockInfoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.info_, other->_impl_.info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryPreviousBlockInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dydxprotocol_2fblocktime_2fquery_2eproto_getter, &descriptor_table_dydxprotocol_2fblocktime_2fquery_2eproto_once,
      file_level_metadata_dydxprotocol_2fblocktime_2fquery_2eproto[3]);
}
// ===================================================================

class QueryAllDowntimeInfoRequest::_Internal {
 public:
};

QueryAllDowntimeInfoRequest::QueryAllDowntimeInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:dydxprotocol.blocktime.QueryAllDowntimeInfoRequest)
}
QueryAllDowntimeInfoRequest::QueryAllDowntimeInfoRequest(const QueryAllDowntimeInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryAllDowntimeInfoRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dydxprotocol.blocktime.QueryAllDowntimeInfoRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryAllDowntimeInfoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryAllDowntimeInfoRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryAllDowntimeInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dydxprotocol_2fblocktime_2fquery_2eproto_getter, &descriptor_table_dydxprotocol_2fblocktime_2fquery_2eproto_once,
      file_level_metadata_dydxprotocol_2fblocktime_2fquery_2eproto[4]);
}
// ===================================================================

class QueryAllDowntimeInfoResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryAllDowntimeInfoResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryAllDowntimeInfoResponse, _impl_._has_bits_);
  static const ::dydxprotocol::blocktime::AllDowntimeInfo& info(const QueryAllDowntimeInfoResponse* msg);
  static void set_has_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::dydxprotocol::blocktime::AllDowntimeInfo&
QueryAllDowntimeInfoResponse::_Internal::info(const QueryAllDowntimeInfoResponse* msg) {
  return *msg->_impl_.info_;
}
void QueryAllDowntimeInfoResponse::clear_info() {
  if (_impl_.info_ != nullptr) _impl_.info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryAllDowntimeInfoResponse::QueryAllDowntimeInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dydxprotocol.blocktime.QueryAllDowntimeInfoResponse)
}
QueryAllDowntimeInfoResponse::QueryAllDowntimeInfoResponse(const QueryAllDowntimeInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryAllDowntimeInfoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.info_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.info_ = new ::dydxprotocol::blocktime::AllDowntimeInfo(*from._impl_.info_);
  }
  // @@protoc_insertion_point(copy_constructor:dydxprotocol.blocktime.QueryAllDowntimeInfoResponse)
}

inline void QueryAllDowntimeInfoResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.info_){nullptr}
  };
}

QueryAllDowntimeInfoResponse::~QueryAllDowntimeInfoResponse() {
  // @@protoc_insertion_point(destructor:dydxprotocol.blocktime.QueryAllDowntimeInfoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryAllDowntimeInfoResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.info_;
}

void QueryAllDowntimeInfoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryAllDowntimeInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dydxprotocol.blocktime.QueryAllDowntimeInfoResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.info_ != nullptr);
    _impl_.info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryAllDowntimeInfoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .dydxprotocol.blocktime.AllDowntimeInfo info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryAllDowntimeInfoResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dydxprotocol.blocktime.QueryAllDowntimeInfoResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .dydxprotocol.blocktime.AllDowntimeInfo info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::info(this),
        _Internal::info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dydxprotocol.blocktime.QueryAllDowntimeInfoResponse)
  return target;
}

::size_t QueryAllDowntimeInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dydxprotocol.blocktime.QueryAllDowntimeInfoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .dydxprotocol.blocktime.AllDowntimeInfo info = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryAllDowntimeInfoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryAllDowntimeInfoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryAllDowntimeInfoResponse::GetClassData() const { return &_class_data_; }


void QueryAllDowntimeInfoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryAllDowntimeInfoResponse*>(&to_msg);
  auto& from = static_cast<const QueryAllDowntimeInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dydxprotocol.blocktime.QueryAllDowntimeInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_info()->::dydxprotocol::blocktime::AllDowntimeInfo::MergeFrom(
        from._internal_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryAllDowntimeInfoResponse::CopyFrom(const QueryAllDowntimeInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dydxprotocol.blocktime.QueryAllDowntimeInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAllDowntimeInfoResponse::IsInitialized() const {
  return true;
}

void QueryAllDowntimeInfoResponse::InternalSwap(QueryAllDowntimeInfoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.info_, other->_impl_.info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryAllDowntimeInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dydxprotocol_2fblocktime_2fquery_2eproto_getter, &descriptor_table_dydxprotocol_2fblocktime_2fquery_2eproto_once,
      file_level_metadata_dydxprotocol_2fblocktime_2fquery_2eproto[5]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace blocktime
}  // namespace dydxprotocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::dydxprotocol::blocktime::QueryDowntimeParamsRequest*
Arena::CreateMaybeMessage< ::dydxprotocol::blocktime::QueryDowntimeParamsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dydxprotocol::blocktime::QueryDowntimeParamsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dydxprotocol::blocktime::QueryDowntimeParamsResponse*
Arena::CreateMaybeMessage< ::dydxprotocol::blocktime::QueryDowntimeParamsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dydxprotocol::blocktime::QueryDowntimeParamsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dydxprotocol::blocktime::QueryPreviousBlockInfoRequest*
Arena::CreateMaybeMessage< ::dydxprotocol::blocktime::QueryPreviousBlockInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dydxprotocol::blocktime::QueryPreviousBlockInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dydxprotocol::blocktime::QueryPreviousBlockInfoResponse*
Arena::CreateMaybeMessage< ::dydxprotocol::blocktime::QueryPreviousBlockInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dydxprotocol::blocktime::QueryPreviousBlockInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dydxprotocol::blocktime::QueryAllDowntimeInfoRequest*
Arena::CreateMaybeMessage< ::dydxprotocol::blocktime::QueryAllDowntimeInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dydxprotocol::blocktime::QueryAllDowntimeInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dydxprotocol::blocktime::QueryAllDowntimeInfoResponse*
Arena::CreateMaybeMessage< ::dydxprotocol::blocktime::QueryAllDowntimeInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dydxprotocol::blocktime::QueryAllDowntimeInfoResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
