// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dydxprotocol/delaymsg/query.proto

#include "dydxprotocol/delaymsg/query.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace dydxprotocol {
namespace delaymsg {
template <typename>
PROTOBUF_CONSTEXPR QueryNumMessagesRequest::QueryNumMessagesRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryNumMessagesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryNumMessagesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryNumMessagesRequestDefaultTypeInternal() {}
  union {
    QueryNumMessagesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryNumMessagesRequestDefaultTypeInternal _QueryNumMessagesRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryNumMessagesResponse::QueryNumMessagesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.num_messages_)*/ 0u

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryNumMessagesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryNumMessagesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryNumMessagesResponseDefaultTypeInternal() {}
  union {
    QueryNumMessagesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryNumMessagesResponseDefaultTypeInternal _QueryNumMessagesResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryMessageRequest::QueryMessageRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/ 0u

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryMessageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryMessageRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryMessageRequestDefaultTypeInternal() {}
  union {
    QueryMessageRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryMessageRequestDefaultTypeInternal _QueryMessageRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryMessageResponse::QueryMessageResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.message_)*/nullptr} {}
struct QueryMessageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryMessageResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryMessageResponseDefaultTypeInternal() {}
  union {
    QueryMessageResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryMessageResponseDefaultTypeInternal _QueryMessageResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryBlockMessageIdsRequest::QueryBlockMessageIdsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.block_height_)*/ ::int64_t{0}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryBlockMessageIdsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryBlockMessageIdsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryBlockMessageIdsRequestDefaultTypeInternal() {}
  union {
    QueryBlockMessageIdsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryBlockMessageIdsRequestDefaultTypeInternal _QueryBlockMessageIdsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryBlockMessageIdsResponse::QueryBlockMessageIdsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_ids_)*/ {}
  ,/* _impl_._message_ids_cached_byte_size_ = */ { 0 }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryBlockMessageIdsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryBlockMessageIdsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryBlockMessageIdsResponseDefaultTypeInternal() {}
  union {
    QueryBlockMessageIdsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryBlockMessageIdsResponseDefaultTypeInternal _QueryBlockMessageIdsResponse_default_instance_;
}  // namespace delaymsg
}  // namespace dydxprotocol
static ::_pb::Metadata file_level_metadata_dydxprotocol_2fdelaymsg_2fquery_2eproto[6];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_dydxprotocol_2fdelaymsg_2fquery_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_dydxprotocol_2fdelaymsg_2fquery_2eproto = nullptr;
const ::uint32_t TableStruct_dydxprotocol_2fdelaymsg_2fquery_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::delaymsg::QueryNumMessagesRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::delaymsg::QueryNumMessagesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::delaymsg::QueryNumMessagesResponse, _impl_.num_messages_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::delaymsg::QueryMessageRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::delaymsg::QueryMessageRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::delaymsg::QueryMessageResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::delaymsg::QueryMessageResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::delaymsg::QueryMessageResponse, _impl_.message_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::delaymsg::QueryBlockMessageIdsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::delaymsg::QueryBlockMessageIdsRequest, _impl_.block_height_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::delaymsg::QueryBlockMessageIdsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::delaymsg::QueryBlockMessageIdsResponse, _impl_.message_ids_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::dydxprotocol::delaymsg::QueryNumMessagesRequest)},
        { 8, -1, -1, sizeof(::dydxprotocol::delaymsg::QueryNumMessagesResponse)},
        { 17, -1, -1, sizeof(::dydxprotocol::delaymsg::QueryMessageRequest)},
        { 26, 35, -1, sizeof(::dydxprotocol::delaymsg::QueryMessageResponse)},
        { 36, -1, -1, sizeof(::dydxprotocol::delaymsg::QueryBlockMessageIdsRequest)},
        { 45, -1, -1, sizeof(::dydxprotocol::delaymsg::QueryBlockMessageIdsResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::dydxprotocol::delaymsg::_QueryNumMessagesRequest_default_instance_._instance,
    &::dydxprotocol::delaymsg::_QueryNumMessagesResponse_default_instance_._instance,
    &::dydxprotocol::delaymsg::_QueryMessageRequest_default_instance_._instance,
    &::dydxprotocol::delaymsg::_QueryMessageResponse_default_instance_._instance,
    &::dydxprotocol::delaymsg::_QueryBlockMessageIdsRequest_default_instance_._instance,
    &::dydxprotocol::delaymsg::_QueryBlockMessageIdsResponse_default_instance_._instance,
};
const char descriptor_table_protodef_dydxprotocol_2fdelaymsg_2fquery_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n!dydxprotocol/delaymsg/query.proto\022\025dyd"
    "xprotocol.delaymsg\032\034google/api/annotatio"
    "ns.proto\032+dydxprotocol/delaymsg/delayed_"
    "message.proto\"\031\n\027QueryNumMessagesRequest"
    "\"0\n\030QueryNumMessagesResponse\022\024\n\014num_mess"
    "ages\030\001 \001(\r\"!\n\023QueryMessageRequest\022\n\n\002id\030"
    "\001 \001(\r\"N\n\024QueryMessageResponse\0226\n\007message"
    "\030\001 \001(\0132%.dydxprotocol.delaymsg.DelayedMe"
    "ssage\"3\n\033QueryBlockMessageIdsRequest\022\024\n\014"
    "block_height\030\001 \001(\022\"3\n\034QueryBlockMessageI"
    "dsResponse\022\023\n\013message_ids\030\001 \003(\r2\372\003\n\005Quer"
    "y\022\232\001\n\013NumMessages\022..dydxprotocol.delayms"
    "g.QueryNumMessagesRequest\032/.dydxprotocol"
    ".delaymsg.QueryNumMessagesResponse\"*\202\323\344\223"
    "\002$\022\"/dydxprotocol/v4/delaymsg/messages\022\222"
    "\001\n\007Message\022*.dydxprotocol.delaymsg.Query"
    "MessageRequest\032+.dydxprotocol.delaymsg.Q"
    "ueryMessageResponse\".\202\323\344\223\002(\022&/dydxprotoc"
    "ol/v4/delaymsg/message/{id}\022\276\001\n\017BlockMes"
    "sageIds\0222.dydxprotocol.delaymsg.QueryBlo"
    "ckMessageIdsRequest\0323.dydxprotocol.delay"
    "msg.QueryBlockMessageIdsResponse\"B\202\323\344\223\002<"
    "\022:/dydxprotocol/v4/delaymsg/block/messag"
    "e_ids/{block_height}B<Z:github.com/dydxp"
    "rotocol/v4-chain/protocol/x/delaymsg/typ"
    "esb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_dydxprotocol_2fdelaymsg_2fquery_2eproto_deps[2] =
    {
        &::descriptor_table_dydxprotocol_2fdelaymsg_2fdelayed_5fmessage_2eproto,
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::absl::once_flag descriptor_table_dydxprotocol_2fdelaymsg_2fquery_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_dydxprotocol_2fdelaymsg_2fquery_2eproto = {
    false,
    false,
    1010,
    descriptor_table_protodef_dydxprotocol_2fdelaymsg_2fquery_2eproto,
    "dydxprotocol/delaymsg/query.proto",
    &descriptor_table_dydxprotocol_2fdelaymsg_2fquery_2eproto_once,
    descriptor_table_dydxprotocol_2fdelaymsg_2fquery_2eproto_deps,
    2,
    6,
    schemas,
    file_default_instances,
    TableStruct_dydxprotocol_2fdelaymsg_2fquery_2eproto::offsets,
    file_level_metadata_dydxprotocol_2fdelaymsg_2fquery_2eproto,
    file_level_enum_descriptors_dydxprotocol_2fdelaymsg_2fquery_2eproto,
    file_level_service_descriptors_dydxprotocol_2fdelaymsg_2fquery_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_dydxprotocol_2fdelaymsg_2fquery_2eproto_getter() {
  return &descriptor_table_dydxprotocol_2fdelaymsg_2fquery_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_dydxprotocol_2fdelaymsg_2fquery_2eproto(&descriptor_table_dydxprotocol_2fdelaymsg_2fquery_2eproto);
namespace dydxprotocol {
namespace delaymsg {
// ===================================================================

class QueryNumMessagesRequest::_Internal {
 public:
};

QueryNumMessagesRequest::QueryNumMessagesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:dydxprotocol.delaymsg.QueryNumMessagesRequest)
}
QueryNumMessagesRequest::QueryNumMessagesRequest(const QueryNumMessagesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryNumMessagesRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dydxprotocol.delaymsg.QueryNumMessagesRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryNumMessagesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryNumMessagesRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryNumMessagesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dydxprotocol_2fdelaymsg_2fquery_2eproto_getter, &descriptor_table_dydxprotocol_2fdelaymsg_2fquery_2eproto_once,
      file_level_metadata_dydxprotocol_2fdelaymsg_2fquery_2eproto[0]);
}
// ===================================================================

class QueryNumMessagesResponse::_Internal {
 public:
};

QueryNumMessagesResponse::QueryNumMessagesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dydxprotocol.delaymsg.QueryNumMessagesResponse)
}
QueryNumMessagesResponse::QueryNumMessagesResponse(const QueryNumMessagesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dydxprotocol.delaymsg.QueryNumMessagesResponse)
}

inline void QueryNumMessagesResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.num_messages_) { 0u }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryNumMessagesResponse::~QueryNumMessagesResponse() {
  // @@protoc_insertion_point(destructor:dydxprotocol.delaymsg.QueryNumMessagesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryNumMessagesResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void QueryNumMessagesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryNumMessagesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dydxprotocol.delaymsg.QueryNumMessagesResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.num_messages_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryNumMessagesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 num_messages = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.num_messages_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryNumMessagesResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dydxprotocol.delaymsg.QueryNumMessagesResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 num_messages = 1;
  if (this->_internal_num_messages() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_num_messages(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dydxprotocol.delaymsg.QueryNumMessagesResponse)
  return target;
}

::size_t QueryNumMessagesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dydxprotocol.delaymsg.QueryNumMessagesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 num_messages = 1;
  if (this->_internal_num_messages() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_num_messages());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryNumMessagesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryNumMessagesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryNumMessagesResponse::GetClassData() const { return &_class_data_; }


void QueryNumMessagesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryNumMessagesResponse*>(&to_msg);
  auto& from = static_cast<const QueryNumMessagesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dydxprotocol.delaymsg.QueryNumMessagesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_num_messages() != 0) {
    _this->_internal_set_num_messages(from._internal_num_messages());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryNumMessagesResponse::CopyFrom(const QueryNumMessagesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dydxprotocol.delaymsg.QueryNumMessagesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryNumMessagesResponse::IsInitialized() const {
  return true;
}

void QueryNumMessagesResponse::InternalSwap(QueryNumMessagesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.num_messages_, other->_impl_.num_messages_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryNumMessagesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dydxprotocol_2fdelaymsg_2fquery_2eproto_getter, &descriptor_table_dydxprotocol_2fdelaymsg_2fquery_2eproto_once,
      file_level_metadata_dydxprotocol_2fdelaymsg_2fquery_2eproto[1]);
}
// ===================================================================

class QueryMessageRequest::_Internal {
 public:
};

QueryMessageRequest::QueryMessageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dydxprotocol.delaymsg.QueryMessageRequest)
}
QueryMessageRequest::QueryMessageRequest(const QueryMessageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dydxprotocol.delaymsg.QueryMessageRequest)
}

inline void QueryMessageRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.id_) { 0u }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryMessageRequest::~QueryMessageRequest() {
  // @@protoc_insertion_point(destructor:dydxprotocol.delaymsg.QueryMessageRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryMessageRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void QueryMessageRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dydxprotocol.delaymsg.QueryMessageRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryMessageRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryMessageRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dydxprotocol.delaymsg.QueryMessageRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dydxprotocol.delaymsg.QueryMessageRequest)
  return target;
}

::size_t QueryMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dydxprotocol.delaymsg.QueryMessageRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryMessageRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryMessageRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryMessageRequest::GetClassData() const { return &_class_data_; }


void QueryMessageRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryMessageRequest*>(&to_msg);
  auto& from = static_cast<const QueryMessageRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dydxprotocol.delaymsg.QueryMessageRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryMessageRequest::CopyFrom(const QueryMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dydxprotocol.delaymsg.QueryMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryMessageRequest::IsInitialized() const {
  return true;
}

void QueryMessageRequest::InternalSwap(QueryMessageRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.id_, other->_impl_.id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryMessageRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dydxprotocol_2fdelaymsg_2fquery_2eproto_getter, &descriptor_table_dydxprotocol_2fdelaymsg_2fquery_2eproto_once,
      file_level_metadata_dydxprotocol_2fdelaymsg_2fquery_2eproto[2]);
}
// ===================================================================

class QueryMessageResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryMessageResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryMessageResponse, _impl_._has_bits_);
  static const ::dydxprotocol::delaymsg::DelayedMessage& message(const QueryMessageResponse* msg);
  static void set_has_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::dydxprotocol::delaymsg::DelayedMessage&
QueryMessageResponse::_Internal::message(const QueryMessageResponse* msg) {
  return *msg->_impl_.message_;
}
void QueryMessageResponse::clear_message() {
  if (_impl_.message_ != nullptr) _impl_.message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryMessageResponse::QueryMessageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dydxprotocol.delaymsg.QueryMessageResponse)
}
QueryMessageResponse::QueryMessageResponse(const QueryMessageResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryMessageResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.message_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.message_ = new ::dydxprotocol::delaymsg::DelayedMessage(*from._impl_.message_);
  }
  // @@protoc_insertion_point(copy_constructor:dydxprotocol.delaymsg.QueryMessageResponse)
}

inline void QueryMessageResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.message_){nullptr}
  };
}

QueryMessageResponse::~QueryMessageResponse() {
  // @@protoc_insertion_point(destructor:dydxprotocol.delaymsg.QueryMessageResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryMessageResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.message_;
}

void QueryMessageResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dydxprotocol.delaymsg.QueryMessageResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.message_ != nullptr);
    _impl_.message_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryMessageResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .dydxprotocol.delaymsg.DelayedMessage message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_message(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryMessageResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dydxprotocol.delaymsg.QueryMessageResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .dydxprotocol.delaymsg.DelayedMessage message = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::message(this),
        _Internal::message(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dydxprotocol.delaymsg.QueryMessageResponse)
  return target;
}

::size_t QueryMessageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dydxprotocol.delaymsg.QueryMessageResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .dydxprotocol.delaymsg.DelayedMessage message = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.message_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryMessageResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryMessageResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryMessageResponse::GetClassData() const { return &_class_data_; }


void QueryMessageResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryMessageResponse*>(&to_msg);
  auto& from = static_cast<const QueryMessageResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dydxprotocol.delaymsg.QueryMessageResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_message()->::dydxprotocol::delaymsg::DelayedMessage::MergeFrom(
        from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryMessageResponse::CopyFrom(const QueryMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dydxprotocol.delaymsg.QueryMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryMessageResponse::IsInitialized() const {
  return true;
}

void QueryMessageResponse::InternalSwap(QueryMessageResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.message_, other->_impl_.message_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryMessageResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dydxprotocol_2fdelaymsg_2fquery_2eproto_getter, &descriptor_table_dydxprotocol_2fdelaymsg_2fquery_2eproto_once,
      file_level_metadata_dydxprotocol_2fdelaymsg_2fquery_2eproto[3]);
}
// ===================================================================

class QueryBlockMessageIdsRequest::_Internal {
 public:
};

QueryBlockMessageIdsRequest::QueryBlockMessageIdsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dydxprotocol.delaymsg.QueryBlockMessageIdsRequest)
}
QueryBlockMessageIdsRequest::QueryBlockMessageIdsRequest(const QueryBlockMessageIdsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dydxprotocol.delaymsg.QueryBlockMessageIdsRequest)
}

inline void QueryBlockMessageIdsRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.block_height_) { ::int64_t{0} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryBlockMessageIdsRequest::~QueryBlockMessageIdsRequest() {
  // @@protoc_insertion_point(destructor:dydxprotocol.delaymsg.QueryBlockMessageIdsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryBlockMessageIdsRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void QueryBlockMessageIdsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryBlockMessageIdsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dydxprotocol.delaymsg.QueryBlockMessageIdsRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.block_height_ = ::int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryBlockMessageIdsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // sint64 block_height = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.block_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryBlockMessageIdsRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dydxprotocol.delaymsg.QueryBlockMessageIdsRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // sint64 block_height = 1;
  if (this->_internal_block_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
        1, this->_internal_block_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dydxprotocol.delaymsg.QueryBlockMessageIdsRequest)
  return target;
}

::size_t QueryBlockMessageIdsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dydxprotocol.delaymsg.QueryBlockMessageIdsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint64 block_height = 1;
  if (this->_internal_block_height() != 0) {
    total_size += ::_pbi::WireFormatLite::SInt64SizePlusOne(
        this->_internal_block_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryBlockMessageIdsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryBlockMessageIdsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryBlockMessageIdsRequest::GetClassData() const { return &_class_data_; }


void QueryBlockMessageIdsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryBlockMessageIdsRequest*>(&to_msg);
  auto& from = static_cast<const QueryBlockMessageIdsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dydxprotocol.delaymsg.QueryBlockMessageIdsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_block_height() != 0) {
    _this->_internal_set_block_height(from._internal_block_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryBlockMessageIdsRequest::CopyFrom(const QueryBlockMessageIdsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dydxprotocol.delaymsg.QueryBlockMessageIdsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryBlockMessageIdsRequest::IsInitialized() const {
  return true;
}

void QueryBlockMessageIdsRequest::InternalSwap(QueryBlockMessageIdsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.block_height_, other->_impl_.block_height_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryBlockMessageIdsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dydxprotocol_2fdelaymsg_2fquery_2eproto_getter, &descriptor_table_dydxprotocol_2fdelaymsg_2fquery_2eproto_once,
      file_level_metadata_dydxprotocol_2fdelaymsg_2fquery_2eproto[4]);
}
// ===================================================================

class QueryBlockMessageIdsResponse::_Internal {
 public:
};

QueryBlockMessageIdsResponse::QueryBlockMessageIdsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dydxprotocol.delaymsg.QueryBlockMessageIdsResponse)
}
QueryBlockMessageIdsResponse::QueryBlockMessageIdsResponse(const QueryBlockMessageIdsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryBlockMessageIdsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_ids_) { from._impl_.message_ids_ }
    ,/* _impl_._message_ids_cached_byte_size_ = */ { 0 }

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dydxprotocol.delaymsg.QueryBlockMessageIdsResponse)
}

inline void QueryBlockMessageIdsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.message_ids_) { arena }
    ,/* _impl_._message_ids_cached_byte_size_ = */ { 0 }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryBlockMessageIdsResponse::~QueryBlockMessageIdsResponse() {
  // @@protoc_insertion_point(destructor:dydxprotocol.delaymsg.QueryBlockMessageIdsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryBlockMessageIdsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_ids_.~RepeatedField();
}

void QueryBlockMessageIdsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryBlockMessageIdsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dydxprotocol.delaymsg.QueryBlockMessageIdsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_message_ids()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryBlockMessageIdsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint32 message_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_message_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::uint8_t>(tag) == 8) {
          _internal_add_message_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryBlockMessageIdsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dydxprotocol.delaymsg.QueryBlockMessageIdsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 message_ids = 1;
  {
    int byte_size = _impl_._message_ids_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(1, _internal_message_ids(),
                                                 byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dydxprotocol.delaymsg.QueryBlockMessageIdsResponse)
  return target;
}

::size_t QueryBlockMessageIdsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dydxprotocol.delaymsg.QueryBlockMessageIdsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 message_ids = 1;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_message_ids())
    ;
    _impl_._message_ids_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryBlockMessageIdsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryBlockMessageIdsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryBlockMessageIdsResponse::GetClassData() const { return &_class_data_; }


void QueryBlockMessageIdsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryBlockMessageIdsResponse*>(&to_msg);
  auto& from = static_cast<const QueryBlockMessageIdsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dydxprotocol.delaymsg.QueryBlockMessageIdsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.message_ids_.MergeFrom(from._impl_.message_ids_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryBlockMessageIdsResponse::CopyFrom(const QueryBlockMessageIdsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dydxprotocol.delaymsg.QueryBlockMessageIdsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryBlockMessageIdsResponse::IsInitialized() const {
  return true;
}

void QueryBlockMessageIdsResponse::InternalSwap(QueryBlockMessageIdsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.message_ids_.InternalSwap(&other->_impl_.message_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryBlockMessageIdsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dydxprotocol_2fdelaymsg_2fquery_2eproto_getter, &descriptor_table_dydxprotocol_2fdelaymsg_2fquery_2eproto_once,
      file_level_metadata_dydxprotocol_2fdelaymsg_2fquery_2eproto[5]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace delaymsg
}  // namespace dydxprotocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::dydxprotocol::delaymsg::QueryNumMessagesRequest*
Arena::CreateMaybeMessage< ::dydxprotocol::delaymsg::QueryNumMessagesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dydxprotocol::delaymsg::QueryNumMessagesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dydxprotocol::delaymsg::QueryNumMessagesResponse*
Arena::CreateMaybeMessage< ::dydxprotocol::delaymsg::QueryNumMessagesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dydxprotocol::delaymsg::QueryNumMessagesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dydxprotocol::delaymsg::QueryMessageRequest*
Arena::CreateMaybeMessage< ::dydxprotocol::delaymsg::QueryMessageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dydxprotocol::delaymsg::QueryMessageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dydxprotocol::delaymsg::QueryMessageResponse*
Arena::CreateMaybeMessage< ::dydxprotocol::delaymsg::QueryMessageResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dydxprotocol::delaymsg::QueryMessageResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dydxprotocol::delaymsg::QueryBlockMessageIdsRequest*
Arena::CreateMaybeMessage< ::dydxprotocol::delaymsg::QueryBlockMessageIdsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dydxprotocol::delaymsg::QueryBlockMessageIdsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dydxprotocol::delaymsg::QueryBlockMessageIdsResponse*
Arena::CreateMaybeMessage< ::dydxprotocol::delaymsg::QueryBlockMessageIdsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dydxprotocol::delaymsg::QueryBlockMessageIdsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
