// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dydxprotocol/delaymsg/query.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_dydxprotocol_2fdelaymsg_2fquery_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_dydxprotocol_2fdelaymsg_2fquery_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/api/annotations.pb.h"
#include "dydxprotocol/delaymsg/delayed_message.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_dydxprotocol_2fdelaymsg_2fquery_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_dydxprotocol_2fdelaymsg_2fquery_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_dydxprotocol_2fdelaymsg_2fquery_2eproto;
namespace dydxprotocol {
namespace delaymsg {
class QueryBlockMessageIdsRequest;
struct QueryBlockMessageIdsRequestDefaultTypeInternal;
extern QueryBlockMessageIdsRequestDefaultTypeInternal _QueryBlockMessageIdsRequest_default_instance_;
class QueryBlockMessageIdsResponse;
struct QueryBlockMessageIdsResponseDefaultTypeInternal;
extern QueryBlockMessageIdsResponseDefaultTypeInternal _QueryBlockMessageIdsResponse_default_instance_;
class QueryMessageRequest;
struct QueryMessageRequestDefaultTypeInternal;
extern QueryMessageRequestDefaultTypeInternal _QueryMessageRequest_default_instance_;
class QueryMessageResponse;
struct QueryMessageResponseDefaultTypeInternal;
extern QueryMessageResponseDefaultTypeInternal _QueryMessageResponse_default_instance_;
class QueryNumMessagesRequest;
struct QueryNumMessagesRequestDefaultTypeInternal;
extern QueryNumMessagesRequestDefaultTypeInternal _QueryNumMessagesRequest_default_instance_;
class QueryNumMessagesResponse;
struct QueryNumMessagesResponseDefaultTypeInternal;
extern QueryNumMessagesResponseDefaultTypeInternal _QueryNumMessagesResponse_default_instance_;
}  // namespace delaymsg
}  // namespace dydxprotocol
PROTOBUF_NAMESPACE_OPEN
template <>
::dydxprotocol::delaymsg::QueryBlockMessageIdsRequest* Arena::CreateMaybeMessage<::dydxprotocol::delaymsg::QueryBlockMessageIdsRequest>(Arena*);
template <>
::dydxprotocol::delaymsg::QueryBlockMessageIdsResponse* Arena::CreateMaybeMessage<::dydxprotocol::delaymsg::QueryBlockMessageIdsResponse>(Arena*);
template <>
::dydxprotocol::delaymsg::QueryMessageRequest* Arena::CreateMaybeMessage<::dydxprotocol::delaymsg::QueryMessageRequest>(Arena*);
template <>
::dydxprotocol::delaymsg::QueryMessageResponse* Arena::CreateMaybeMessage<::dydxprotocol::delaymsg::QueryMessageResponse>(Arena*);
template <>
::dydxprotocol::delaymsg::QueryNumMessagesRequest* Arena::CreateMaybeMessage<::dydxprotocol::delaymsg::QueryNumMessagesRequest>(Arena*);
template <>
::dydxprotocol::delaymsg::QueryNumMessagesResponse* Arena::CreateMaybeMessage<::dydxprotocol::delaymsg::QueryNumMessagesResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace dydxprotocol {
namespace delaymsg {

// ===================================================================


// -------------------------------------------------------------------

class QueryNumMessagesRequest final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:dydxprotocol.delaymsg.QueryNumMessagesRequest) */ {
 public:
  inline QueryNumMessagesRequest() : QueryNumMessagesRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryNumMessagesRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryNumMessagesRequest(const QueryNumMessagesRequest& from);
  QueryNumMessagesRequest(QueryNumMessagesRequest&& from) noexcept
    : QueryNumMessagesRequest() {
    *this = ::std::move(from);
  }

  inline QueryNumMessagesRequest& operator=(const QueryNumMessagesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryNumMessagesRequest& operator=(QueryNumMessagesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryNumMessagesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryNumMessagesRequest* internal_default_instance() {
    return reinterpret_cast<const QueryNumMessagesRequest*>(
               &_QueryNumMessagesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(QueryNumMessagesRequest& a, QueryNumMessagesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryNumMessagesRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryNumMessagesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryNumMessagesRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryNumMessagesRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const QueryNumMessagesRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const QueryNumMessagesRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.delaymsg.QueryNumMessagesRequest";
  }
  protected:
  explicit QueryNumMessagesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dydxprotocol.delaymsg.QueryNumMessagesRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_dydxprotocol_2fdelaymsg_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryNumMessagesResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dydxprotocol.delaymsg.QueryNumMessagesResponse) */ {
 public:
  inline QueryNumMessagesResponse() : QueryNumMessagesResponse(nullptr) {}
  ~QueryNumMessagesResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryNumMessagesResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryNumMessagesResponse(const QueryNumMessagesResponse& from);
  QueryNumMessagesResponse(QueryNumMessagesResponse&& from) noexcept
    : QueryNumMessagesResponse() {
    *this = ::std::move(from);
  }

  inline QueryNumMessagesResponse& operator=(const QueryNumMessagesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryNumMessagesResponse& operator=(QueryNumMessagesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryNumMessagesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryNumMessagesResponse* internal_default_instance() {
    return reinterpret_cast<const QueryNumMessagesResponse*>(
               &_QueryNumMessagesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(QueryNumMessagesResponse& a, QueryNumMessagesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryNumMessagesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryNumMessagesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryNumMessagesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryNumMessagesResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryNumMessagesResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryNumMessagesResponse& from) {
    QueryNumMessagesResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryNumMessagesResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.delaymsg.QueryNumMessagesResponse";
  }
  protected:
  explicit QueryNumMessagesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNumMessagesFieldNumber = 1,
  };
  // uint32 num_messages = 1;
  void clear_num_messages() ;
  ::uint32_t num_messages() const;
  void set_num_messages(::uint32_t value);

  private:
  ::uint32_t _internal_num_messages() const;
  void _internal_set_num_messages(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:dydxprotocol.delaymsg.QueryNumMessagesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t num_messages_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dydxprotocol_2fdelaymsg_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryMessageRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dydxprotocol.delaymsg.QueryMessageRequest) */ {
 public:
  inline QueryMessageRequest() : QueryMessageRequest(nullptr) {}
  ~QueryMessageRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryMessageRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryMessageRequest(const QueryMessageRequest& from);
  QueryMessageRequest(QueryMessageRequest&& from) noexcept
    : QueryMessageRequest() {
    *this = ::std::move(from);
  }

  inline QueryMessageRequest& operator=(const QueryMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryMessageRequest& operator=(QueryMessageRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryMessageRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryMessageRequest* internal_default_instance() {
    return reinterpret_cast<const QueryMessageRequest*>(
               &_QueryMessageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(QueryMessageRequest& a, QueryMessageRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryMessageRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryMessageRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryMessageRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryMessageRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryMessageRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryMessageRequest& from) {
    QueryMessageRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryMessageRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.delaymsg.QueryMessageRequest";
  }
  protected:
  explicit QueryMessageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // uint32 id = 1;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:dydxprotocol.delaymsg.QueryMessageRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dydxprotocol_2fdelaymsg_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryMessageResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dydxprotocol.delaymsg.QueryMessageResponse) */ {
 public:
  inline QueryMessageResponse() : QueryMessageResponse(nullptr) {}
  ~QueryMessageResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryMessageResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryMessageResponse(const QueryMessageResponse& from);
  QueryMessageResponse(QueryMessageResponse&& from) noexcept
    : QueryMessageResponse() {
    *this = ::std::move(from);
  }

  inline QueryMessageResponse& operator=(const QueryMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryMessageResponse& operator=(QueryMessageResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryMessageResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryMessageResponse* internal_default_instance() {
    return reinterpret_cast<const QueryMessageResponse*>(
               &_QueryMessageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(QueryMessageResponse& a, QueryMessageResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryMessageResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryMessageResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryMessageResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryMessageResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryMessageResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryMessageResponse& from) {
    QueryMessageResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryMessageResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.delaymsg.QueryMessageResponse";
  }
  protected:
  explicit QueryMessageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 1,
  };
  // .dydxprotocol.delaymsg.DelayedMessage message = 1;
  bool has_message() const;
  void clear_message() ;
  const ::dydxprotocol::delaymsg::DelayedMessage& message() const;
  PROTOBUF_NODISCARD ::dydxprotocol::delaymsg::DelayedMessage* release_message();
  ::dydxprotocol::delaymsg::DelayedMessage* mutable_message();
  void set_allocated_message(::dydxprotocol::delaymsg::DelayedMessage* message);
  private:
  const ::dydxprotocol::delaymsg::DelayedMessage& _internal_message() const;
  ::dydxprotocol::delaymsg::DelayedMessage* _internal_mutable_message();
  public:
  void unsafe_arena_set_allocated_message(
      ::dydxprotocol::delaymsg::DelayedMessage* message);
  ::dydxprotocol::delaymsg::DelayedMessage* unsafe_arena_release_message();
  // @@protoc_insertion_point(class_scope:dydxprotocol.delaymsg.QueryMessageResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::dydxprotocol::delaymsg::DelayedMessage* message_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dydxprotocol_2fdelaymsg_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryBlockMessageIdsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dydxprotocol.delaymsg.QueryBlockMessageIdsRequest) */ {
 public:
  inline QueryBlockMessageIdsRequest() : QueryBlockMessageIdsRequest(nullptr) {}
  ~QueryBlockMessageIdsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryBlockMessageIdsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryBlockMessageIdsRequest(const QueryBlockMessageIdsRequest& from);
  QueryBlockMessageIdsRequest(QueryBlockMessageIdsRequest&& from) noexcept
    : QueryBlockMessageIdsRequest() {
    *this = ::std::move(from);
  }

  inline QueryBlockMessageIdsRequest& operator=(const QueryBlockMessageIdsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryBlockMessageIdsRequest& operator=(QueryBlockMessageIdsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryBlockMessageIdsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryBlockMessageIdsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryBlockMessageIdsRequest*>(
               &_QueryBlockMessageIdsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(QueryBlockMessageIdsRequest& a, QueryBlockMessageIdsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryBlockMessageIdsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryBlockMessageIdsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryBlockMessageIdsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryBlockMessageIdsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryBlockMessageIdsRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryBlockMessageIdsRequest& from) {
    QueryBlockMessageIdsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryBlockMessageIdsRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.delaymsg.QueryBlockMessageIdsRequest";
  }
  protected:
  explicit QueryBlockMessageIdsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBlockHeightFieldNumber = 1,
  };
  // sint64 block_height = 1;
  void clear_block_height() ;
  ::int64_t block_height() const;
  void set_block_height(::int64_t value);

  private:
  ::int64_t _internal_block_height() const;
  void _internal_set_block_height(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:dydxprotocol.delaymsg.QueryBlockMessageIdsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int64_t block_height_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dydxprotocol_2fdelaymsg_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryBlockMessageIdsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dydxprotocol.delaymsg.QueryBlockMessageIdsResponse) */ {
 public:
  inline QueryBlockMessageIdsResponse() : QueryBlockMessageIdsResponse(nullptr) {}
  ~QueryBlockMessageIdsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryBlockMessageIdsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryBlockMessageIdsResponse(const QueryBlockMessageIdsResponse& from);
  QueryBlockMessageIdsResponse(QueryBlockMessageIdsResponse&& from) noexcept
    : QueryBlockMessageIdsResponse() {
    *this = ::std::move(from);
  }

  inline QueryBlockMessageIdsResponse& operator=(const QueryBlockMessageIdsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryBlockMessageIdsResponse& operator=(QueryBlockMessageIdsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryBlockMessageIdsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryBlockMessageIdsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryBlockMessageIdsResponse*>(
               &_QueryBlockMessageIdsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(QueryBlockMessageIdsResponse& a, QueryBlockMessageIdsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryBlockMessageIdsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryBlockMessageIdsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryBlockMessageIdsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryBlockMessageIdsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryBlockMessageIdsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryBlockMessageIdsResponse& from) {
    QueryBlockMessageIdsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryBlockMessageIdsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.delaymsg.QueryBlockMessageIdsResponse";
  }
  protected:
  explicit QueryBlockMessageIdsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageIdsFieldNumber = 1,
  };
  // repeated uint32 message_ids = 1;
  int message_ids_size() const;
  private:
  int _internal_message_ids_size() const;

  public:
  void clear_message_ids() ;
  ::uint32_t message_ids(int index) const;
  void set_message_ids(int index, ::uint32_t value);
  void add_message_ids(::uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint32_t>& message_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint32_t>* mutable_message_ids();

  private:
  ::uint32_t _internal_message_ids(int index) const;
  void _internal_add_message_ids(::uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint32_t>& _internal_message_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint32_t>* _internal_mutable_message_ids();

  public:
  // @@protoc_insertion_point(class_scope:dydxprotocol.delaymsg.QueryBlockMessageIdsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint32_t> message_ids_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _message_ids_cached_byte_size_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dydxprotocol_2fdelaymsg_2fquery_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// QueryNumMessagesRequest

// -------------------------------------------------------------------

// QueryNumMessagesResponse

// uint32 num_messages = 1;
inline void QueryNumMessagesResponse::clear_num_messages() {
  _impl_.num_messages_ = 0u;
}
inline ::uint32_t QueryNumMessagesResponse::num_messages() const {
  // @@protoc_insertion_point(field_get:dydxprotocol.delaymsg.QueryNumMessagesResponse.num_messages)
  return _internal_num_messages();
}
inline void QueryNumMessagesResponse::set_num_messages(::uint32_t value) {
  _internal_set_num_messages(value);
  // @@protoc_insertion_point(field_set:dydxprotocol.delaymsg.QueryNumMessagesResponse.num_messages)
}
inline ::uint32_t QueryNumMessagesResponse::_internal_num_messages() const {
  return _impl_.num_messages_;
}
inline void QueryNumMessagesResponse::_internal_set_num_messages(::uint32_t value) {
  ;
  _impl_.num_messages_ = value;
}

// -------------------------------------------------------------------

// QueryMessageRequest

// uint32 id = 1;
inline void QueryMessageRequest::clear_id() {
  _impl_.id_ = 0u;
}
inline ::uint32_t QueryMessageRequest::id() const {
  // @@protoc_insertion_point(field_get:dydxprotocol.delaymsg.QueryMessageRequest.id)
  return _internal_id();
}
inline void QueryMessageRequest::set_id(::uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:dydxprotocol.delaymsg.QueryMessageRequest.id)
}
inline ::uint32_t QueryMessageRequest::_internal_id() const {
  return _impl_.id_;
}
inline void QueryMessageRequest::_internal_set_id(::uint32_t value) {
  ;
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// QueryMessageResponse

// .dydxprotocol.delaymsg.DelayedMessage message = 1;
inline bool QueryMessageResponse::has_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.message_ != nullptr);
  return value;
}
inline const ::dydxprotocol::delaymsg::DelayedMessage& QueryMessageResponse::_internal_message() const {
  const ::dydxprotocol::delaymsg::DelayedMessage* p = _impl_.message_;
  return p != nullptr ? *p : reinterpret_cast<const ::dydxprotocol::delaymsg::DelayedMessage&>(
      ::dydxprotocol::delaymsg::_DelayedMessage_default_instance_);
}
inline const ::dydxprotocol::delaymsg::DelayedMessage& QueryMessageResponse::message() const {
  // @@protoc_insertion_point(field_get:dydxprotocol.delaymsg.QueryMessageResponse.message)
  return _internal_message();
}
inline void QueryMessageResponse::unsafe_arena_set_allocated_message(
    ::dydxprotocol::delaymsg::DelayedMessage* message) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.message_);
  }
  _impl_.message_ = message;
  if (message) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dydxprotocol.delaymsg.QueryMessageResponse.message)
}
inline ::dydxprotocol::delaymsg::DelayedMessage* QueryMessageResponse::release_message() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dydxprotocol::delaymsg::DelayedMessage* temp = _impl_.message_;
  _impl_.message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::dydxprotocol::delaymsg::DelayedMessage* QueryMessageResponse::unsafe_arena_release_message() {
  // @@protoc_insertion_point(field_release:dydxprotocol.delaymsg.QueryMessageResponse.message)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dydxprotocol::delaymsg::DelayedMessage* temp = _impl_.message_;
  _impl_.message_ = nullptr;
  return temp;
}
inline ::dydxprotocol::delaymsg::DelayedMessage* QueryMessageResponse::_internal_mutable_message() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.message_ == nullptr) {
    auto* p = CreateMaybeMessage<::dydxprotocol::delaymsg::DelayedMessage>(GetArenaForAllocation());
    _impl_.message_ = p;
  }
  return _impl_.message_;
}
inline ::dydxprotocol::delaymsg::DelayedMessage* QueryMessageResponse::mutable_message() {
  ::dydxprotocol::delaymsg::DelayedMessage* _msg = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:dydxprotocol.delaymsg.QueryMessageResponse.message)
  return _msg;
}
inline void QueryMessageResponse::set_allocated_message(::dydxprotocol::delaymsg::DelayedMessage* message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.message_);
  }
  if (message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(message));
    if (message_arena != submessage_arena) {
      message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, message, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.message_ = message;
  // @@protoc_insertion_point(field_set_allocated:dydxprotocol.delaymsg.QueryMessageResponse.message)
}

// -------------------------------------------------------------------

// QueryBlockMessageIdsRequest

// sint64 block_height = 1;
inline void QueryBlockMessageIdsRequest::clear_block_height() {
  _impl_.block_height_ = ::int64_t{0};
}
inline ::int64_t QueryBlockMessageIdsRequest::block_height() const {
  // @@protoc_insertion_point(field_get:dydxprotocol.delaymsg.QueryBlockMessageIdsRequest.block_height)
  return _internal_block_height();
}
inline void QueryBlockMessageIdsRequest::set_block_height(::int64_t value) {
  _internal_set_block_height(value);
  // @@protoc_insertion_point(field_set:dydxprotocol.delaymsg.QueryBlockMessageIdsRequest.block_height)
}
inline ::int64_t QueryBlockMessageIdsRequest::_internal_block_height() const {
  return _impl_.block_height_;
}
inline void QueryBlockMessageIdsRequest::_internal_set_block_height(::int64_t value) {
  ;
  _impl_.block_height_ = value;
}

// -------------------------------------------------------------------

// QueryBlockMessageIdsResponse

// repeated uint32 message_ids = 1;
inline int QueryBlockMessageIdsResponse::_internal_message_ids_size() const {
  return _impl_.message_ids_.size();
}
inline int QueryBlockMessageIdsResponse::message_ids_size() const {
  return _internal_message_ids_size();
}
inline void QueryBlockMessageIdsResponse::clear_message_ids() {
  _internal_mutable_message_ids()->Clear();
}
inline ::uint32_t QueryBlockMessageIdsResponse::message_ids(int index) const {
  // @@protoc_insertion_point(field_get:dydxprotocol.delaymsg.QueryBlockMessageIdsResponse.message_ids)
  return _internal_message_ids(index);
}
inline void QueryBlockMessageIdsResponse::set_message_ids(int index, ::uint32_t value) {
  _internal_mutable_message_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:dydxprotocol.delaymsg.QueryBlockMessageIdsResponse.message_ids)
}
inline void QueryBlockMessageIdsResponse::add_message_ids(::uint32_t value) {
  _internal_add_message_ids(value);
  // @@protoc_insertion_point(field_add:dydxprotocol.delaymsg.QueryBlockMessageIdsResponse.message_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint32_t>& QueryBlockMessageIdsResponse::message_ids() const {
  // @@protoc_insertion_point(field_list:dydxprotocol.delaymsg.QueryBlockMessageIdsResponse.message_ids)
  return _internal_message_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint32_t>* QueryBlockMessageIdsResponse::mutable_message_ids() {
  // @@protoc_insertion_point(field_mutable_list:dydxprotocol.delaymsg.QueryBlockMessageIdsResponse.message_ids)
  return _internal_mutable_message_ids();
}

inline ::uint32_t QueryBlockMessageIdsResponse::_internal_message_ids(int index) const {
  return _internal_message_ids().Get(index);
}
inline void QueryBlockMessageIdsResponse::_internal_add_message_ids(::uint32_t value) {
  _internal_mutable_message_ids()->Add(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint32_t>& QueryBlockMessageIdsResponse::_internal_message_ids() const {
  return _impl_.message_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<::uint32_t>* QueryBlockMessageIdsResponse::_internal_mutable_message_ids() {
  return &_impl_.message_ids_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace delaymsg
}  // namespace dydxprotocol


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_dydxprotocol_2fdelaymsg_2fquery_2eproto_2epb_2eh
