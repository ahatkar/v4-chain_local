// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dydxprotocol/indexer/shared/removal_reason.proto

#include "dydxprotocol/indexer/shared/removal_reason.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace dydxprotocol {
namespace indexer {
namespace shared {
}  // namespace shared
}  // namespace indexer
}  // namespace dydxprotocol
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_dydxprotocol_2findexer_2fshared_2fremoval_5freason_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_dydxprotocol_2findexer_2fshared_2fremoval_5freason_2eproto = nullptr;
const ::uint32_t TableStruct_dydxprotocol_2findexer_2fshared_2fremoval_5freason_2eproto::offsets[1] = {};
static constexpr ::_pbi::MigrationSchema* schemas = nullptr;
static constexpr ::_pb::Message* const* file_default_instances = nullptr;
const char descriptor_table_protodef_dydxprotocol_2findexer_2fshared_2fremoval_5freason_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n0dydxprotocol/indexer/shared/removal_re"
    "ason.proto\022\033dydxprotocol.indexer.shared*"
    "\210\005\n\022OrderRemovalReason\022$\n ORDER_REMOVAL_"
    "REASON_UNSPECIFIED\020\000\022 \n\034ORDER_REMOVAL_RE"
    "ASON_EXPIRED\020\001\022&\n\"ORDER_REMOVAL_REASON_U"
    "SER_CANCELED\020\002\022,\n(ORDER_REMOVAL_REASON_U"
    "NDERCOLLATERALIZED\020\003\022\'\n#ORDER_REMOVAL_RE"
    "ASON_INTERNAL_ERROR\020\004\022)\n%ORDER_REMOVAL_R"
    "EASON_SELF_TRADE_ERROR\020\005\022:\n6ORDER_REMOVA"
    "L_REASON_POST_ONLY_WOULD_CROSS_MAKER_ORD"
    "ER\020\006\022\?\n;ORDER_REMOVAL_REASON_IMMEDIATE_O"
    "R_CANCEL_WOULD_REST_ON_BOOK\020\007\022<\n8ORDER_R"
    "EMOVAL_REASON_FOK_ORDER_COULD_NOT_BE_FUL"
    "LY_FULLED\020\010\022+\n\'ORDER_REMOVAL_REASON_REDU"
    "CE_ONLY_RESIZE\020\t\022(\n$ORDER_REMOVAL_REASON"
    "_INDEXER_EXPIRED\020\n\022!\n\035ORDER_REMOVAL_REAS"
    "ON_REPLACED\020\013\022%\n!ORDER_REMOVAL_REASON_FU"
    "LLY_FILLED\020\014\022$\n ORDER_REMOVAL_REASON_EQU"
    "ITY_TIER\020\rB:Z8github.com/dydxprotocol/v4"
    "-chain/protocol/indexer/sharedb\006proto3"
};
static ::absl::once_flag descriptor_table_dydxprotocol_2findexer_2fshared_2fremoval_5freason_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_dydxprotocol_2findexer_2fshared_2fremoval_5freason_2eproto = {
    false,
    false,
    798,
    descriptor_table_protodef_dydxprotocol_2findexer_2fshared_2fremoval_5freason_2eproto,
    "dydxprotocol/indexer/shared/removal_reason.proto",
    &descriptor_table_dydxprotocol_2findexer_2fshared_2fremoval_5freason_2eproto_once,
    nullptr,
    0,
    0,
    schemas,
    file_default_instances,
    TableStruct_dydxprotocol_2findexer_2fshared_2fremoval_5freason_2eproto::offsets,
    nullptr,
    file_level_enum_descriptors_dydxprotocol_2findexer_2fshared_2fremoval_5freason_2eproto,
    file_level_service_descriptors_dydxprotocol_2findexer_2fshared_2fremoval_5freason_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_dydxprotocol_2findexer_2fshared_2fremoval_5freason_2eproto_getter() {
  return &descriptor_table_dydxprotocol_2findexer_2fshared_2fremoval_5freason_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_dydxprotocol_2findexer_2fshared_2fremoval_5freason_2eproto(&descriptor_table_dydxprotocol_2findexer_2fshared_2fremoval_5freason_2eproto);
namespace dydxprotocol {
namespace indexer {
namespace shared {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* OrderRemovalReason_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dydxprotocol_2findexer_2fshared_2fremoval_5freason_2eproto);
  return file_level_enum_descriptors_dydxprotocol_2findexer_2fshared_2fremoval_5freason_2eproto[0];
}
bool OrderRemovalReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace shared
}  // namespace indexer
}  // namespace dydxprotocol
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
