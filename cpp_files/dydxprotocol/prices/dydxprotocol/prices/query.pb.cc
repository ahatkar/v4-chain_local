// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dydxprotocol/prices/query.proto

#include "dydxprotocol/prices/query.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace dydxprotocol {
namespace prices {
template <typename>
PROTOBUF_CONSTEXPR QueryMarketPriceRequest::QueryMarketPriceRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/ 0u

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryMarketPriceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryMarketPriceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryMarketPriceRequestDefaultTypeInternal() {}
  union {
    QueryMarketPriceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryMarketPriceRequestDefaultTypeInternal _QueryMarketPriceRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryMarketPriceResponse::QueryMarketPriceResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.market_price_)*/nullptr} {}
struct QueryMarketPriceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryMarketPriceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryMarketPriceResponseDefaultTypeInternal() {}
  union {
    QueryMarketPriceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryMarketPriceResponseDefaultTypeInternal _QueryMarketPriceResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryAllMarketPricesRequest::QueryAllMarketPricesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryAllMarketPricesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAllMarketPricesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAllMarketPricesRequestDefaultTypeInternal() {}
  union {
    QueryAllMarketPricesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAllMarketPricesRequestDefaultTypeInternal _QueryAllMarketPricesRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryAllMarketPricesResponse::QueryAllMarketPricesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.market_prices_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryAllMarketPricesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAllMarketPricesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAllMarketPricesResponseDefaultTypeInternal() {}
  union {
    QueryAllMarketPricesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAllMarketPricesResponseDefaultTypeInternal _QueryAllMarketPricesResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryMarketParamRequest::QueryMarketParamRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/ 0u

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryMarketParamRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryMarketParamRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryMarketParamRequestDefaultTypeInternal() {}
  union {
    QueryMarketParamRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryMarketParamRequestDefaultTypeInternal _QueryMarketParamRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryMarketParamResponse::QueryMarketParamResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.market_param_)*/nullptr} {}
struct QueryMarketParamResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryMarketParamResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryMarketParamResponseDefaultTypeInternal() {}
  union {
    QueryMarketParamResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryMarketParamResponseDefaultTypeInternal _QueryMarketParamResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryAllMarketParamsRequest::QueryAllMarketParamsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryAllMarketParamsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAllMarketParamsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAllMarketParamsRequestDefaultTypeInternal() {}
  union {
    QueryAllMarketParamsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAllMarketParamsRequestDefaultTypeInternal _QueryAllMarketParamsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryAllMarketParamsResponse::QueryAllMarketParamsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.market_params_)*/{}
  , /*decltype(_impl_.pagination_)*/nullptr} {}
struct QueryAllMarketParamsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryAllMarketParamsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryAllMarketParamsResponseDefaultTypeInternal() {}
  union {
    QueryAllMarketParamsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryAllMarketParamsResponseDefaultTypeInternal _QueryAllMarketParamsResponse_default_instance_;
}  // namespace prices
}  // namespace dydxprotocol
static ::_pb::Metadata file_level_metadata_dydxprotocol_2fprices_2fquery_2eproto[8];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_dydxprotocol_2fprices_2fquery_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_dydxprotocol_2fprices_2fquery_2eproto = nullptr;
const ::uint32_t TableStruct_dydxprotocol_2fprices_2fquery_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::prices::QueryMarketPriceRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::prices::QueryMarketPriceRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::prices::QueryMarketPriceResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::prices::QueryMarketPriceResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::prices::QueryMarketPriceResponse, _impl_.market_price_),
    0,
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::prices::QueryAllMarketPricesRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::prices::QueryAllMarketPricesRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::prices::QueryAllMarketPricesRequest, _impl_.pagination_),
    0,
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::prices::QueryAllMarketPricesResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::prices::QueryAllMarketPricesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::prices::QueryAllMarketPricesResponse, _impl_.market_prices_),
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::prices::QueryAllMarketPricesResponse, _impl_.pagination_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::prices::QueryMarketParamRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::prices::QueryMarketParamRequest, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::prices::QueryMarketParamResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::prices::QueryMarketParamResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::prices::QueryMarketParamResponse, _impl_.market_param_),
    0,
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::prices::QueryAllMarketParamsRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::prices::QueryAllMarketParamsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::prices::QueryAllMarketParamsRequest, _impl_.pagination_),
    0,
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::prices::QueryAllMarketParamsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::prices::QueryAllMarketParamsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::prices::QueryAllMarketParamsResponse, _impl_.market_params_),
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::prices::QueryAllMarketParamsResponse, _impl_.pagination_),
    ~0u,
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::dydxprotocol::prices::QueryMarketPriceRequest)},
        { 9, 18, -1, sizeof(::dydxprotocol::prices::QueryMarketPriceResponse)},
        { 19, 28, -1, sizeof(::dydxprotocol::prices::QueryAllMarketPricesRequest)},
        { 29, 39, -1, sizeof(::dydxprotocol::prices::QueryAllMarketPricesResponse)},
        { 41, -1, -1, sizeof(::dydxprotocol::prices::QueryMarketParamRequest)},
        { 50, 59, -1, sizeof(::dydxprotocol::prices::QueryMarketParamResponse)},
        { 60, 69, -1, sizeof(::dydxprotocol::prices::QueryAllMarketParamsRequest)},
        { 70, 80, -1, sizeof(::dydxprotocol::prices::QueryAllMarketParamsResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::dydxprotocol::prices::_QueryMarketPriceRequest_default_instance_._instance,
    &::dydxprotocol::prices::_QueryMarketPriceResponse_default_instance_._instance,
    &::dydxprotocol::prices::_QueryAllMarketPricesRequest_default_instance_._instance,
    &::dydxprotocol::prices::_QueryAllMarketPricesResponse_default_instance_._instance,
    &::dydxprotocol::prices::_QueryMarketParamRequest_default_instance_._instance,
    &::dydxprotocol::prices::_QueryMarketParamResponse_default_instance_._instance,
    &::dydxprotocol::prices::_QueryAllMarketParamsRequest_default_instance_._instance,
    &::dydxprotocol::prices::_QueryAllMarketParamsResponse_default_instance_._instance,
};
const char descriptor_table_protodef_dydxprotocol_2fprices_2fquery_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\037dydxprotocol/prices/query.proto\022\023dydxp"
    "rotocol.prices\032\024gogoproto/gogo.proto\032\034go"
    "ogle/api/annotations.proto\032*cosmos/base/"
    "query/v1beta1/pagination.proto\032&dydxprot"
    "ocol/prices/market_param.proto\032&dydxprot"
    "ocol/prices/market_price.proto\"%\n\027QueryM"
    "arketPriceRequest\022\n\n\002id\030\001 \001(\r\"X\n\030QueryMa"
    "rketPriceResponse\022<\n\014market_price\030\001 \001(\0132"
    " .dydxprotocol.prices.MarketPriceB\004\310\336\037\000\""
    "Y\n\033QueryAllMarketPricesRequest\022:\n\npagina"
    "tion\030\001 \001(\0132&.cosmos.base.query.v1beta1.P"
    "ageRequest\"\232\001\n\034QueryAllMarketPricesRespo"
    "nse\022=\n\rmarket_prices\030\001 \003(\0132 .dydxprotoco"
    "l.prices.MarketPriceB\004\310\336\037\000\022;\n\npagination"
    "\030\002 \001(\0132\'.cosmos.base.query.v1beta1.PageR"
    "esponse\"%\n\027QueryMarketParamRequest\022\n\n\002id"
    "\030\001 \001(\r\"X\n\030QueryMarketParamResponse\022<\n\014ma"
    "rket_param\030\001 \001(\0132 .dydxprotocol.prices.M"
    "arketParamB\004\310\336\037\000\"Y\n\033QueryAllMarketParams"
    "Request\022:\n\npagination\030\001 \001(\0132&.cosmos.bas"
    "e.query.v1beta1.PageRequest\"\232\001\n\034QueryAll"
    "MarketParamsResponse\022=\n\rmarket_params\030\001 "
    "\003(\0132 .dydxprotocol.prices.MarketParamB\004\310"
    "\336\037\000\022;\n\npagination\030\002 \001(\0132\'.cosmos.base.qu"
    "ery.v1beta1.PageResponse2\377\004\n\005Query\022\224\001\n\013M"
    "arketPrice\022,.dydxprotocol.prices.QueryMa"
    "rketPriceRequest\032-.dydxprotocol.prices.Q"
    "ueryMarketPriceResponse\"(\202\323\344\223\002\"\022 /dydxpr"
    "otocol/prices/market/{id}\022\233\001\n\017AllMarketP"
    "rices\0220.dydxprotocol.prices.QueryAllMark"
    "etPricesRequest\0321.dydxprotocol.prices.Qu"
    "eryAllMarketPricesResponse\"#\202\323\344\223\002\035\022\033/dyd"
    "xprotocol/prices/market\022\233\001\n\013MarketParam\022"
    ",.dydxprotocol.prices.QueryMarketParamRe"
    "quest\032-.dydxprotocol.prices.QueryMarketP"
    "aramResponse\"/\202\323\344\223\002)\022\'/dydxprotocol/pric"
    "es/params/market/{id}\022\242\001\n\017AllMarketParam"
    "s\0220.dydxprotocol.prices.QueryAllMarketPa"
    "ramsRequest\0321.dydxprotocol.prices.QueryA"
    "llMarketParamsResponse\"*\202\323\344\223\002$\022\"/dydxpro"
    "tocol/prices/params/marketB:Z8github.com"
    "/dydxprotocol/v4-chain/protocol/x/prices"
    "/typesb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_dydxprotocol_2fprices_2fquery_2eproto_deps[5] =
    {
        &::descriptor_table_cosmos_2fbase_2fquery_2fv1beta1_2fpagination_2eproto,
        &::descriptor_table_dydxprotocol_2fprices_2fmarket_5fparam_2eproto,
        &::descriptor_table_dydxprotocol_2fprices_2fmarket_5fprice_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::absl::once_flag descriptor_table_dydxprotocol_2fprices_2fquery_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_dydxprotocol_2fprices_2fquery_2eproto = {
    false,
    false,
    1694,
    descriptor_table_protodef_dydxprotocol_2fprices_2fquery_2eproto,
    "dydxprotocol/prices/query.proto",
    &descriptor_table_dydxprotocol_2fprices_2fquery_2eproto_once,
    descriptor_table_dydxprotocol_2fprices_2fquery_2eproto_deps,
    5,
    8,
    schemas,
    file_default_instances,
    TableStruct_dydxprotocol_2fprices_2fquery_2eproto::offsets,
    file_level_metadata_dydxprotocol_2fprices_2fquery_2eproto,
    file_level_enum_descriptors_dydxprotocol_2fprices_2fquery_2eproto,
    file_level_service_descriptors_dydxprotocol_2fprices_2fquery_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_dydxprotocol_2fprices_2fquery_2eproto_getter() {
  return &descriptor_table_dydxprotocol_2fprices_2fquery_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_dydxprotocol_2fprices_2fquery_2eproto(&descriptor_table_dydxprotocol_2fprices_2fquery_2eproto);
namespace dydxprotocol {
namespace prices {
// ===================================================================

class QueryMarketPriceRequest::_Internal {
 public:
};

QueryMarketPriceRequest::QueryMarketPriceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dydxprotocol.prices.QueryMarketPriceRequest)
}
QueryMarketPriceRequest::QueryMarketPriceRequest(const QueryMarketPriceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dydxprotocol.prices.QueryMarketPriceRequest)
}

inline void QueryMarketPriceRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.id_) { 0u }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryMarketPriceRequest::~QueryMarketPriceRequest() {
  // @@protoc_insertion_point(destructor:dydxprotocol.prices.QueryMarketPriceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryMarketPriceRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void QueryMarketPriceRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryMarketPriceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dydxprotocol.prices.QueryMarketPriceRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryMarketPriceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryMarketPriceRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dydxprotocol.prices.QueryMarketPriceRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dydxprotocol.prices.QueryMarketPriceRequest)
  return target;
}

::size_t QueryMarketPriceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dydxprotocol.prices.QueryMarketPriceRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryMarketPriceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryMarketPriceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryMarketPriceRequest::GetClassData() const { return &_class_data_; }


void QueryMarketPriceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryMarketPriceRequest*>(&to_msg);
  auto& from = static_cast<const QueryMarketPriceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dydxprotocol.prices.QueryMarketPriceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryMarketPriceRequest::CopyFrom(const QueryMarketPriceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dydxprotocol.prices.QueryMarketPriceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryMarketPriceRequest::IsInitialized() const {
  return true;
}

void QueryMarketPriceRequest::InternalSwap(QueryMarketPriceRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.id_, other->_impl_.id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryMarketPriceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dydxprotocol_2fprices_2fquery_2eproto_getter, &descriptor_table_dydxprotocol_2fprices_2fquery_2eproto_once,
      file_level_metadata_dydxprotocol_2fprices_2fquery_2eproto[0]);
}
// ===================================================================

class QueryMarketPriceResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryMarketPriceResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryMarketPriceResponse, _impl_._has_bits_);
  static const ::dydxprotocol::prices::MarketPrice& market_price(const QueryMarketPriceResponse* msg);
  static void set_has_market_price(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::dydxprotocol::prices::MarketPrice&
QueryMarketPriceResponse::_Internal::market_price(const QueryMarketPriceResponse* msg) {
  return *msg->_impl_.market_price_;
}
void QueryMarketPriceResponse::clear_market_price() {
  if (_impl_.market_price_ != nullptr) _impl_.market_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryMarketPriceResponse::QueryMarketPriceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dydxprotocol.prices.QueryMarketPriceResponse)
}
QueryMarketPriceResponse::QueryMarketPriceResponse(const QueryMarketPriceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryMarketPriceResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.market_price_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.market_price_ = new ::dydxprotocol::prices::MarketPrice(*from._impl_.market_price_);
  }
  // @@protoc_insertion_point(copy_constructor:dydxprotocol.prices.QueryMarketPriceResponse)
}

inline void QueryMarketPriceResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.market_price_){nullptr}
  };
}

QueryMarketPriceResponse::~QueryMarketPriceResponse() {
  // @@protoc_insertion_point(destructor:dydxprotocol.prices.QueryMarketPriceResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryMarketPriceResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.market_price_;
}

void QueryMarketPriceResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryMarketPriceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dydxprotocol.prices.QueryMarketPriceResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.market_price_ != nullptr);
    _impl_.market_price_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryMarketPriceResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .dydxprotocol.prices.MarketPrice market_price = 1 [(.gogoproto.nullable) = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_market_price(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryMarketPriceResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dydxprotocol.prices.QueryMarketPriceResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .dydxprotocol.prices.MarketPrice market_price = 1 [(.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::market_price(this),
        _Internal::market_price(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dydxprotocol.prices.QueryMarketPriceResponse)
  return target;
}

::size_t QueryMarketPriceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dydxprotocol.prices.QueryMarketPriceResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .dydxprotocol.prices.MarketPrice market_price = 1 [(.gogoproto.nullable) = false];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.market_price_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryMarketPriceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryMarketPriceResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryMarketPriceResponse::GetClassData() const { return &_class_data_; }


void QueryMarketPriceResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryMarketPriceResponse*>(&to_msg);
  auto& from = static_cast<const QueryMarketPriceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dydxprotocol.prices.QueryMarketPriceResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_market_price()->::dydxprotocol::prices::MarketPrice::MergeFrom(
        from._internal_market_price());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryMarketPriceResponse::CopyFrom(const QueryMarketPriceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dydxprotocol.prices.QueryMarketPriceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryMarketPriceResponse::IsInitialized() const {
  return true;
}

void QueryMarketPriceResponse::InternalSwap(QueryMarketPriceResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.market_price_, other->_impl_.market_price_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryMarketPriceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dydxprotocol_2fprices_2fquery_2eproto_getter, &descriptor_table_dydxprotocol_2fprices_2fquery_2eproto_once,
      file_level_metadata_dydxprotocol_2fprices_2fquery_2eproto[1]);
}
// ===================================================================

class QueryAllMarketPricesRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryAllMarketPricesRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryAllMarketPricesRequest, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageRequest& pagination(const QueryAllMarketPricesRequest* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageRequest&
QueryAllMarketPricesRequest::_Internal::pagination(const QueryAllMarketPricesRequest* msg) {
  return *msg->_impl_.pagination_;
}
void QueryAllMarketPricesRequest::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryAllMarketPricesRequest::QueryAllMarketPricesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dydxprotocol.prices.QueryAllMarketPricesRequest)
}
QueryAllMarketPricesRequest::QueryAllMarketPricesRequest(const QueryAllMarketPricesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryAllMarketPricesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageRequest(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:dydxprotocol.prices.QueryAllMarketPricesRequest)
}

inline void QueryAllMarketPricesRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.pagination_){nullptr}
  };
}

QueryAllMarketPricesRequest::~QueryAllMarketPricesRequest() {
  // @@protoc_insertion_point(destructor:dydxprotocol.prices.QueryAllMarketPricesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryAllMarketPricesRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryAllMarketPricesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryAllMarketPricesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dydxprotocol.prices.QueryAllMarketPricesRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryAllMarketPricesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.base.query.v1beta1.PageRequest pagination = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryAllMarketPricesRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dydxprotocol.prices.QueryAllMarketPricesRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageRequest pagination = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dydxprotocol.prices.QueryAllMarketPricesRequest)
  return target;
}

::size_t QueryAllMarketPricesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dydxprotocol.prices.QueryAllMarketPricesRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.base.query.v1beta1.PageRequest pagination = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryAllMarketPricesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryAllMarketPricesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryAllMarketPricesRequest::GetClassData() const { return &_class_data_; }


void QueryAllMarketPricesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryAllMarketPricesRequest*>(&to_msg);
  auto& from = static_cast<const QueryAllMarketPricesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dydxprotocol.prices.QueryAllMarketPricesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageRequest::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryAllMarketPricesRequest::CopyFrom(const QueryAllMarketPricesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dydxprotocol.prices.QueryAllMarketPricesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAllMarketPricesRequest::IsInitialized() const {
  return true;
}

void QueryAllMarketPricesRequest::InternalSwap(QueryAllMarketPricesRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryAllMarketPricesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dydxprotocol_2fprices_2fquery_2eproto_getter, &descriptor_table_dydxprotocol_2fprices_2fquery_2eproto_once,
      file_level_metadata_dydxprotocol_2fprices_2fquery_2eproto[2]);
}
// ===================================================================

class QueryAllMarketPricesResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryAllMarketPricesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryAllMarketPricesResponse, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageResponse& pagination(const QueryAllMarketPricesResponse* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageResponse&
QueryAllMarketPricesResponse::_Internal::pagination(const QueryAllMarketPricesResponse* msg) {
  return *msg->_impl_.pagination_;
}
void QueryAllMarketPricesResponse::clear_market_prices() {
  _internal_mutable_market_prices()->Clear();
}
void QueryAllMarketPricesResponse::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryAllMarketPricesResponse::QueryAllMarketPricesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dydxprotocol.prices.QueryAllMarketPricesResponse)
}
QueryAllMarketPricesResponse::QueryAllMarketPricesResponse(const QueryAllMarketPricesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryAllMarketPricesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.market_prices_){from._impl_.market_prices_}
    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageResponse(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:dydxprotocol.prices.QueryAllMarketPricesResponse)
}

inline void QueryAllMarketPricesResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.market_prices_){arena}
    , decltype(_impl_.pagination_){nullptr}
  };
}

QueryAllMarketPricesResponse::~QueryAllMarketPricesResponse() {
  // @@protoc_insertion_point(destructor:dydxprotocol.prices.QueryAllMarketPricesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryAllMarketPricesResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_market_prices()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryAllMarketPricesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryAllMarketPricesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dydxprotocol.prices.QueryAllMarketPricesResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_market_prices()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryAllMarketPricesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .dydxprotocol.prices.MarketPrice market_prices = 1 [(.gogoproto.nullable) = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_market_prices(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageResponse pagination = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryAllMarketPricesResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dydxprotocol.prices.QueryAllMarketPricesResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dydxprotocol.prices.MarketPrice market_prices = 1 [(.gogoproto.nullable) = false];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_market_prices_size()); i < n; i++) {
    const auto& repfield = this->_internal_market_prices(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dydxprotocol.prices.QueryAllMarketPricesResponse)
  return target;
}

::size_t QueryAllMarketPricesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dydxprotocol.prices.QueryAllMarketPricesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dydxprotocol.prices.MarketPrice market_prices = 1 [(.gogoproto.nullable) = false];
  total_size += 1UL * this->_internal_market_prices_size();
  for (const auto& msg : this->_internal_market_prices()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .cosmos.base.query.v1beta1.PageResponse pagination = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryAllMarketPricesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryAllMarketPricesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryAllMarketPricesResponse::GetClassData() const { return &_class_data_; }


void QueryAllMarketPricesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryAllMarketPricesResponse*>(&to_msg);
  auto& from = static_cast<const QueryAllMarketPricesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dydxprotocol.prices.QueryAllMarketPricesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_market_prices()->MergeFrom(from._internal_market_prices());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageResponse::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryAllMarketPricesResponse::CopyFrom(const QueryAllMarketPricesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dydxprotocol.prices.QueryAllMarketPricesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAllMarketPricesResponse::IsInitialized() const {
  return true;
}

void QueryAllMarketPricesResponse::InternalSwap(QueryAllMarketPricesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_market_prices()->InternalSwap(other->_internal_mutable_market_prices());
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryAllMarketPricesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dydxprotocol_2fprices_2fquery_2eproto_getter, &descriptor_table_dydxprotocol_2fprices_2fquery_2eproto_once,
      file_level_metadata_dydxprotocol_2fprices_2fquery_2eproto[3]);
}
// ===================================================================

class QueryMarketParamRequest::_Internal {
 public:
};

QueryMarketParamRequest::QueryMarketParamRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dydxprotocol.prices.QueryMarketParamRequest)
}
QueryMarketParamRequest::QueryMarketParamRequest(const QueryMarketParamRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dydxprotocol.prices.QueryMarketParamRequest)
}

inline void QueryMarketParamRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.id_) { 0u }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

QueryMarketParamRequest::~QueryMarketParamRequest() {
  // @@protoc_insertion_point(destructor:dydxprotocol.prices.QueryMarketParamRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryMarketParamRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void QueryMarketParamRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryMarketParamRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dydxprotocol.prices.QueryMarketParamRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryMarketParamRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryMarketParamRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dydxprotocol.prices.QueryMarketParamRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dydxprotocol.prices.QueryMarketParamRequest)
  return target;
}

::size_t QueryMarketParamRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dydxprotocol.prices.QueryMarketParamRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryMarketParamRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryMarketParamRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryMarketParamRequest::GetClassData() const { return &_class_data_; }


void QueryMarketParamRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryMarketParamRequest*>(&to_msg);
  auto& from = static_cast<const QueryMarketParamRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dydxprotocol.prices.QueryMarketParamRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryMarketParamRequest::CopyFrom(const QueryMarketParamRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dydxprotocol.prices.QueryMarketParamRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryMarketParamRequest::IsInitialized() const {
  return true;
}

void QueryMarketParamRequest::InternalSwap(QueryMarketParamRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.id_, other->_impl_.id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryMarketParamRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dydxprotocol_2fprices_2fquery_2eproto_getter, &descriptor_table_dydxprotocol_2fprices_2fquery_2eproto_once,
      file_level_metadata_dydxprotocol_2fprices_2fquery_2eproto[4]);
}
// ===================================================================

class QueryMarketParamResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryMarketParamResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryMarketParamResponse, _impl_._has_bits_);
  static const ::dydxprotocol::prices::MarketParam& market_param(const QueryMarketParamResponse* msg);
  static void set_has_market_param(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::dydxprotocol::prices::MarketParam&
QueryMarketParamResponse::_Internal::market_param(const QueryMarketParamResponse* msg) {
  return *msg->_impl_.market_param_;
}
void QueryMarketParamResponse::clear_market_param() {
  if (_impl_.market_param_ != nullptr) _impl_.market_param_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryMarketParamResponse::QueryMarketParamResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dydxprotocol.prices.QueryMarketParamResponse)
}
QueryMarketParamResponse::QueryMarketParamResponse(const QueryMarketParamResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryMarketParamResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.market_param_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.market_param_ = new ::dydxprotocol::prices::MarketParam(*from._impl_.market_param_);
  }
  // @@protoc_insertion_point(copy_constructor:dydxprotocol.prices.QueryMarketParamResponse)
}

inline void QueryMarketParamResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.market_param_){nullptr}
  };
}

QueryMarketParamResponse::~QueryMarketParamResponse() {
  // @@protoc_insertion_point(destructor:dydxprotocol.prices.QueryMarketParamResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryMarketParamResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.market_param_;
}

void QueryMarketParamResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryMarketParamResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dydxprotocol.prices.QueryMarketParamResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.market_param_ != nullptr);
    _impl_.market_param_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryMarketParamResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .dydxprotocol.prices.MarketParam market_param = 1 [(.gogoproto.nullable) = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_market_param(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryMarketParamResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dydxprotocol.prices.QueryMarketParamResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .dydxprotocol.prices.MarketParam market_param = 1 [(.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::market_param(this),
        _Internal::market_param(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dydxprotocol.prices.QueryMarketParamResponse)
  return target;
}

::size_t QueryMarketParamResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dydxprotocol.prices.QueryMarketParamResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .dydxprotocol.prices.MarketParam market_param = 1 [(.gogoproto.nullable) = false];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.market_param_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryMarketParamResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryMarketParamResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryMarketParamResponse::GetClassData() const { return &_class_data_; }


void QueryMarketParamResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryMarketParamResponse*>(&to_msg);
  auto& from = static_cast<const QueryMarketParamResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dydxprotocol.prices.QueryMarketParamResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_market_param()->::dydxprotocol::prices::MarketParam::MergeFrom(
        from._internal_market_param());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryMarketParamResponse::CopyFrom(const QueryMarketParamResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dydxprotocol.prices.QueryMarketParamResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryMarketParamResponse::IsInitialized() const {
  return true;
}

void QueryMarketParamResponse::InternalSwap(QueryMarketParamResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.market_param_, other->_impl_.market_param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryMarketParamResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dydxprotocol_2fprices_2fquery_2eproto_getter, &descriptor_table_dydxprotocol_2fprices_2fquery_2eproto_once,
      file_level_metadata_dydxprotocol_2fprices_2fquery_2eproto[5]);
}
// ===================================================================

class QueryAllMarketParamsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryAllMarketParamsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryAllMarketParamsRequest, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageRequest& pagination(const QueryAllMarketParamsRequest* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageRequest&
QueryAllMarketParamsRequest::_Internal::pagination(const QueryAllMarketParamsRequest* msg) {
  return *msg->_impl_.pagination_;
}
void QueryAllMarketParamsRequest::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryAllMarketParamsRequest::QueryAllMarketParamsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dydxprotocol.prices.QueryAllMarketParamsRequest)
}
QueryAllMarketParamsRequest::QueryAllMarketParamsRequest(const QueryAllMarketParamsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryAllMarketParamsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageRequest(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:dydxprotocol.prices.QueryAllMarketParamsRequest)
}

inline void QueryAllMarketParamsRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.pagination_){nullptr}
  };
}

QueryAllMarketParamsRequest::~QueryAllMarketParamsRequest() {
  // @@protoc_insertion_point(destructor:dydxprotocol.prices.QueryAllMarketParamsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryAllMarketParamsRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryAllMarketParamsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryAllMarketParamsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dydxprotocol.prices.QueryAllMarketParamsRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryAllMarketParamsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .cosmos.base.query.v1beta1.PageRequest pagination = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryAllMarketParamsRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dydxprotocol.prices.QueryAllMarketParamsRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageRequest pagination = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dydxprotocol.prices.QueryAllMarketParamsRequest)
  return target;
}

::size_t QueryAllMarketParamsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dydxprotocol.prices.QueryAllMarketParamsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .cosmos.base.query.v1beta1.PageRequest pagination = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryAllMarketParamsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryAllMarketParamsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryAllMarketParamsRequest::GetClassData() const { return &_class_data_; }


void QueryAllMarketParamsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryAllMarketParamsRequest*>(&to_msg);
  auto& from = static_cast<const QueryAllMarketParamsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dydxprotocol.prices.QueryAllMarketParamsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageRequest::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryAllMarketParamsRequest::CopyFrom(const QueryAllMarketParamsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dydxprotocol.prices.QueryAllMarketParamsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAllMarketParamsRequest::IsInitialized() const {
  return true;
}

void QueryAllMarketParamsRequest::InternalSwap(QueryAllMarketParamsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryAllMarketParamsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dydxprotocol_2fprices_2fquery_2eproto_getter, &descriptor_table_dydxprotocol_2fprices_2fquery_2eproto_once,
      file_level_metadata_dydxprotocol_2fprices_2fquery_2eproto[6]);
}
// ===================================================================

class QueryAllMarketParamsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryAllMarketParamsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryAllMarketParamsResponse, _impl_._has_bits_);
  static const ::cosmos::base::query::v1beta1::PageResponse& pagination(const QueryAllMarketParamsResponse* msg);
  static void set_has_pagination(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::cosmos::base::query::v1beta1::PageResponse&
QueryAllMarketParamsResponse::_Internal::pagination(const QueryAllMarketParamsResponse* msg) {
  return *msg->_impl_.pagination_;
}
void QueryAllMarketParamsResponse::clear_market_params() {
  _internal_mutable_market_params()->Clear();
}
void QueryAllMarketParamsResponse::clear_pagination() {
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryAllMarketParamsResponse::QueryAllMarketParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dydxprotocol.prices.QueryAllMarketParamsResponse)
}
QueryAllMarketParamsResponse::QueryAllMarketParamsResponse(const QueryAllMarketParamsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryAllMarketParamsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.market_params_){from._impl_.market_params_}
    , decltype(_impl_.pagination_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pagination_ = new ::cosmos::base::query::v1beta1::PageResponse(*from._impl_.pagination_);
  }
  // @@protoc_insertion_point(copy_constructor:dydxprotocol.prices.QueryAllMarketParamsResponse)
}

inline void QueryAllMarketParamsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.market_params_){arena}
    , decltype(_impl_.pagination_){nullptr}
  };
}

QueryAllMarketParamsResponse::~QueryAllMarketParamsResponse() {
  // @@protoc_insertion_point(destructor:dydxprotocol.prices.QueryAllMarketParamsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryAllMarketParamsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_market_params()->~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.pagination_;
}

void QueryAllMarketParamsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryAllMarketParamsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dydxprotocol.prices.QueryAllMarketParamsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_market_params()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pagination_ != nullptr);
    _impl_.pagination_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryAllMarketParamsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .dydxprotocol.prices.MarketParam market_params = 1 [(.gogoproto.nullable) = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_market_params(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      // .cosmos.base.query.v1beta1.PageResponse pagination = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pagination(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryAllMarketParamsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dydxprotocol.prices.QueryAllMarketParamsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dydxprotocol.prices.MarketParam market_params = 1 [(.gogoproto.nullable) = false];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_market_params_size()); i < n; i++) {
    const auto& repfield = this->_internal_market_params(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pagination(this),
        _Internal::pagination(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dydxprotocol.prices.QueryAllMarketParamsResponse)
  return target;
}

::size_t QueryAllMarketParamsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dydxprotocol.prices.QueryAllMarketParamsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dydxprotocol.prices.MarketParam market_params = 1 [(.gogoproto.nullable) = false];
  total_size += 1UL * this->_internal_market_params_size();
  for (const auto& msg : this->_internal_market_params()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .cosmos.base.query.v1beta1.PageResponse pagination = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pagination_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryAllMarketParamsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryAllMarketParamsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryAllMarketParamsResponse::GetClassData() const { return &_class_data_; }


void QueryAllMarketParamsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryAllMarketParamsResponse*>(&to_msg);
  auto& from = static_cast<const QueryAllMarketParamsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dydxprotocol.prices.QueryAllMarketParamsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_market_params()->MergeFrom(from._internal_market_params());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_pagination()->::cosmos::base::query::v1beta1::PageResponse::MergeFrom(
        from._internal_pagination());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryAllMarketParamsResponse::CopyFrom(const QueryAllMarketParamsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dydxprotocol.prices.QueryAllMarketParamsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryAllMarketParamsResponse::IsInitialized() const {
  return true;
}

void QueryAllMarketParamsResponse::InternalSwap(QueryAllMarketParamsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _internal_mutable_market_params()->InternalSwap(other->_internal_mutable_market_params());
  swap(_impl_.pagination_, other->_impl_.pagination_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryAllMarketParamsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dydxprotocol_2fprices_2fquery_2eproto_getter, &descriptor_table_dydxprotocol_2fprices_2fquery_2eproto_once,
      file_level_metadata_dydxprotocol_2fprices_2fquery_2eproto[7]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace prices
}  // namespace dydxprotocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::dydxprotocol::prices::QueryMarketPriceRequest*
Arena::CreateMaybeMessage< ::dydxprotocol::prices::QueryMarketPriceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dydxprotocol::prices::QueryMarketPriceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dydxprotocol::prices::QueryMarketPriceResponse*
Arena::CreateMaybeMessage< ::dydxprotocol::prices::QueryMarketPriceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dydxprotocol::prices::QueryMarketPriceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dydxprotocol::prices::QueryAllMarketPricesRequest*
Arena::CreateMaybeMessage< ::dydxprotocol::prices::QueryAllMarketPricesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dydxprotocol::prices::QueryAllMarketPricesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dydxprotocol::prices::QueryAllMarketPricesResponse*
Arena::CreateMaybeMessage< ::dydxprotocol::prices::QueryAllMarketPricesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dydxprotocol::prices::QueryAllMarketPricesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dydxprotocol::prices::QueryMarketParamRequest*
Arena::CreateMaybeMessage< ::dydxprotocol::prices::QueryMarketParamRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dydxprotocol::prices::QueryMarketParamRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dydxprotocol::prices::QueryMarketParamResponse*
Arena::CreateMaybeMessage< ::dydxprotocol::prices::QueryMarketParamResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dydxprotocol::prices::QueryMarketParamResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dydxprotocol::prices::QueryAllMarketParamsRequest*
Arena::CreateMaybeMessage< ::dydxprotocol::prices::QueryAllMarketParamsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dydxprotocol::prices::QueryAllMarketParamsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dydxprotocol::prices::QueryAllMarketParamsResponse*
Arena::CreateMaybeMessage< ::dydxprotocol::prices::QueryAllMarketParamsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dydxprotocol::prices::QueryAllMarketParamsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
