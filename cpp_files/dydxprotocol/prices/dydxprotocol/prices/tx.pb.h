// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dydxprotocol/prices/tx.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_dydxprotocol_2fprices_2ftx_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_dydxprotocol_2fprices_2ftx_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "gogoproto/gogo.pb.h"
#include "cosmos_proto/cosmos.pb.h"
#include "cosmos/msg/v1/msg.pb.h"
#include "dydxprotocol/prices/market_param.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_dydxprotocol_2fprices_2ftx_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_dydxprotocol_2fprices_2ftx_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_dydxprotocol_2fprices_2ftx_2eproto;
namespace dydxprotocol {
namespace prices {
class MsgCreateOracleMarket;
struct MsgCreateOracleMarketDefaultTypeInternal;
extern MsgCreateOracleMarketDefaultTypeInternal _MsgCreateOracleMarket_default_instance_;
class MsgCreateOracleMarketResponse;
struct MsgCreateOracleMarketResponseDefaultTypeInternal;
extern MsgCreateOracleMarketResponseDefaultTypeInternal _MsgCreateOracleMarketResponse_default_instance_;
class MsgUpdateMarketPrices;
struct MsgUpdateMarketPricesDefaultTypeInternal;
extern MsgUpdateMarketPricesDefaultTypeInternal _MsgUpdateMarketPrices_default_instance_;
class MsgUpdateMarketPricesResponse;
struct MsgUpdateMarketPricesResponseDefaultTypeInternal;
extern MsgUpdateMarketPricesResponseDefaultTypeInternal _MsgUpdateMarketPricesResponse_default_instance_;
class MsgUpdateMarketPrices_MarketPrice;
struct MsgUpdateMarketPrices_MarketPriceDefaultTypeInternal;
extern MsgUpdateMarketPrices_MarketPriceDefaultTypeInternal _MsgUpdateMarketPrices_MarketPrice_default_instance_;
}  // namespace prices
}  // namespace dydxprotocol
PROTOBUF_NAMESPACE_OPEN
template <>
::dydxprotocol::prices::MsgCreateOracleMarket* Arena::CreateMaybeMessage<::dydxprotocol::prices::MsgCreateOracleMarket>(Arena*);
template <>
::dydxprotocol::prices::MsgCreateOracleMarketResponse* Arena::CreateMaybeMessage<::dydxprotocol::prices::MsgCreateOracleMarketResponse>(Arena*);
template <>
::dydxprotocol::prices::MsgUpdateMarketPrices* Arena::CreateMaybeMessage<::dydxprotocol::prices::MsgUpdateMarketPrices>(Arena*);
template <>
::dydxprotocol::prices::MsgUpdateMarketPricesResponse* Arena::CreateMaybeMessage<::dydxprotocol::prices::MsgUpdateMarketPricesResponse>(Arena*);
template <>
::dydxprotocol::prices::MsgUpdateMarketPrices_MarketPrice* Arena::CreateMaybeMessage<::dydxprotocol::prices::MsgUpdateMarketPrices_MarketPrice>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace dydxprotocol {
namespace prices {

// ===================================================================


// -------------------------------------------------------------------

class MsgCreateOracleMarket final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dydxprotocol.prices.MsgCreateOracleMarket) */ {
 public:
  inline MsgCreateOracleMarket() : MsgCreateOracleMarket(nullptr) {}
  ~MsgCreateOracleMarket() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgCreateOracleMarket(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgCreateOracleMarket(const MsgCreateOracleMarket& from);
  MsgCreateOracleMarket(MsgCreateOracleMarket&& from) noexcept
    : MsgCreateOracleMarket() {
    *this = ::std::move(from);
  }

  inline MsgCreateOracleMarket& operator=(const MsgCreateOracleMarket& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCreateOracleMarket& operator=(MsgCreateOracleMarket&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgCreateOracleMarket& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgCreateOracleMarket* internal_default_instance() {
    return reinterpret_cast<const MsgCreateOracleMarket*>(
               &_MsgCreateOracleMarket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MsgCreateOracleMarket& a, MsgCreateOracleMarket& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgCreateOracleMarket* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCreateOracleMarket* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgCreateOracleMarket* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgCreateOracleMarket>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgCreateOracleMarket& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgCreateOracleMarket& from) {
    MsgCreateOracleMarket::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgCreateOracleMarket* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.prices.MsgCreateOracleMarket";
  }
  protected:
  explicit MsgCreateOracleMarket(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAuthorityFieldNumber = 1,
    kParamsFieldNumber = 2,
  };
  // string authority = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* ptr);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // .dydxprotocol.prices.MarketParam params = 2 [(.gogoproto.nullable) = false];
  bool has_params() const;
  void clear_params() ;
  const ::dydxprotocol::prices::MarketParam& params() const;
  PROTOBUF_NODISCARD ::dydxprotocol::prices::MarketParam* release_params();
  ::dydxprotocol::prices::MarketParam* mutable_params();
  void set_allocated_params(::dydxprotocol::prices::MarketParam* params);
  private:
  const ::dydxprotocol::prices::MarketParam& _internal_params() const;
  ::dydxprotocol::prices::MarketParam* _internal_mutable_params();
  public:
  void unsafe_arena_set_allocated_params(
      ::dydxprotocol::prices::MarketParam* params);
  ::dydxprotocol::prices::MarketParam* unsafe_arena_release_params();
  // @@protoc_insertion_point(class_scope:dydxprotocol.prices.MsgCreateOracleMarket)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr authority_;
    ::dydxprotocol::prices::MarketParam* params_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dydxprotocol_2fprices_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgCreateOracleMarketResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:dydxprotocol.prices.MsgCreateOracleMarketResponse) */ {
 public:
  inline MsgCreateOracleMarketResponse() : MsgCreateOracleMarketResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgCreateOracleMarketResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgCreateOracleMarketResponse(const MsgCreateOracleMarketResponse& from);
  MsgCreateOracleMarketResponse(MsgCreateOracleMarketResponse&& from) noexcept
    : MsgCreateOracleMarketResponse() {
    *this = ::std::move(from);
  }

  inline MsgCreateOracleMarketResponse& operator=(const MsgCreateOracleMarketResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCreateOracleMarketResponse& operator=(MsgCreateOracleMarketResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgCreateOracleMarketResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgCreateOracleMarketResponse* internal_default_instance() {
    return reinterpret_cast<const MsgCreateOracleMarketResponse*>(
               &_MsgCreateOracleMarketResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MsgCreateOracleMarketResponse& a, MsgCreateOracleMarketResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgCreateOracleMarketResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCreateOracleMarketResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgCreateOracleMarketResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgCreateOracleMarketResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgCreateOracleMarketResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgCreateOracleMarketResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.prices.MsgCreateOracleMarketResponse";
  }
  protected:
  explicit MsgCreateOracleMarketResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dydxprotocol.prices.MsgCreateOracleMarketResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_dydxprotocol_2fprices_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgUpdateMarketPrices_MarketPrice final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dydxprotocol.prices.MsgUpdateMarketPrices.MarketPrice) */ {
 public:
  inline MsgUpdateMarketPrices_MarketPrice() : MsgUpdateMarketPrices_MarketPrice(nullptr) {}
  ~MsgUpdateMarketPrices_MarketPrice() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateMarketPrices_MarketPrice(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUpdateMarketPrices_MarketPrice(const MsgUpdateMarketPrices_MarketPrice& from);
  MsgUpdateMarketPrices_MarketPrice(MsgUpdateMarketPrices_MarketPrice&& from) noexcept
    : MsgUpdateMarketPrices_MarketPrice() {
    *this = ::std::move(from);
  }

  inline MsgUpdateMarketPrices_MarketPrice& operator=(const MsgUpdateMarketPrices_MarketPrice& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateMarketPrices_MarketPrice& operator=(MsgUpdateMarketPrices_MarketPrice&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateMarketPrices_MarketPrice& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateMarketPrices_MarketPrice* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateMarketPrices_MarketPrice*>(
               &_MsgUpdateMarketPrices_MarketPrice_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MsgUpdateMarketPrices_MarketPrice& a, MsgUpdateMarketPrices_MarketPrice& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpdateMarketPrices_MarketPrice* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateMarketPrices_MarketPrice* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateMarketPrices_MarketPrice* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUpdateMarketPrices_MarketPrice>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgUpdateMarketPrices_MarketPrice& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgUpdateMarketPrices_MarketPrice& from) {
    MsgUpdateMarketPrices_MarketPrice::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgUpdateMarketPrices_MarketPrice* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.prices.MsgUpdateMarketPrices.MarketPrice";
  }
  protected:
  explicit MsgUpdateMarketPrices_MarketPrice(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPriceFieldNumber = 2,
    kMarketIdFieldNumber = 1,
  };
  // uint64 price = 2;
  void clear_price() ;
  ::uint64_t price() const;
  void set_price(::uint64_t value);

  private:
  ::uint64_t _internal_price() const;
  void _internal_set_price(::uint64_t value);

  public:
  // uint32 market_id = 1;
  void clear_market_id() ;
  ::uint32_t market_id() const;
  void set_market_id(::uint32_t value);

  private:
  ::uint32_t _internal_market_id() const;
  void _internal_set_market_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:dydxprotocol.prices.MsgUpdateMarketPrices.MarketPrice)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint64_t price_;
    ::uint32_t market_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dydxprotocol_2fprices_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgUpdateMarketPrices final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dydxprotocol.prices.MsgUpdateMarketPrices) */ {
 public:
  inline MsgUpdateMarketPrices() : MsgUpdateMarketPrices(nullptr) {}
  ~MsgUpdateMarketPrices() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateMarketPrices(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUpdateMarketPrices(const MsgUpdateMarketPrices& from);
  MsgUpdateMarketPrices(MsgUpdateMarketPrices&& from) noexcept
    : MsgUpdateMarketPrices() {
    *this = ::std::move(from);
  }

  inline MsgUpdateMarketPrices& operator=(const MsgUpdateMarketPrices& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateMarketPrices& operator=(MsgUpdateMarketPrices&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateMarketPrices& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateMarketPrices* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateMarketPrices*>(
               &_MsgUpdateMarketPrices_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MsgUpdateMarketPrices& a, MsgUpdateMarketPrices& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpdateMarketPrices* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateMarketPrices* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateMarketPrices* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUpdateMarketPrices>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgUpdateMarketPrices& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgUpdateMarketPrices& from) {
    MsgUpdateMarketPrices::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgUpdateMarketPrices* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.prices.MsgUpdateMarketPrices";
  }
  protected:
  explicit MsgUpdateMarketPrices(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MsgUpdateMarketPrices_MarketPrice MarketPrice;

  // accessors -------------------------------------------------------

  enum : int {
    kMarketPriceUpdatesFieldNumber = 1,
  };
  // repeated .dydxprotocol.prices.MsgUpdateMarketPrices.MarketPrice market_price_updates = 1;
  int market_price_updates_size() const;
  private:
  int _internal_market_price_updates_size() const;

  public:
  void clear_market_price_updates() ;
  ::dydxprotocol::prices::MsgUpdateMarketPrices_MarketPrice* mutable_market_price_updates(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dydxprotocol::prices::MsgUpdateMarketPrices_MarketPrice >*
      mutable_market_price_updates();
  private:
  const ::dydxprotocol::prices::MsgUpdateMarketPrices_MarketPrice& _internal_market_price_updates(int index) const;
  ::dydxprotocol::prices::MsgUpdateMarketPrices_MarketPrice* _internal_add_market_price_updates();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::dydxprotocol::prices::MsgUpdateMarketPrices_MarketPrice>& _internal_market_price_updates() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::dydxprotocol::prices::MsgUpdateMarketPrices_MarketPrice>* _internal_mutable_market_price_updates();
  public:
  const ::dydxprotocol::prices::MsgUpdateMarketPrices_MarketPrice& market_price_updates(int index) const;
  ::dydxprotocol::prices::MsgUpdateMarketPrices_MarketPrice* add_market_price_updates();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dydxprotocol::prices::MsgUpdateMarketPrices_MarketPrice >&
      market_price_updates() const;
  // @@protoc_insertion_point(class_scope:dydxprotocol.prices.MsgUpdateMarketPrices)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dydxprotocol::prices::MsgUpdateMarketPrices_MarketPrice > market_price_updates_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dydxprotocol_2fprices_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgUpdateMarketPricesResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:dydxprotocol.prices.MsgUpdateMarketPricesResponse) */ {
 public:
  inline MsgUpdateMarketPricesResponse() : MsgUpdateMarketPricesResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateMarketPricesResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUpdateMarketPricesResponse(const MsgUpdateMarketPricesResponse& from);
  MsgUpdateMarketPricesResponse(MsgUpdateMarketPricesResponse&& from) noexcept
    : MsgUpdateMarketPricesResponse() {
    *this = ::std::move(from);
  }

  inline MsgUpdateMarketPricesResponse& operator=(const MsgUpdateMarketPricesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateMarketPricesResponse& operator=(MsgUpdateMarketPricesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateMarketPricesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateMarketPricesResponse* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateMarketPricesResponse*>(
               &_MsgUpdateMarketPricesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MsgUpdateMarketPricesResponse& a, MsgUpdateMarketPricesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpdateMarketPricesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateMarketPricesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateMarketPricesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUpdateMarketPricesResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgUpdateMarketPricesResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgUpdateMarketPricesResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.prices.MsgUpdateMarketPricesResponse";
  }
  protected:
  explicit MsgUpdateMarketPricesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dydxprotocol.prices.MsgUpdateMarketPricesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_dydxprotocol_2fprices_2ftx_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MsgCreateOracleMarket

// string authority = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgCreateOracleMarket::clear_authority() {
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgCreateOracleMarket::authority() const {
  // @@protoc_insertion_point(field_get:dydxprotocol.prices.MsgCreateOracleMarket.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgCreateOracleMarket::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dydxprotocol.prices.MsgCreateOracleMarket.authority)
}
inline std::string* MsgCreateOracleMarket::mutable_authority() {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:dydxprotocol.prices.MsgCreateOracleMarket.authority)
  return _s;
}
inline const std::string& MsgCreateOracleMarket::_internal_authority() const {
  return _impl_.authority_.Get();
}
inline void MsgCreateOracleMarket::_internal_set_authority(const std::string& value) {
  ;


  _impl_.authority_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgCreateOracleMarket::_internal_mutable_authority() {
  ;
  return _impl_.authority_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgCreateOracleMarket::release_authority() {
  // @@protoc_insertion_point(field_release:dydxprotocol.prices.MsgCreateOracleMarket.authority)
  return _impl_.authority_.Release();
}
inline void MsgCreateOracleMarket::set_allocated_authority(std::string* value) {
  _impl_.authority_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.authority_.IsDefault()) {
          _impl_.authority_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dydxprotocol.prices.MsgCreateOracleMarket.authority)
}

// .dydxprotocol.prices.MarketParam params = 2 [(.gogoproto.nullable) = false];
inline bool MsgCreateOracleMarket::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::dydxprotocol::prices::MarketParam& MsgCreateOracleMarket::_internal_params() const {
  const ::dydxprotocol::prices::MarketParam* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::dydxprotocol::prices::MarketParam&>(
      ::dydxprotocol::prices::_MarketParam_default_instance_);
}
inline const ::dydxprotocol::prices::MarketParam& MsgCreateOracleMarket::params() const {
  // @@protoc_insertion_point(field_get:dydxprotocol.prices.MsgCreateOracleMarket.params)
  return _internal_params();
}
inline void MsgCreateOracleMarket::unsafe_arena_set_allocated_params(
    ::dydxprotocol::prices::MarketParam* params) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = params;
  if (params) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dydxprotocol.prices.MsgCreateOracleMarket.params)
}
inline ::dydxprotocol::prices::MarketParam* MsgCreateOracleMarket::release_params() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dydxprotocol::prices::MarketParam* temp = _impl_.params_;
  _impl_.params_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::dydxprotocol::prices::MarketParam* MsgCreateOracleMarket::unsafe_arena_release_params() {
  // @@protoc_insertion_point(field_release:dydxprotocol.prices.MsgCreateOracleMarket.params)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dydxprotocol::prices::MarketParam* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::dydxprotocol::prices::MarketParam* MsgCreateOracleMarket::_internal_mutable_params() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.params_ == nullptr) {
    auto* p = CreateMaybeMessage<::dydxprotocol::prices::MarketParam>(GetArenaForAllocation());
    _impl_.params_ = p;
  }
  return _impl_.params_;
}
inline ::dydxprotocol::prices::MarketParam* MsgCreateOracleMarket::mutable_params() {
  ::dydxprotocol::prices::MarketParam* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:dydxprotocol.prices.MsgCreateOracleMarket.params)
  return _msg;
}
inline void MsgCreateOracleMarket::set_allocated_params(::dydxprotocol::prices::MarketParam* params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.params_);
  }
  if (params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params));
    if (message_arena != submessage_arena) {
      params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.params_ = params;
  // @@protoc_insertion_point(field_set_allocated:dydxprotocol.prices.MsgCreateOracleMarket.params)
}

// -------------------------------------------------------------------

// MsgCreateOracleMarketResponse

// -------------------------------------------------------------------

// MsgUpdateMarketPrices_MarketPrice

// uint32 market_id = 1;
inline void MsgUpdateMarketPrices_MarketPrice::clear_market_id() {
  _impl_.market_id_ = 0u;
}
inline ::uint32_t MsgUpdateMarketPrices_MarketPrice::market_id() const {
  // @@protoc_insertion_point(field_get:dydxprotocol.prices.MsgUpdateMarketPrices.MarketPrice.market_id)
  return _internal_market_id();
}
inline void MsgUpdateMarketPrices_MarketPrice::set_market_id(::uint32_t value) {
  _internal_set_market_id(value);
  // @@protoc_insertion_point(field_set:dydxprotocol.prices.MsgUpdateMarketPrices.MarketPrice.market_id)
}
inline ::uint32_t MsgUpdateMarketPrices_MarketPrice::_internal_market_id() const {
  return _impl_.market_id_;
}
inline void MsgUpdateMarketPrices_MarketPrice::_internal_set_market_id(::uint32_t value) {
  ;
  _impl_.market_id_ = value;
}

// uint64 price = 2;
inline void MsgUpdateMarketPrices_MarketPrice::clear_price() {
  _impl_.price_ = ::uint64_t{0u};
}
inline ::uint64_t MsgUpdateMarketPrices_MarketPrice::price() const {
  // @@protoc_insertion_point(field_get:dydxprotocol.prices.MsgUpdateMarketPrices.MarketPrice.price)
  return _internal_price();
}
inline void MsgUpdateMarketPrices_MarketPrice::set_price(::uint64_t value) {
  _internal_set_price(value);
  // @@protoc_insertion_point(field_set:dydxprotocol.prices.MsgUpdateMarketPrices.MarketPrice.price)
}
inline ::uint64_t MsgUpdateMarketPrices_MarketPrice::_internal_price() const {
  return _impl_.price_;
}
inline void MsgUpdateMarketPrices_MarketPrice::_internal_set_price(::uint64_t value) {
  ;
  _impl_.price_ = value;
}

// -------------------------------------------------------------------

// MsgUpdateMarketPrices

// repeated .dydxprotocol.prices.MsgUpdateMarketPrices.MarketPrice market_price_updates = 1;
inline int MsgUpdateMarketPrices::_internal_market_price_updates_size() const {
  return _impl_.market_price_updates_.size();
}
inline int MsgUpdateMarketPrices::market_price_updates_size() const {
  return _internal_market_price_updates_size();
}
inline void MsgUpdateMarketPrices::clear_market_price_updates() {
  _internal_mutable_market_price_updates()->Clear();
}
inline ::dydxprotocol::prices::MsgUpdateMarketPrices_MarketPrice* MsgUpdateMarketPrices::mutable_market_price_updates(int index) {
  // @@protoc_insertion_point(field_mutable:dydxprotocol.prices.MsgUpdateMarketPrices.market_price_updates)
  return _internal_mutable_market_price_updates()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dydxprotocol::prices::MsgUpdateMarketPrices_MarketPrice >*
MsgUpdateMarketPrices::mutable_market_price_updates() {
  // @@protoc_insertion_point(field_mutable_list:dydxprotocol.prices.MsgUpdateMarketPrices.market_price_updates)
  return _internal_mutable_market_price_updates();
}
inline const ::dydxprotocol::prices::MsgUpdateMarketPrices_MarketPrice& MsgUpdateMarketPrices::_internal_market_price_updates(int index) const {
  return _internal_market_price_updates().Get(index);
}
inline const ::dydxprotocol::prices::MsgUpdateMarketPrices_MarketPrice& MsgUpdateMarketPrices::market_price_updates(int index) const {
  // @@protoc_insertion_point(field_get:dydxprotocol.prices.MsgUpdateMarketPrices.market_price_updates)
  return _internal_market_price_updates(index);
}
inline ::dydxprotocol::prices::MsgUpdateMarketPrices_MarketPrice* MsgUpdateMarketPrices::_internal_add_market_price_updates() {
  return _internal_mutable_market_price_updates()->Add();
}
inline ::dydxprotocol::prices::MsgUpdateMarketPrices_MarketPrice* MsgUpdateMarketPrices::add_market_price_updates() {
  ::dydxprotocol::prices::MsgUpdateMarketPrices_MarketPrice* _add = _internal_add_market_price_updates();
  // @@protoc_insertion_point(field_add:dydxprotocol.prices.MsgUpdateMarketPrices.market_price_updates)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dydxprotocol::prices::MsgUpdateMarketPrices_MarketPrice >&
MsgUpdateMarketPrices::market_price_updates() const {
  // @@protoc_insertion_point(field_list:dydxprotocol.prices.MsgUpdateMarketPrices.market_price_updates)
  return _internal_market_price_updates();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::dydxprotocol::prices::MsgUpdateMarketPrices_MarketPrice>&
MsgUpdateMarketPrices::_internal_market_price_updates() const {
  return _impl_.market_price_updates_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::dydxprotocol::prices::MsgUpdateMarketPrices_MarketPrice>*
MsgUpdateMarketPrices::_internal_mutable_market_price_updates() {
  return &_impl_.market_price_updates_;
}

// -------------------------------------------------------------------

// MsgUpdateMarketPricesResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace prices
}  // namespace dydxprotocol


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_dydxprotocol_2fprices_2ftx_2eproto_2epb_2eh
