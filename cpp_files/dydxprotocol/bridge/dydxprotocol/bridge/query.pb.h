// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dydxprotocol/bridge/query.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_dydxprotocol_2fbridge_2fquery_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_dydxprotocol_2fbridge_2fquery_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "gogoproto/gogo.pb.h"
#include "google/api/annotations.pb.h"
#include "dydxprotocol/bridge/bridge_event_info.pb.h"
#include "dydxprotocol/bridge/params.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_dydxprotocol_2fbridge_2fquery_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_dydxprotocol_2fbridge_2fquery_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_dydxprotocol_2fbridge_2fquery_2eproto;
namespace dydxprotocol {
namespace bridge {
class QueryAcknowledgedEventInfoRequest;
struct QueryAcknowledgedEventInfoRequestDefaultTypeInternal;
extern QueryAcknowledgedEventInfoRequestDefaultTypeInternal _QueryAcknowledgedEventInfoRequest_default_instance_;
class QueryAcknowledgedEventInfoResponse;
struct QueryAcknowledgedEventInfoResponseDefaultTypeInternal;
extern QueryAcknowledgedEventInfoResponseDefaultTypeInternal _QueryAcknowledgedEventInfoResponse_default_instance_;
class QueryEventParamsRequest;
struct QueryEventParamsRequestDefaultTypeInternal;
extern QueryEventParamsRequestDefaultTypeInternal _QueryEventParamsRequest_default_instance_;
class QueryEventParamsResponse;
struct QueryEventParamsResponseDefaultTypeInternal;
extern QueryEventParamsResponseDefaultTypeInternal _QueryEventParamsResponse_default_instance_;
class QueryProposeParamsRequest;
struct QueryProposeParamsRequestDefaultTypeInternal;
extern QueryProposeParamsRequestDefaultTypeInternal _QueryProposeParamsRequest_default_instance_;
class QueryProposeParamsResponse;
struct QueryProposeParamsResponseDefaultTypeInternal;
extern QueryProposeParamsResponseDefaultTypeInternal _QueryProposeParamsResponse_default_instance_;
class QueryRecognizedEventInfoRequest;
struct QueryRecognizedEventInfoRequestDefaultTypeInternal;
extern QueryRecognizedEventInfoRequestDefaultTypeInternal _QueryRecognizedEventInfoRequest_default_instance_;
class QueryRecognizedEventInfoResponse;
struct QueryRecognizedEventInfoResponseDefaultTypeInternal;
extern QueryRecognizedEventInfoResponseDefaultTypeInternal _QueryRecognizedEventInfoResponse_default_instance_;
class QuerySafetyParamsRequest;
struct QuerySafetyParamsRequestDefaultTypeInternal;
extern QuerySafetyParamsRequestDefaultTypeInternal _QuerySafetyParamsRequest_default_instance_;
class QuerySafetyParamsResponse;
struct QuerySafetyParamsResponseDefaultTypeInternal;
extern QuerySafetyParamsResponseDefaultTypeInternal _QuerySafetyParamsResponse_default_instance_;
}  // namespace bridge
}  // namespace dydxprotocol
PROTOBUF_NAMESPACE_OPEN
template <>
::dydxprotocol::bridge::QueryAcknowledgedEventInfoRequest* Arena::CreateMaybeMessage<::dydxprotocol::bridge::QueryAcknowledgedEventInfoRequest>(Arena*);
template <>
::dydxprotocol::bridge::QueryAcknowledgedEventInfoResponse* Arena::CreateMaybeMessage<::dydxprotocol::bridge::QueryAcknowledgedEventInfoResponse>(Arena*);
template <>
::dydxprotocol::bridge::QueryEventParamsRequest* Arena::CreateMaybeMessage<::dydxprotocol::bridge::QueryEventParamsRequest>(Arena*);
template <>
::dydxprotocol::bridge::QueryEventParamsResponse* Arena::CreateMaybeMessage<::dydxprotocol::bridge::QueryEventParamsResponse>(Arena*);
template <>
::dydxprotocol::bridge::QueryProposeParamsRequest* Arena::CreateMaybeMessage<::dydxprotocol::bridge::QueryProposeParamsRequest>(Arena*);
template <>
::dydxprotocol::bridge::QueryProposeParamsResponse* Arena::CreateMaybeMessage<::dydxprotocol::bridge::QueryProposeParamsResponse>(Arena*);
template <>
::dydxprotocol::bridge::QueryRecognizedEventInfoRequest* Arena::CreateMaybeMessage<::dydxprotocol::bridge::QueryRecognizedEventInfoRequest>(Arena*);
template <>
::dydxprotocol::bridge::QueryRecognizedEventInfoResponse* Arena::CreateMaybeMessage<::dydxprotocol::bridge::QueryRecognizedEventInfoResponse>(Arena*);
template <>
::dydxprotocol::bridge::QuerySafetyParamsRequest* Arena::CreateMaybeMessage<::dydxprotocol::bridge::QuerySafetyParamsRequest>(Arena*);
template <>
::dydxprotocol::bridge::QuerySafetyParamsResponse* Arena::CreateMaybeMessage<::dydxprotocol::bridge::QuerySafetyParamsResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace dydxprotocol {
namespace bridge {

// ===================================================================


// -------------------------------------------------------------------

class QueryEventParamsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:dydxprotocol.bridge.QueryEventParamsRequest) */ {
 public:
  inline QueryEventParamsRequest() : QueryEventParamsRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryEventParamsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryEventParamsRequest(const QueryEventParamsRequest& from);
  QueryEventParamsRequest(QueryEventParamsRequest&& from) noexcept
    : QueryEventParamsRequest() {
    *this = ::std::move(from);
  }

  inline QueryEventParamsRequest& operator=(const QueryEventParamsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryEventParamsRequest& operator=(QueryEventParamsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryEventParamsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryEventParamsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryEventParamsRequest*>(
               &_QueryEventParamsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(QueryEventParamsRequest& a, QueryEventParamsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryEventParamsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryEventParamsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryEventParamsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryEventParamsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const QueryEventParamsRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const QueryEventParamsRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.bridge.QueryEventParamsRequest";
  }
  protected:
  explicit QueryEventParamsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dydxprotocol.bridge.QueryEventParamsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_dydxprotocol_2fbridge_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryEventParamsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dydxprotocol.bridge.QueryEventParamsResponse) */ {
 public:
  inline QueryEventParamsResponse() : QueryEventParamsResponse(nullptr) {}
  ~QueryEventParamsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryEventParamsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryEventParamsResponse(const QueryEventParamsResponse& from);
  QueryEventParamsResponse(QueryEventParamsResponse&& from) noexcept
    : QueryEventParamsResponse() {
    *this = ::std::move(from);
  }

  inline QueryEventParamsResponse& operator=(const QueryEventParamsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryEventParamsResponse& operator=(QueryEventParamsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryEventParamsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryEventParamsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryEventParamsResponse*>(
               &_QueryEventParamsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(QueryEventParamsResponse& a, QueryEventParamsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryEventParamsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryEventParamsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryEventParamsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryEventParamsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryEventParamsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryEventParamsResponse& from) {
    QueryEventParamsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryEventParamsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.bridge.QueryEventParamsResponse";
  }
  protected:
  explicit QueryEventParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParamsFieldNumber = 1,
  };
  // .dydxprotocol.bridge.EventParams params = 1 [(.gogoproto.nullable) = false];
  bool has_params() const;
  void clear_params() ;
  const ::dydxprotocol::bridge::EventParams& params() const;
  PROTOBUF_NODISCARD ::dydxprotocol::bridge::EventParams* release_params();
  ::dydxprotocol::bridge::EventParams* mutable_params();
  void set_allocated_params(::dydxprotocol::bridge::EventParams* params);
  private:
  const ::dydxprotocol::bridge::EventParams& _internal_params() const;
  ::dydxprotocol::bridge::EventParams* _internal_mutable_params();
  public:
  void unsafe_arena_set_allocated_params(
      ::dydxprotocol::bridge::EventParams* params);
  ::dydxprotocol::bridge::EventParams* unsafe_arena_release_params();
  // @@protoc_insertion_point(class_scope:dydxprotocol.bridge.QueryEventParamsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::dydxprotocol::bridge::EventParams* params_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dydxprotocol_2fbridge_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryProposeParamsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:dydxprotocol.bridge.QueryProposeParamsRequest) */ {
 public:
  inline QueryProposeParamsRequest() : QueryProposeParamsRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryProposeParamsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryProposeParamsRequest(const QueryProposeParamsRequest& from);
  QueryProposeParamsRequest(QueryProposeParamsRequest&& from) noexcept
    : QueryProposeParamsRequest() {
    *this = ::std::move(from);
  }

  inline QueryProposeParamsRequest& operator=(const QueryProposeParamsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryProposeParamsRequest& operator=(QueryProposeParamsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryProposeParamsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryProposeParamsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryProposeParamsRequest*>(
               &_QueryProposeParamsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(QueryProposeParamsRequest& a, QueryProposeParamsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryProposeParamsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryProposeParamsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryProposeParamsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryProposeParamsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const QueryProposeParamsRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const QueryProposeParamsRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.bridge.QueryProposeParamsRequest";
  }
  protected:
  explicit QueryProposeParamsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dydxprotocol.bridge.QueryProposeParamsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_dydxprotocol_2fbridge_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryProposeParamsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dydxprotocol.bridge.QueryProposeParamsResponse) */ {
 public:
  inline QueryProposeParamsResponse() : QueryProposeParamsResponse(nullptr) {}
  ~QueryProposeParamsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryProposeParamsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryProposeParamsResponse(const QueryProposeParamsResponse& from);
  QueryProposeParamsResponse(QueryProposeParamsResponse&& from) noexcept
    : QueryProposeParamsResponse() {
    *this = ::std::move(from);
  }

  inline QueryProposeParamsResponse& operator=(const QueryProposeParamsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryProposeParamsResponse& operator=(QueryProposeParamsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryProposeParamsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryProposeParamsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryProposeParamsResponse*>(
               &_QueryProposeParamsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(QueryProposeParamsResponse& a, QueryProposeParamsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryProposeParamsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryProposeParamsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryProposeParamsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryProposeParamsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryProposeParamsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryProposeParamsResponse& from) {
    QueryProposeParamsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryProposeParamsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.bridge.QueryProposeParamsResponse";
  }
  protected:
  explicit QueryProposeParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParamsFieldNumber = 1,
  };
  // .dydxprotocol.bridge.ProposeParams params = 1 [(.gogoproto.nullable) = false];
  bool has_params() const;
  void clear_params() ;
  const ::dydxprotocol::bridge::ProposeParams& params() const;
  PROTOBUF_NODISCARD ::dydxprotocol::bridge::ProposeParams* release_params();
  ::dydxprotocol::bridge::ProposeParams* mutable_params();
  void set_allocated_params(::dydxprotocol::bridge::ProposeParams* params);
  private:
  const ::dydxprotocol::bridge::ProposeParams& _internal_params() const;
  ::dydxprotocol::bridge::ProposeParams* _internal_mutable_params();
  public:
  void unsafe_arena_set_allocated_params(
      ::dydxprotocol::bridge::ProposeParams* params);
  ::dydxprotocol::bridge::ProposeParams* unsafe_arena_release_params();
  // @@protoc_insertion_point(class_scope:dydxprotocol.bridge.QueryProposeParamsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::dydxprotocol::bridge::ProposeParams* params_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dydxprotocol_2fbridge_2fquery_2eproto;
};// -------------------------------------------------------------------

class QuerySafetyParamsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:dydxprotocol.bridge.QuerySafetyParamsRequest) */ {
 public:
  inline QuerySafetyParamsRequest() : QuerySafetyParamsRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QuerySafetyParamsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QuerySafetyParamsRequest(const QuerySafetyParamsRequest& from);
  QuerySafetyParamsRequest(QuerySafetyParamsRequest&& from) noexcept
    : QuerySafetyParamsRequest() {
    *this = ::std::move(from);
  }

  inline QuerySafetyParamsRequest& operator=(const QuerySafetyParamsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QuerySafetyParamsRequest& operator=(QuerySafetyParamsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QuerySafetyParamsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QuerySafetyParamsRequest* internal_default_instance() {
    return reinterpret_cast<const QuerySafetyParamsRequest*>(
               &_QuerySafetyParamsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(QuerySafetyParamsRequest& a, QuerySafetyParamsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(QuerySafetyParamsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QuerySafetyParamsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QuerySafetyParamsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QuerySafetyParamsRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const QuerySafetyParamsRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const QuerySafetyParamsRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.bridge.QuerySafetyParamsRequest";
  }
  protected:
  explicit QuerySafetyParamsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dydxprotocol.bridge.QuerySafetyParamsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_dydxprotocol_2fbridge_2fquery_2eproto;
};// -------------------------------------------------------------------

class QuerySafetyParamsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dydxprotocol.bridge.QuerySafetyParamsResponse) */ {
 public:
  inline QuerySafetyParamsResponse() : QuerySafetyParamsResponse(nullptr) {}
  ~QuerySafetyParamsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QuerySafetyParamsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QuerySafetyParamsResponse(const QuerySafetyParamsResponse& from);
  QuerySafetyParamsResponse(QuerySafetyParamsResponse&& from) noexcept
    : QuerySafetyParamsResponse() {
    *this = ::std::move(from);
  }

  inline QuerySafetyParamsResponse& operator=(const QuerySafetyParamsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QuerySafetyParamsResponse& operator=(QuerySafetyParamsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QuerySafetyParamsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QuerySafetyParamsResponse* internal_default_instance() {
    return reinterpret_cast<const QuerySafetyParamsResponse*>(
               &_QuerySafetyParamsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(QuerySafetyParamsResponse& a, QuerySafetyParamsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(QuerySafetyParamsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QuerySafetyParamsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QuerySafetyParamsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QuerySafetyParamsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QuerySafetyParamsResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QuerySafetyParamsResponse& from) {
    QuerySafetyParamsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QuerySafetyParamsResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.bridge.QuerySafetyParamsResponse";
  }
  protected:
  explicit QuerySafetyParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParamsFieldNumber = 1,
  };
  // .dydxprotocol.bridge.SafetyParams params = 1 [(.gogoproto.nullable) = false];
  bool has_params() const;
  void clear_params() ;
  const ::dydxprotocol::bridge::SafetyParams& params() const;
  PROTOBUF_NODISCARD ::dydxprotocol::bridge::SafetyParams* release_params();
  ::dydxprotocol::bridge::SafetyParams* mutable_params();
  void set_allocated_params(::dydxprotocol::bridge::SafetyParams* params);
  private:
  const ::dydxprotocol::bridge::SafetyParams& _internal_params() const;
  ::dydxprotocol::bridge::SafetyParams* _internal_mutable_params();
  public:
  void unsafe_arena_set_allocated_params(
      ::dydxprotocol::bridge::SafetyParams* params);
  ::dydxprotocol::bridge::SafetyParams* unsafe_arena_release_params();
  // @@protoc_insertion_point(class_scope:dydxprotocol.bridge.QuerySafetyParamsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::dydxprotocol::bridge::SafetyParams* params_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dydxprotocol_2fbridge_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryAcknowledgedEventInfoRequest final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:dydxprotocol.bridge.QueryAcknowledgedEventInfoRequest) */ {
 public:
  inline QueryAcknowledgedEventInfoRequest() : QueryAcknowledgedEventInfoRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAcknowledgedEventInfoRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryAcknowledgedEventInfoRequest(const QueryAcknowledgedEventInfoRequest& from);
  QueryAcknowledgedEventInfoRequest(QueryAcknowledgedEventInfoRequest&& from) noexcept
    : QueryAcknowledgedEventInfoRequest() {
    *this = ::std::move(from);
  }

  inline QueryAcknowledgedEventInfoRequest& operator=(const QueryAcknowledgedEventInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAcknowledgedEventInfoRequest& operator=(QueryAcknowledgedEventInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAcknowledgedEventInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAcknowledgedEventInfoRequest* internal_default_instance() {
    return reinterpret_cast<const QueryAcknowledgedEventInfoRequest*>(
               &_QueryAcknowledgedEventInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(QueryAcknowledgedEventInfoRequest& a, QueryAcknowledgedEventInfoRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryAcknowledgedEventInfoRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAcknowledgedEventInfoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAcknowledgedEventInfoRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryAcknowledgedEventInfoRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const QueryAcknowledgedEventInfoRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const QueryAcknowledgedEventInfoRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.bridge.QueryAcknowledgedEventInfoRequest";
  }
  protected:
  explicit QueryAcknowledgedEventInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dydxprotocol.bridge.QueryAcknowledgedEventInfoRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_dydxprotocol_2fbridge_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryAcknowledgedEventInfoResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dydxprotocol.bridge.QueryAcknowledgedEventInfoResponse) */ {
 public:
  inline QueryAcknowledgedEventInfoResponse() : QueryAcknowledgedEventInfoResponse(nullptr) {}
  ~QueryAcknowledgedEventInfoResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAcknowledgedEventInfoResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryAcknowledgedEventInfoResponse(const QueryAcknowledgedEventInfoResponse& from);
  QueryAcknowledgedEventInfoResponse(QueryAcknowledgedEventInfoResponse&& from) noexcept
    : QueryAcknowledgedEventInfoResponse() {
    *this = ::std::move(from);
  }

  inline QueryAcknowledgedEventInfoResponse& operator=(const QueryAcknowledgedEventInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAcknowledgedEventInfoResponse& operator=(QueryAcknowledgedEventInfoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAcknowledgedEventInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAcknowledgedEventInfoResponse* internal_default_instance() {
    return reinterpret_cast<const QueryAcknowledgedEventInfoResponse*>(
               &_QueryAcknowledgedEventInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(QueryAcknowledgedEventInfoResponse& a, QueryAcknowledgedEventInfoResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryAcknowledgedEventInfoResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAcknowledgedEventInfoResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAcknowledgedEventInfoResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryAcknowledgedEventInfoResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryAcknowledgedEventInfoResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryAcknowledgedEventInfoResponse& from) {
    QueryAcknowledgedEventInfoResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryAcknowledgedEventInfoResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.bridge.QueryAcknowledgedEventInfoResponse";
  }
  protected:
  explicit QueryAcknowledgedEventInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfoFieldNumber = 1,
  };
  // .dydxprotocol.bridge.BridgeEventInfo info = 1 [(.gogoproto.nullable) = false];
  bool has_info() const;
  void clear_info() ;
  const ::dydxprotocol::bridge::BridgeEventInfo& info() const;
  PROTOBUF_NODISCARD ::dydxprotocol::bridge::BridgeEventInfo* release_info();
  ::dydxprotocol::bridge::BridgeEventInfo* mutable_info();
  void set_allocated_info(::dydxprotocol::bridge::BridgeEventInfo* info);
  private:
  const ::dydxprotocol::bridge::BridgeEventInfo& _internal_info() const;
  ::dydxprotocol::bridge::BridgeEventInfo* _internal_mutable_info();
  public:
  void unsafe_arena_set_allocated_info(
      ::dydxprotocol::bridge::BridgeEventInfo* info);
  ::dydxprotocol::bridge::BridgeEventInfo* unsafe_arena_release_info();
  // @@protoc_insertion_point(class_scope:dydxprotocol.bridge.QueryAcknowledgedEventInfoResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::dydxprotocol::bridge::BridgeEventInfo* info_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dydxprotocol_2fbridge_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryRecognizedEventInfoRequest final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:dydxprotocol.bridge.QueryRecognizedEventInfoRequest) */ {
 public:
  inline QueryRecognizedEventInfoRequest() : QueryRecognizedEventInfoRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryRecognizedEventInfoRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryRecognizedEventInfoRequest(const QueryRecognizedEventInfoRequest& from);
  QueryRecognizedEventInfoRequest(QueryRecognizedEventInfoRequest&& from) noexcept
    : QueryRecognizedEventInfoRequest() {
    *this = ::std::move(from);
  }

  inline QueryRecognizedEventInfoRequest& operator=(const QueryRecognizedEventInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryRecognizedEventInfoRequest& operator=(QueryRecognizedEventInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryRecognizedEventInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryRecognizedEventInfoRequest* internal_default_instance() {
    return reinterpret_cast<const QueryRecognizedEventInfoRequest*>(
               &_QueryRecognizedEventInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(QueryRecognizedEventInfoRequest& a, QueryRecognizedEventInfoRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryRecognizedEventInfoRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryRecognizedEventInfoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryRecognizedEventInfoRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryRecognizedEventInfoRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const QueryRecognizedEventInfoRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const QueryRecognizedEventInfoRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.bridge.QueryRecognizedEventInfoRequest";
  }
  protected:
  explicit QueryRecognizedEventInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dydxprotocol.bridge.QueryRecognizedEventInfoRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_dydxprotocol_2fbridge_2fquery_2eproto;
};// -------------------------------------------------------------------

class QueryRecognizedEventInfoResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dydxprotocol.bridge.QueryRecognizedEventInfoResponse) */ {
 public:
  inline QueryRecognizedEventInfoResponse() : QueryRecognizedEventInfoResponse(nullptr) {}
  ~QueryRecognizedEventInfoResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR QueryRecognizedEventInfoResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  QueryRecognizedEventInfoResponse(const QueryRecognizedEventInfoResponse& from);
  QueryRecognizedEventInfoResponse(QueryRecognizedEventInfoResponse&& from) noexcept
    : QueryRecognizedEventInfoResponse() {
    *this = ::std::move(from);
  }

  inline QueryRecognizedEventInfoResponse& operator=(const QueryRecognizedEventInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryRecognizedEventInfoResponse& operator=(QueryRecognizedEventInfoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryRecognizedEventInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryRecognizedEventInfoResponse* internal_default_instance() {
    return reinterpret_cast<const QueryRecognizedEventInfoResponse*>(
               &_QueryRecognizedEventInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(QueryRecognizedEventInfoResponse& a, QueryRecognizedEventInfoResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryRecognizedEventInfoResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryRecognizedEventInfoResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryRecognizedEventInfoResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<QueryRecognizedEventInfoResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const QueryRecognizedEventInfoResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const QueryRecognizedEventInfoResponse& from) {
    QueryRecognizedEventInfoResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryRecognizedEventInfoResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.bridge.QueryRecognizedEventInfoResponse";
  }
  protected:
  explicit QueryRecognizedEventInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfoFieldNumber = 1,
  };
  // .dydxprotocol.bridge.BridgeEventInfo info = 1 [(.gogoproto.nullable) = false];
  bool has_info() const;
  void clear_info() ;
  const ::dydxprotocol::bridge::BridgeEventInfo& info() const;
  PROTOBUF_NODISCARD ::dydxprotocol::bridge::BridgeEventInfo* release_info();
  ::dydxprotocol::bridge::BridgeEventInfo* mutable_info();
  void set_allocated_info(::dydxprotocol::bridge::BridgeEventInfo* info);
  private:
  const ::dydxprotocol::bridge::BridgeEventInfo& _internal_info() const;
  ::dydxprotocol::bridge::BridgeEventInfo* _internal_mutable_info();
  public:
  void unsafe_arena_set_allocated_info(
      ::dydxprotocol::bridge::BridgeEventInfo* info);
  ::dydxprotocol::bridge::BridgeEventInfo* unsafe_arena_release_info();
  // @@protoc_insertion_point(class_scope:dydxprotocol.bridge.QueryRecognizedEventInfoResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::dydxprotocol::bridge::BridgeEventInfo* info_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dydxprotocol_2fbridge_2fquery_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// QueryEventParamsRequest

// -------------------------------------------------------------------

// QueryEventParamsResponse

// .dydxprotocol.bridge.EventParams params = 1 [(.gogoproto.nullable) = false];
inline bool QueryEventParamsResponse::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::dydxprotocol::bridge::EventParams& QueryEventParamsResponse::_internal_params() const {
  const ::dydxprotocol::bridge::EventParams* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::dydxprotocol::bridge::EventParams&>(
      ::dydxprotocol::bridge::_EventParams_default_instance_);
}
inline const ::dydxprotocol::bridge::EventParams& QueryEventParamsResponse::params() const {
  // @@protoc_insertion_point(field_get:dydxprotocol.bridge.QueryEventParamsResponse.params)
  return _internal_params();
}
inline void QueryEventParamsResponse::unsafe_arena_set_allocated_params(
    ::dydxprotocol::bridge::EventParams* params) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = params;
  if (params) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dydxprotocol.bridge.QueryEventParamsResponse.params)
}
inline ::dydxprotocol::bridge::EventParams* QueryEventParamsResponse::release_params() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dydxprotocol::bridge::EventParams* temp = _impl_.params_;
  _impl_.params_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::dydxprotocol::bridge::EventParams* QueryEventParamsResponse::unsafe_arena_release_params() {
  // @@protoc_insertion_point(field_release:dydxprotocol.bridge.QueryEventParamsResponse.params)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dydxprotocol::bridge::EventParams* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::dydxprotocol::bridge::EventParams* QueryEventParamsResponse::_internal_mutable_params() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.params_ == nullptr) {
    auto* p = CreateMaybeMessage<::dydxprotocol::bridge::EventParams>(GetArenaForAllocation());
    _impl_.params_ = p;
  }
  return _impl_.params_;
}
inline ::dydxprotocol::bridge::EventParams* QueryEventParamsResponse::mutable_params() {
  ::dydxprotocol::bridge::EventParams* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:dydxprotocol.bridge.QueryEventParamsResponse.params)
  return _msg;
}
inline void QueryEventParamsResponse::set_allocated_params(::dydxprotocol::bridge::EventParams* params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.params_);
  }
  if (params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params));
    if (message_arena != submessage_arena) {
      params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.params_ = params;
  // @@protoc_insertion_point(field_set_allocated:dydxprotocol.bridge.QueryEventParamsResponse.params)
}

// -------------------------------------------------------------------

// QueryProposeParamsRequest

// -------------------------------------------------------------------

// QueryProposeParamsResponse

// .dydxprotocol.bridge.ProposeParams params = 1 [(.gogoproto.nullable) = false];
inline bool QueryProposeParamsResponse::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::dydxprotocol::bridge::ProposeParams& QueryProposeParamsResponse::_internal_params() const {
  const ::dydxprotocol::bridge::ProposeParams* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::dydxprotocol::bridge::ProposeParams&>(
      ::dydxprotocol::bridge::_ProposeParams_default_instance_);
}
inline const ::dydxprotocol::bridge::ProposeParams& QueryProposeParamsResponse::params() const {
  // @@protoc_insertion_point(field_get:dydxprotocol.bridge.QueryProposeParamsResponse.params)
  return _internal_params();
}
inline void QueryProposeParamsResponse::unsafe_arena_set_allocated_params(
    ::dydxprotocol::bridge::ProposeParams* params) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = params;
  if (params) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dydxprotocol.bridge.QueryProposeParamsResponse.params)
}
inline ::dydxprotocol::bridge::ProposeParams* QueryProposeParamsResponse::release_params() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dydxprotocol::bridge::ProposeParams* temp = _impl_.params_;
  _impl_.params_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::dydxprotocol::bridge::ProposeParams* QueryProposeParamsResponse::unsafe_arena_release_params() {
  // @@protoc_insertion_point(field_release:dydxprotocol.bridge.QueryProposeParamsResponse.params)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dydxprotocol::bridge::ProposeParams* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::dydxprotocol::bridge::ProposeParams* QueryProposeParamsResponse::_internal_mutable_params() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.params_ == nullptr) {
    auto* p = CreateMaybeMessage<::dydxprotocol::bridge::ProposeParams>(GetArenaForAllocation());
    _impl_.params_ = p;
  }
  return _impl_.params_;
}
inline ::dydxprotocol::bridge::ProposeParams* QueryProposeParamsResponse::mutable_params() {
  ::dydxprotocol::bridge::ProposeParams* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:dydxprotocol.bridge.QueryProposeParamsResponse.params)
  return _msg;
}
inline void QueryProposeParamsResponse::set_allocated_params(::dydxprotocol::bridge::ProposeParams* params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.params_);
  }
  if (params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params));
    if (message_arena != submessage_arena) {
      params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.params_ = params;
  // @@protoc_insertion_point(field_set_allocated:dydxprotocol.bridge.QueryProposeParamsResponse.params)
}

// -------------------------------------------------------------------

// QuerySafetyParamsRequest

// -------------------------------------------------------------------

// QuerySafetyParamsResponse

// .dydxprotocol.bridge.SafetyParams params = 1 [(.gogoproto.nullable) = false];
inline bool QuerySafetyParamsResponse::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::dydxprotocol::bridge::SafetyParams& QuerySafetyParamsResponse::_internal_params() const {
  const ::dydxprotocol::bridge::SafetyParams* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::dydxprotocol::bridge::SafetyParams&>(
      ::dydxprotocol::bridge::_SafetyParams_default_instance_);
}
inline const ::dydxprotocol::bridge::SafetyParams& QuerySafetyParamsResponse::params() const {
  // @@protoc_insertion_point(field_get:dydxprotocol.bridge.QuerySafetyParamsResponse.params)
  return _internal_params();
}
inline void QuerySafetyParamsResponse::unsafe_arena_set_allocated_params(
    ::dydxprotocol::bridge::SafetyParams* params) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = params;
  if (params) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dydxprotocol.bridge.QuerySafetyParamsResponse.params)
}
inline ::dydxprotocol::bridge::SafetyParams* QuerySafetyParamsResponse::release_params() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dydxprotocol::bridge::SafetyParams* temp = _impl_.params_;
  _impl_.params_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::dydxprotocol::bridge::SafetyParams* QuerySafetyParamsResponse::unsafe_arena_release_params() {
  // @@protoc_insertion_point(field_release:dydxprotocol.bridge.QuerySafetyParamsResponse.params)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dydxprotocol::bridge::SafetyParams* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::dydxprotocol::bridge::SafetyParams* QuerySafetyParamsResponse::_internal_mutable_params() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.params_ == nullptr) {
    auto* p = CreateMaybeMessage<::dydxprotocol::bridge::SafetyParams>(GetArenaForAllocation());
    _impl_.params_ = p;
  }
  return _impl_.params_;
}
inline ::dydxprotocol::bridge::SafetyParams* QuerySafetyParamsResponse::mutable_params() {
  ::dydxprotocol::bridge::SafetyParams* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:dydxprotocol.bridge.QuerySafetyParamsResponse.params)
  return _msg;
}
inline void QuerySafetyParamsResponse::set_allocated_params(::dydxprotocol::bridge::SafetyParams* params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.params_);
  }
  if (params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params));
    if (message_arena != submessage_arena) {
      params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.params_ = params;
  // @@protoc_insertion_point(field_set_allocated:dydxprotocol.bridge.QuerySafetyParamsResponse.params)
}

// -------------------------------------------------------------------

// QueryAcknowledgedEventInfoRequest

// -------------------------------------------------------------------

// QueryAcknowledgedEventInfoResponse

// .dydxprotocol.bridge.BridgeEventInfo info = 1 [(.gogoproto.nullable) = false];
inline bool QueryAcknowledgedEventInfoResponse::has_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.info_ != nullptr);
  return value;
}
inline const ::dydxprotocol::bridge::BridgeEventInfo& QueryAcknowledgedEventInfoResponse::_internal_info() const {
  const ::dydxprotocol::bridge::BridgeEventInfo* p = _impl_.info_;
  return p != nullptr ? *p : reinterpret_cast<const ::dydxprotocol::bridge::BridgeEventInfo&>(
      ::dydxprotocol::bridge::_BridgeEventInfo_default_instance_);
}
inline const ::dydxprotocol::bridge::BridgeEventInfo& QueryAcknowledgedEventInfoResponse::info() const {
  // @@protoc_insertion_point(field_get:dydxprotocol.bridge.QueryAcknowledgedEventInfoResponse.info)
  return _internal_info();
}
inline void QueryAcknowledgedEventInfoResponse::unsafe_arena_set_allocated_info(
    ::dydxprotocol::bridge::BridgeEventInfo* info) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.info_);
  }
  _impl_.info_ = info;
  if (info) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dydxprotocol.bridge.QueryAcknowledgedEventInfoResponse.info)
}
inline ::dydxprotocol::bridge::BridgeEventInfo* QueryAcknowledgedEventInfoResponse::release_info() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dydxprotocol::bridge::BridgeEventInfo* temp = _impl_.info_;
  _impl_.info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::dydxprotocol::bridge::BridgeEventInfo* QueryAcknowledgedEventInfoResponse::unsafe_arena_release_info() {
  // @@protoc_insertion_point(field_release:dydxprotocol.bridge.QueryAcknowledgedEventInfoResponse.info)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dydxprotocol::bridge::BridgeEventInfo* temp = _impl_.info_;
  _impl_.info_ = nullptr;
  return temp;
}
inline ::dydxprotocol::bridge::BridgeEventInfo* QueryAcknowledgedEventInfoResponse::_internal_mutable_info() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.info_ == nullptr) {
    auto* p = CreateMaybeMessage<::dydxprotocol::bridge::BridgeEventInfo>(GetArenaForAllocation());
    _impl_.info_ = p;
  }
  return _impl_.info_;
}
inline ::dydxprotocol::bridge::BridgeEventInfo* QueryAcknowledgedEventInfoResponse::mutable_info() {
  ::dydxprotocol::bridge::BridgeEventInfo* _msg = _internal_mutable_info();
  // @@protoc_insertion_point(field_mutable:dydxprotocol.bridge.QueryAcknowledgedEventInfoResponse.info)
  return _msg;
}
inline void QueryAcknowledgedEventInfoResponse::set_allocated_info(::dydxprotocol::bridge::BridgeEventInfo* info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.info_);
  }
  if (info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(info));
    if (message_arena != submessage_arena) {
      info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.info_ = info;
  // @@protoc_insertion_point(field_set_allocated:dydxprotocol.bridge.QueryAcknowledgedEventInfoResponse.info)
}

// -------------------------------------------------------------------

// QueryRecognizedEventInfoRequest

// -------------------------------------------------------------------

// QueryRecognizedEventInfoResponse

// .dydxprotocol.bridge.BridgeEventInfo info = 1 [(.gogoproto.nullable) = false];
inline bool QueryRecognizedEventInfoResponse::has_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.info_ != nullptr);
  return value;
}
inline const ::dydxprotocol::bridge::BridgeEventInfo& QueryRecognizedEventInfoResponse::_internal_info() const {
  const ::dydxprotocol::bridge::BridgeEventInfo* p = _impl_.info_;
  return p != nullptr ? *p : reinterpret_cast<const ::dydxprotocol::bridge::BridgeEventInfo&>(
      ::dydxprotocol::bridge::_BridgeEventInfo_default_instance_);
}
inline const ::dydxprotocol::bridge::BridgeEventInfo& QueryRecognizedEventInfoResponse::info() const {
  // @@protoc_insertion_point(field_get:dydxprotocol.bridge.QueryRecognizedEventInfoResponse.info)
  return _internal_info();
}
inline void QueryRecognizedEventInfoResponse::unsafe_arena_set_allocated_info(
    ::dydxprotocol::bridge::BridgeEventInfo* info) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.info_);
  }
  _impl_.info_ = info;
  if (info) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dydxprotocol.bridge.QueryRecognizedEventInfoResponse.info)
}
inline ::dydxprotocol::bridge::BridgeEventInfo* QueryRecognizedEventInfoResponse::release_info() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dydxprotocol::bridge::BridgeEventInfo* temp = _impl_.info_;
  _impl_.info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::dydxprotocol::bridge::BridgeEventInfo* QueryRecognizedEventInfoResponse::unsafe_arena_release_info() {
  // @@protoc_insertion_point(field_release:dydxprotocol.bridge.QueryRecognizedEventInfoResponse.info)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dydxprotocol::bridge::BridgeEventInfo* temp = _impl_.info_;
  _impl_.info_ = nullptr;
  return temp;
}
inline ::dydxprotocol::bridge::BridgeEventInfo* QueryRecognizedEventInfoResponse::_internal_mutable_info() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.info_ == nullptr) {
    auto* p = CreateMaybeMessage<::dydxprotocol::bridge::BridgeEventInfo>(GetArenaForAllocation());
    _impl_.info_ = p;
  }
  return _impl_.info_;
}
inline ::dydxprotocol::bridge::BridgeEventInfo* QueryRecognizedEventInfoResponse::mutable_info() {
  ::dydxprotocol::bridge::BridgeEventInfo* _msg = _internal_mutable_info();
  // @@protoc_insertion_point(field_mutable:dydxprotocol.bridge.QueryRecognizedEventInfoResponse.info)
  return _msg;
}
inline void QueryRecognizedEventInfoResponse::set_allocated_info(::dydxprotocol::bridge::BridgeEventInfo* info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.info_);
  }
  if (info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(info));
    if (message_arena != submessage_arena) {
      info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.info_ = info;
  // @@protoc_insertion_point(field_set_allocated:dydxprotocol.bridge.QueryRecognizedEventInfoResponse.info)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace bridge
}  // namespace dydxprotocol


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_dydxprotocol_2fbridge_2fquery_2eproto_2epb_2eh
