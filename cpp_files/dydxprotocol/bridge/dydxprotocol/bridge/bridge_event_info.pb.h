// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dydxprotocol/bridge/bridge_event_info.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_dydxprotocol_2fbridge_2fbridge_5fevent_5finfo_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_dydxprotocol_2fbridge_2fbridge_5fevent_5finfo_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_dydxprotocol_2fbridge_2fbridge_5fevent_5finfo_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_dydxprotocol_2fbridge_2fbridge_5fevent_5finfo_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_dydxprotocol_2fbridge_2fbridge_5fevent_5finfo_2eproto;
namespace dydxprotocol {
namespace bridge {
class BridgeEventInfo;
struct BridgeEventInfoDefaultTypeInternal;
extern BridgeEventInfoDefaultTypeInternal _BridgeEventInfo_default_instance_;
}  // namespace bridge
}  // namespace dydxprotocol
PROTOBUF_NAMESPACE_OPEN
template <>
::dydxprotocol::bridge::BridgeEventInfo* Arena::CreateMaybeMessage<::dydxprotocol::bridge::BridgeEventInfo>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace dydxprotocol {
namespace bridge {

// ===================================================================


// -------------------------------------------------------------------

class BridgeEventInfo final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dydxprotocol.bridge.BridgeEventInfo) */ {
 public:
  inline BridgeEventInfo() : BridgeEventInfo(nullptr) {}
  ~BridgeEventInfo() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BridgeEventInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BridgeEventInfo(const BridgeEventInfo& from);
  BridgeEventInfo(BridgeEventInfo&& from) noexcept
    : BridgeEventInfo() {
    *this = ::std::move(from);
  }

  inline BridgeEventInfo& operator=(const BridgeEventInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline BridgeEventInfo& operator=(BridgeEventInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BridgeEventInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const BridgeEventInfo* internal_default_instance() {
    return reinterpret_cast<const BridgeEventInfo*>(
               &_BridgeEventInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(BridgeEventInfo& a, BridgeEventInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(BridgeEventInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BridgeEventInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BridgeEventInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BridgeEventInfo>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const BridgeEventInfo& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const BridgeEventInfo& from) {
    BridgeEventInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BridgeEventInfo* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.bridge.BridgeEventInfo";
  }
  protected:
  explicit BridgeEventInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEthBlockHeightFieldNumber = 2,
    kNextIdFieldNumber = 1,
  };
  // uint64 eth_block_height = 2;
  void clear_eth_block_height() ;
  ::uint64_t eth_block_height() const;
  void set_eth_block_height(::uint64_t value);

  private:
  ::uint64_t _internal_eth_block_height() const;
  void _internal_set_eth_block_height(::uint64_t value);

  public:
  // uint32 next_id = 1;
  void clear_next_id() ;
  ::uint32_t next_id() const;
  void set_next_id(::uint32_t value);

  private:
  ::uint32_t _internal_next_id() const;
  void _internal_set_next_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:dydxprotocol.bridge.BridgeEventInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint64_t eth_block_height_;
    ::uint32_t next_id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dydxprotocol_2fbridge_2fbridge_5fevent_5finfo_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// BridgeEventInfo

// uint32 next_id = 1;
inline void BridgeEventInfo::clear_next_id() {
  _impl_.next_id_ = 0u;
}
inline ::uint32_t BridgeEventInfo::next_id() const {
  // @@protoc_insertion_point(field_get:dydxprotocol.bridge.BridgeEventInfo.next_id)
  return _internal_next_id();
}
inline void BridgeEventInfo::set_next_id(::uint32_t value) {
  _internal_set_next_id(value);
  // @@protoc_insertion_point(field_set:dydxprotocol.bridge.BridgeEventInfo.next_id)
}
inline ::uint32_t BridgeEventInfo::_internal_next_id() const {
  return _impl_.next_id_;
}
inline void BridgeEventInfo::_internal_set_next_id(::uint32_t value) {
  ;
  _impl_.next_id_ = value;
}

// uint64 eth_block_height = 2;
inline void BridgeEventInfo::clear_eth_block_height() {
  _impl_.eth_block_height_ = ::uint64_t{0u};
}
inline ::uint64_t BridgeEventInfo::eth_block_height() const {
  // @@protoc_insertion_point(field_get:dydxprotocol.bridge.BridgeEventInfo.eth_block_height)
  return _internal_eth_block_height();
}
inline void BridgeEventInfo::set_eth_block_height(::uint64_t value) {
  _internal_set_eth_block_height(value);
  // @@protoc_insertion_point(field_set:dydxprotocol.bridge.BridgeEventInfo.eth_block_height)
}
inline ::uint64_t BridgeEventInfo::_internal_eth_block_height() const {
  return _impl_.eth_block_height_;
}
inline void BridgeEventInfo::_internal_set_eth_block_height(::uint64_t value) {
  ;
  _impl_.eth_block_height_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace bridge
}  // namespace dydxprotocol


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_dydxprotocol_2fbridge_2fbridge_5fevent_5finfo_2eproto_2epb_2eh
