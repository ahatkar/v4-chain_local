// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dydxprotocol/bridge/tx.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_dydxprotocol_2fbridge_2ftx_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_dydxprotocol_2fbridge_2ftx_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "cosmos_proto/cosmos.pb.h"
#include "cosmos/msg/v1/msg.pb.h"
#include "dydxprotocol/bridge/bridge_event.pb.h"
#include "dydxprotocol/bridge/params.pb.h"
#include "gogoproto/gogo.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_dydxprotocol_2fbridge_2ftx_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_dydxprotocol_2fbridge_2ftx_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_dydxprotocol_2fbridge_2ftx_2eproto;
namespace dydxprotocol {
namespace bridge {
class MsgAcknowledgeBridges;
struct MsgAcknowledgeBridgesDefaultTypeInternal;
extern MsgAcknowledgeBridgesDefaultTypeInternal _MsgAcknowledgeBridges_default_instance_;
class MsgAcknowledgeBridgesResponse;
struct MsgAcknowledgeBridgesResponseDefaultTypeInternal;
extern MsgAcknowledgeBridgesResponseDefaultTypeInternal _MsgAcknowledgeBridgesResponse_default_instance_;
class MsgCompleteBridge;
struct MsgCompleteBridgeDefaultTypeInternal;
extern MsgCompleteBridgeDefaultTypeInternal _MsgCompleteBridge_default_instance_;
class MsgCompleteBridgeResponse;
struct MsgCompleteBridgeResponseDefaultTypeInternal;
extern MsgCompleteBridgeResponseDefaultTypeInternal _MsgCompleteBridgeResponse_default_instance_;
class MsgUpdateEventParams;
struct MsgUpdateEventParamsDefaultTypeInternal;
extern MsgUpdateEventParamsDefaultTypeInternal _MsgUpdateEventParams_default_instance_;
class MsgUpdateEventParamsResponse;
struct MsgUpdateEventParamsResponseDefaultTypeInternal;
extern MsgUpdateEventParamsResponseDefaultTypeInternal _MsgUpdateEventParamsResponse_default_instance_;
class MsgUpdateProposeParams;
struct MsgUpdateProposeParamsDefaultTypeInternal;
extern MsgUpdateProposeParamsDefaultTypeInternal _MsgUpdateProposeParams_default_instance_;
class MsgUpdateProposeParamsResponse;
struct MsgUpdateProposeParamsResponseDefaultTypeInternal;
extern MsgUpdateProposeParamsResponseDefaultTypeInternal _MsgUpdateProposeParamsResponse_default_instance_;
class MsgUpdateSafetyParams;
struct MsgUpdateSafetyParamsDefaultTypeInternal;
extern MsgUpdateSafetyParamsDefaultTypeInternal _MsgUpdateSafetyParams_default_instance_;
class MsgUpdateSafetyParamsResponse;
struct MsgUpdateSafetyParamsResponseDefaultTypeInternal;
extern MsgUpdateSafetyParamsResponseDefaultTypeInternal _MsgUpdateSafetyParamsResponse_default_instance_;
}  // namespace bridge
}  // namespace dydxprotocol
PROTOBUF_NAMESPACE_OPEN
template <>
::dydxprotocol::bridge::MsgAcknowledgeBridges* Arena::CreateMaybeMessage<::dydxprotocol::bridge::MsgAcknowledgeBridges>(Arena*);
template <>
::dydxprotocol::bridge::MsgAcknowledgeBridgesResponse* Arena::CreateMaybeMessage<::dydxprotocol::bridge::MsgAcknowledgeBridgesResponse>(Arena*);
template <>
::dydxprotocol::bridge::MsgCompleteBridge* Arena::CreateMaybeMessage<::dydxprotocol::bridge::MsgCompleteBridge>(Arena*);
template <>
::dydxprotocol::bridge::MsgCompleteBridgeResponse* Arena::CreateMaybeMessage<::dydxprotocol::bridge::MsgCompleteBridgeResponse>(Arena*);
template <>
::dydxprotocol::bridge::MsgUpdateEventParams* Arena::CreateMaybeMessage<::dydxprotocol::bridge::MsgUpdateEventParams>(Arena*);
template <>
::dydxprotocol::bridge::MsgUpdateEventParamsResponse* Arena::CreateMaybeMessage<::dydxprotocol::bridge::MsgUpdateEventParamsResponse>(Arena*);
template <>
::dydxprotocol::bridge::MsgUpdateProposeParams* Arena::CreateMaybeMessage<::dydxprotocol::bridge::MsgUpdateProposeParams>(Arena*);
template <>
::dydxprotocol::bridge::MsgUpdateProposeParamsResponse* Arena::CreateMaybeMessage<::dydxprotocol::bridge::MsgUpdateProposeParamsResponse>(Arena*);
template <>
::dydxprotocol::bridge::MsgUpdateSafetyParams* Arena::CreateMaybeMessage<::dydxprotocol::bridge::MsgUpdateSafetyParams>(Arena*);
template <>
::dydxprotocol::bridge::MsgUpdateSafetyParamsResponse* Arena::CreateMaybeMessage<::dydxprotocol::bridge::MsgUpdateSafetyParamsResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace dydxprotocol {
namespace bridge {

// ===================================================================


// -------------------------------------------------------------------

class MsgAcknowledgeBridges final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dydxprotocol.bridge.MsgAcknowledgeBridges) */ {
 public:
  inline MsgAcknowledgeBridges() : MsgAcknowledgeBridges(nullptr) {}
  ~MsgAcknowledgeBridges() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgAcknowledgeBridges(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgAcknowledgeBridges(const MsgAcknowledgeBridges& from);
  MsgAcknowledgeBridges(MsgAcknowledgeBridges&& from) noexcept
    : MsgAcknowledgeBridges() {
    *this = ::std::move(from);
  }

  inline MsgAcknowledgeBridges& operator=(const MsgAcknowledgeBridges& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgAcknowledgeBridges& operator=(MsgAcknowledgeBridges&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgAcknowledgeBridges& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgAcknowledgeBridges* internal_default_instance() {
    return reinterpret_cast<const MsgAcknowledgeBridges*>(
               &_MsgAcknowledgeBridges_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MsgAcknowledgeBridges& a, MsgAcknowledgeBridges& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgAcknowledgeBridges* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgAcknowledgeBridges* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgAcknowledgeBridges* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgAcknowledgeBridges>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgAcknowledgeBridges& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgAcknowledgeBridges& from) {
    MsgAcknowledgeBridges::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgAcknowledgeBridges* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.bridge.MsgAcknowledgeBridges";
  }
  protected:
  explicit MsgAcknowledgeBridges(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEventsFieldNumber = 1,
  };
  // repeated .dydxprotocol.bridge.BridgeEvent events = 1 [(.gogoproto.nullable) = false];
  int events_size() const;
  private:
  int _internal_events_size() const;

  public:
  void clear_events() ;
  ::dydxprotocol::bridge::BridgeEvent* mutable_events(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dydxprotocol::bridge::BridgeEvent >*
      mutable_events();
  private:
  const ::dydxprotocol::bridge::BridgeEvent& _internal_events(int index) const;
  ::dydxprotocol::bridge::BridgeEvent* _internal_add_events();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::dydxprotocol::bridge::BridgeEvent>& _internal_events() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::dydxprotocol::bridge::BridgeEvent>* _internal_mutable_events();
  public:
  const ::dydxprotocol::bridge::BridgeEvent& events(int index) const;
  ::dydxprotocol::bridge::BridgeEvent* add_events();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dydxprotocol::bridge::BridgeEvent >&
      events() const;
  // @@protoc_insertion_point(class_scope:dydxprotocol.bridge.MsgAcknowledgeBridges)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dydxprotocol::bridge::BridgeEvent > events_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dydxprotocol_2fbridge_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgAcknowledgeBridgesResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:dydxprotocol.bridge.MsgAcknowledgeBridgesResponse) */ {
 public:
  inline MsgAcknowledgeBridgesResponse() : MsgAcknowledgeBridgesResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgAcknowledgeBridgesResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgAcknowledgeBridgesResponse(const MsgAcknowledgeBridgesResponse& from);
  MsgAcknowledgeBridgesResponse(MsgAcknowledgeBridgesResponse&& from) noexcept
    : MsgAcknowledgeBridgesResponse() {
    *this = ::std::move(from);
  }

  inline MsgAcknowledgeBridgesResponse& operator=(const MsgAcknowledgeBridgesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgAcknowledgeBridgesResponse& operator=(MsgAcknowledgeBridgesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgAcknowledgeBridgesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgAcknowledgeBridgesResponse* internal_default_instance() {
    return reinterpret_cast<const MsgAcknowledgeBridgesResponse*>(
               &_MsgAcknowledgeBridgesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MsgAcknowledgeBridgesResponse& a, MsgAcknowledgeBridgesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgAcknowledgeBridgesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgAcknowledgeBridgesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgAcknowledgeBridgesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgAcknowledgeBridgesResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgAcknowledgeBridgesResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgAcknowledgeBridgesResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.bridge.MsgAcknowledgeBridgesResponse";
  }
  protected:
  explicit MsgAcknowledgeBridgesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dydxprotocol.bridge.MsgAcknowledgeBridgesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_dydxprotocol_2fbridge_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgCompleteBridge final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dydxprotocol.bridge.MsgCompleteBridge) */ {
 public:
  inline MsgCompleteBridge() : MsgCompleteBridge(nullptr) {}
  ~MsgCompleteBridge() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgCompleteBridge(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgCompleteBridge(const MsgCompleteBridge& from);
  MsgCompleteBridge(MsgCompleteBridge&& from) noexcept
    : MsgCompleteBridge() {
    *this = ::std::move(from);
  }

  inline MsgCompleteBridge& operator=(const MsgCompleteBridge& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCompleteBridge& operator=(MsgCompleteBridge&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgCompleteBridge& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgCompleteBridge* internal_default_instance() {
    return reinterpret_cast<const MsgCompleteBridge*>(
               &_MsgCompleteBridge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MsgCompleteBridge& a, MsgCompleteBridge& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgCompleteBridge* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCompleteBridge* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgCompleteBridge* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgCompleteBridge>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgCompleteBridge& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgCompleteBridge& from) {
    MsgCompleteBridge::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgCompleteBridge* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.bridge.MsgCompleteBridge";
  }
  protected:
  explicit MsgCompleteBridge(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAuthorityFieldNumber = 1,
    kEventFieldNumber = 2,
  };
  // string authority = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* ptr);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // .dydxprotocol.bridge.BridgeEvent event = 2 [(.gogoproto.nullable) = false];
  bool has_event() const;
  void clear_event() ;
  const ::dydxprotocol::bridge::BridgeEvent& event() const;
  PROTOBUF_NODISCARD ::dydxprotocol::bridge::BridgeEvent* release_event();
  ::dydxprotocol::bridge::BridgeEvent* mutable_event();
  void set_allocated_event(::dydxprotocol::bridge::BridgeEvent* event);
  private:
  const ::dydxprotocol::bridge::BridgeEvent& _internal_event() const;
  ::dydxprotocol::bridge::BridgeEvent* _internal_mutable_event();
  public:
  void unsafe_arena_set_allocated_event(
      ::dydxprotocol::bridge::BridgeEvent* event);
  ::dydxprotocol::bridge::BridgeEvent* unsafe_arena_release_event();
  // @@protoc_insertion_point(class_scope:dydxprotocol.bridge.MsgCompleteBridge)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr authority_;
    ::dydxprotocol::bridge::BridgeEvent* event_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dydxprotocol_2fbridge_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgCompleteBridgeResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:dydxprotocol.bridge.MsgCompleteBridgeResponse) */ {
 public:
  inline MsgCompleteBridgeResponse() : MsgCompleteBridgeResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgCompleteBridgeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgCompleteBridgeResponse(const MsgCompleteBridgeResponse& from);
  MsgCompleteBridgeResponse(MsgCompleteBridgeResponse&& from) noexcept
    : MsgCompleteBridgeResponse() {
    *this = ::std::move(from);
  }

  inline MsgCompleteBridgeResponse& operator=(const MsgCompleteBridgeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCompleteBridgeResponse& operator=(MsgCompleteBridgeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgCompleteBridgeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgCompleteBridgeResponse* internal_default_instance() {
    return reinterpret_cast<const MsgCompleteBridgeResponse*>(
               &_MsgCompleteBridgeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MsgCompleteBridgeResponse& a, MsgCompleteBridgeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgCompleteBridgeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCompleteBridgeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgCompleteBridgeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgCompleteBridgeResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgCompleteBridgeResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgCompleteBridgeResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.bridge.MsgCompleteBridgeResponse";
  }
  protected:
  explicit MsgCompleteBridgeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dydxprotocol.bridge.MsgCompleteBridgeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_dydxprotocol_2fbridge_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgUpdateEventParams final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dydxprotocol.bridge.MsgUpdateEventParams) */ {
 public:
  inline MsgUpdateEventParams() : MsgUpdateEventParams(nullptr) {}
  ~MsgUpdateEventParams() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateEventParams(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUpdateEventParams(const MsgUpdateEventParams& from);
  MsgUpdateEventParams(MsgUpdateEventParams&& from) noexcept
    : MsgUpdateEventParams() {
    *this = ::std::move(from);
  }

  inline MsgUpdateEventParams& operator=(const MsgUpdateEventParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateEventParams& operator=(MsgUpdateEventParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateEventParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateEventParams* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateEventParams*>(
               &_MsgUpdateEventParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MsgUpdateEventParams& a, MsgUpdateEventParams& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpdateEventParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateEventParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateEventParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUpdateEventParams>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgUpdateEventParams& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgUpdateEventParams& from) {
    MsgUpdateEventParams::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgUpdateEventParams* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.bridge.MsgUpdateEventParams";
  }
  protected:
  explicit MsgUpdateEventParams(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAuthorityFieldNumber = 1,
    kParamsFieldNumber = 2,
  };
  // string authority = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* ptr);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // .dydxprotocol.bridge.EventParams params = 2 [(.gogoproto.nullable) = false];
  bool has_params() const;
  void clear_params() ;
  const ::dydxprotocol::bridge::EventParams& params() const;
  PROTOBUF_NODISCARD ::dydxprotocol::bridge::EventParams* release_params();
  ::dydxprotocol::bridge::EventParams* mutable_params();
  void set_allocated_params(::dydxprotocol::bridge::EventParams* params);
  private:
  const ::dydxprotocol::bridge::EventParams& _internal_params() const;
  ::dydxprotocol::bridge::EventParams* _internal_mutable_params();
  public:
  void unsafe_arena_set_allocated_params(
      ::dydxprotocol::bridge::EventParams* params);
  ::dydxprotocol::bridge::EventParams* unsafe_arena_release_params();
  // @@protoc_insertion_point(class_scope:dydxprotocol.bridge.MsgUpdateEventParams)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr authority_;
    ::dydxprotocol::bridge::EventParams* params_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dydxprotocol_2fbridge_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgUpdateEventParamsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:dydxprotocol.bridge.MsgUpdateEventParamsResponse) */ {
 public:
  inline MsgUpdateEventParamsResponse() : MsgUpdateEventParamsResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateEventParamsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUpdateEventParamsResponse(const MsgUpdateEventParamsResponse& from);
  MsgUpdateEventParamsResponse(MsgUpdateEventParamsResponse&& from) noexcept
    : MsgUpdateEventParamsResponse() {
    *this = ::std::move(from);
  }

  inline MsgUpdateEventParamsResponse& operator=(const MsgUpdateEventParamsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateEventParamsResponse& operator=(MsgUpdateEventParamsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateEventParamsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateEventParamsResponse* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateEventParamsResponse*>(
               &_MsgUpdateEventParamsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MsgUpdateEventParamsResponse& a, MsgUpdateEventParamsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpdateEventParamsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateEventParamsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateEventParamsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUpdateEventParamsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgUpdateEventParamsResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgUpdateEventParamsResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.bridge.MsgUpdateEventParamsResponse";
  }
  protected:
  explicit MsgUpdateEventParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dydxprotocol.bridge.MsgUpdateEventParamsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_dydxprotocol_2fbridge_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgUpdateProposeParams final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dydxprotocol.bridge.MsgUpdateProposeParams) */ {
 public:
  inline MsgUpdateProposeParams() : MsgUpdateProposeParams(nullptr) {}
  ~MsgUpdateProposeParams() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateProposeParams(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUpdateProposeParams(const MsgUpdateProposeParams& from);
  MsgUpdateProposeParams(MsgUpdateProposeParams&& from) noexcept
    : MsgUpdateProposeParams() {
    *this = ::std::move(from);
  }

  inline MsgUpdateProposeParams& operator=(const MsgUpdateProposeParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateProposeParams& operator=(MsgUpdateProposeParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateProposeParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateProposeParams* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateProposeParams*>(
               &_MsgUpdateProposeParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(MsgUpdateProposeParams& a, MsgUpdateProposeParams& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpdateProposeParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateProposeParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateProposeParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUpdateProposeParams>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgUpdateProposeParams& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgUpdateProposeParams& from) {
    MsgUpdateProposeParams::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgUpdateProposeParams* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.bridge.MsgUpdateProposeParams";
  }
  protected:
  explicit MsgUpdateProposeParams(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAuthorityFieldNumber = 1,
    kParamsFieldNumber = 2,
  };
  // string authority = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* ptr);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // .dydxprotocol.bridge.ProposeParams params = 2 [(.gogoproto.nullable) = false];
  bool has_params() const;
  void clear_params() ;
  const ::dydxprotocol::bridge::ProposeParams& params() const;
  PROTOBUF_NODISCARD ::dydxprotocol::bridge::ProposeParams* release_params();
  ::dydxprotocol::bridge::ProposeParams* mutable_params();
  void set_allocated_params(::dydxprotocol::bridge::ProposeParams* params);
  private:
  const ::dydxprotocol::bridge::ProposeParams& _internal_params() const;
  ::dydxprotocol::bridge::ProposeParams* _internal_mutable_params();
  public:
  void unsafe_arena_set_allocated_params(
      ::dydxprotocol::bridge::ProposeParams* params);
  ::dydxprotocol::bridge::ProposeParams* unsafe_arena_release_params();
  // @@protoc_insertion_point(class_scope:dydxprotocol.bridge.MsgUpdateProposeParams)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr authority_;
    ::dydxprotocol::bridge::ProposeParams* params_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dydxprotocol_2fbridge_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgUpdateProposeParamsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:dydxprotocol.bridge.MsgUpdateProposeParamsResponse) */ {
 public:
  inline MsgUpdateProposeParamsResponse() : MsgUpdateProposeParamsResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateProposeParamsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUpdateProposeParamsResponse(const MsgUpdateProposeParamsResponse& from);
  MsgUpdateProposeParamsResponse(MsgUpdateProposeParamsResponse&& from) noexcept
    : MsgUpdateProposeParamsResponse() {
    *this = ::std::move(from);
  }

  inline MsgUpdateProposeParamsResponse& operator=(const MsgUpdateProposeParamsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateProposeParamsResponse& operator=(MsgUpdateProposeParamsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateProposeParamsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateProposeParamsResponse* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateProposeParamsResponse*>(
               &_MsgUpdateProposeParamsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(MsgUpdateProposeParamsResponse& a, MsgUpdateProposeParamsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpdateProposeParamsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateProposeParamsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateProposeParamsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUpdateProposeParamsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgUpdateProposeParamsResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgUpdateProposeParamsResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.bridge.MsgUpdateProposeParamsResponse";
  }
  protected:
  explicit MsgUpdateProposeParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dydxprotocol.bridge.MsgUpdateProposeParamsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_dydxprotocol_2fbridge_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgUpdateSafetyParams final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dydxprotocol.bridge.MsgUpdateSafetyParams) */ {
 public:
  inline MsgUpdateSafetyParams() : MsgUpdateSafetyParams(nullptr) {}
  ~MsgUpdateSafetyParams() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateSafetyParams(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUpdateSafetyParams(const MsgUpdateSafetyParams& from);
  MsgUpdateSafetyParams(MsgUpdateSafetyParams&& from) noexcept
    : MsgUpdateSafetyParams() {
    *this = ::std::move(from);
  }

  inline MsgUpdateSafetyParams& operator=(const MsgUpdateSafetyParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateSafetyParams& operator=(MsgUpdateSafetyParams&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateSafetyParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateSafetyParams* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateSafetyParams*>(
               &_MsgUpdateSafetyParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MsgUpdateSafetyParams& a, MsgUpdateSafetyParams& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpdateSafetyParams* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateSafetyParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateSafetyParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUpdateSafetyParams>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgUpdateSafetyParams& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgUpdateSafetyParams& from) {
    MsgUpdateSafetyParams::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgUpdateSafetyParams* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.bridge.MsgUpdateSafetyParams";
  }
  protected:
  explicit MsgUpdateSafetyParams(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAuthorityFieldNumber = 1,
    kParamsFieldNumber = 2,
  };
  // string authority = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* ptr);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // .dydxprotocol.bridge.SafetyParams params = 2 [(.gogoproto.nullable) = false];
  bool has_params() const;
  void clear_params() ;
  const ::dydxprotocol::bridge::SafetyParams& params() const;
  PROTOBUF_NODISCARD ::dydxprotocol::bridge::SafetyParams* release_params();
  ::dydxprotocol::bridge::SafetyParams* mutable_params();
  void set_allocated_params(::dydxprotocol::bridge::SafetyParams* params);
  private:
  const ::dydxprotocol::bridge::SafetyParams& _internal_params() const;
  ::dydxprotocol::bridge::SafetyParams* _internal_mutable_params();
  public:
  void unsafe_arena_set_allocated_params(
      ::dydxprotocol::bridge::SafetyParams* params);
  ::dydxprotocol::bridge::SafetyParams* unsafe_arena_release_params();
  // @@protoc_insertion_point(class_scope:dydxprotocol.bridge.MsgUpdateSafetyParams)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr authority_;
    ::dydxprotocol::bridge::SafetyParams* params_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dydxprotocol_2fbridge_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgUpdateSafetyParamsResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:dydxprotocol.bridge.MsgUpdateSafetyParamsResponse) */ {
 public:
  inline MsgUpdateSafetyParamsResponse() : MsgUpdateSafetyParamsResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateSafetyParamsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgUpdateSafetyParamsResponse(const MsgUpdateSafetyParamsResponse& from);
  MsgUpdateSafetyParamsResponse(MsgUpdateSafetyParamsResponse&& from) noexcept
    : MsgUpdateSafetyParamsResponse() {
    *this = ::std::move(from);
  }

  inline MsgUpdateSafetyParamsResponse& operator=(const MsgUpdateSafetyParamsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateSafetyParamsResponse& operator=(MsgUpdateSafetyParamsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateSafetyParamsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateSafetyParamsResponse* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateSafetyParamsResponse*>(
               &_MsgUpdateSafetyParamsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(MsgUpdateSafetyParamsResponse& a, MsgUpdateSafetyParamsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgUpdateSafetyParamsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateSafetyParamsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateSafetyParamsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgUpdateSafetyParamsResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgUpdateSafetyParamsResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgUpdateSafetyParamsResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.bridge.MsgUpdateSafetyParamsResponse";
  }
  protected:
  explicit MsgUpdateSafetyParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dydxprotocol.bridge.MsgUpdateSafetyParamsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_dydxprotocol_2fbridge_2ftx_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MsgAcknowledgeBridges

// repeated .dydxprotocol.bridge.BridgeEvent events = 1 [(.gogoproto.nullable) = false];
inline int MsgAcknowledgeBridges::_internal_events_size() const {
  return _impl_.events_.size();
}
inline int MsgAcknowledgeBridges::events_size() const {
  return _internal_events_size();
}
inline ::dydxprotocol::bridge::BridgeEvent* MsgAcknowledgeBridges::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:dydxprotocol.bridge.MsgAcknowledgeBridges.events)
  return _internal_mutable_events()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dydxprotocol::bridge::BridgeEvent >*
MsgAcknowledgeBridges::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:dydxprotocol.bridge.MsgAcknowledgeBridges.events)
  return _internal_mutable_events();
}
inline const ::dydxprotocol::bridge::BridgeEvent& MsgAcknowledgeBridges::_internal_events(int index) const {
  return _internal_events().Get(index);
}
inline const ::dydxprotocol::bridge::BridgeEvent& MsgAcknowledgeBridges::events(int index) const {
  // @@protoc_insertion_point(field_get:dydxprotocol.bridge.MsgAcknowledgeBridges.events)
  return _internal_events(index);
}
inline ::dydxprotocol::bridge::BridgeEvent* MsgAcknowledgeBridges::_internal_add_events() {
  return _internal_mutable_events()->Add();
}
inline ::dydxprotocol::bridge::BridgeEvent* MsgAcknowledgeBridges::add_events() {
  ::dydxprotocol::bridge::BridgeEvent* _add = _internal_add_events();
  // @@protoc_insertion_point(field_add:dydxprotocol.bridge.MsgAcknowledgeBridges.events)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dydxprotocol::bridge::BridgeEvent >&
MsgAcknowledgeBridges::events() const {
  // @@protoc_insertion_point(field_list:dydxprotocol.bridge.MsgAcknowledgeBridges.events)
  return _internal_events();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::dydxprotocol::bridge::BridgeEvent>&
MsgAcknowledgeBridges::_internal_events() const {
  return _impl_.events_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::dydxprotocol::bridge::BridgeEvent>*
MsgAcknowledgeBridges::_internal_mutable_events() {
  return &_impl_.events_;
}

// -------------------------------------------------------------------

// MsgAcknowledgeBridgesResponse

// -------------------------------------------------------------------

// MsgCompleteBridge

// string authority = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgCompleteBridge::clear_authority() {
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgCompleteBridge::authority() const {
  // @@protoc_insertion_point(field_get:dydxprotocol.bridge.MsgCompleteBridge.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgCompleteBridge::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dydxprotocol.bridge.MsgCompleteBridge.authority)
}
inline std::string* MsgCompleteBridge::mutable_authority() {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:dydxprotocol.bridge.MsgCompleteBridge.authority)
  return _s;
}
inline const std::string& MsgCompleteBridge::_internal_authority() const {
  return _impl_.authority_.Get();
}
inline void MsgCompleteBridge::_internal_set_authority(const std::string& value) {
  ;


  _impl_.authority_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgCompleteBridge::_internal_mutable_authority() {
  ;
  return _impl_.authority_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgCompleteBridge::release_authority() {
  // @@protoc_insertion_point(field_release:dydxprotocol.bridge.MsgCompleteBridge.authority)
  return _impl_.authority_.Release();
}
inline void MsgCompleteBridge::set_allocated_authority(std::string* value) {
  _impl_.authority_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.authority_.IsDefault()) {
          _impl_.authority_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dydxprotocol.bridge.MsgCompleteBridge.authority)
}

// .dydxprotocol.bridge.BridgeEvent event = 2 [(.gogoproto.nullable) = false];
inline bool MsgCompleteBridge::has_event() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.event_ != nullptr);
  return value;
}
inline const ::dydxprotocol::bridge::BridgeEvent& MsgCompleteBridge::_internal_event() const {
  const ::dydxprotocol::bridge::BridgeEvent* p = _impl_.event_;
  return p != nullptr ? *p : reinterpret_cast<const ::dydxprotocol::bridge::BridgeEvent&>(
      ::dydxprotocol::bridge::_BridgeEvent_default_instance_);
}
inline const ::dydxprotocol::bridge::BridgeEvent& MsgCompleteBridge::event() const {
  // @@protoc_insertion_point(field_get:dydxprotocol.bridge.MsgCompleteBridge.event)
  return _internal_event();
}
inline void MsgCompleteBridge::unsafe_arena_set_allocated_event(
    ::dydxprotocol::bridge::BridgeEvent* event) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.event_);
  }
  _impl_.event_ = event;
  if (event) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dydxprotocol.bridge.MsgCompleteBridge.event)
}
inline ::dydxprotocol::bridge::BridgeEvent* MsgCompleteBridge::release_event() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dydxprotocol::bridge::BridgeEvent* temp = _impl_.event_;
  _impl_.event_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::dydxprotocol::bridge::BridgeEvent* MsgCompleteBridge::unsafe_arena_release_event() {
  // @@protoc_insertion_point(field_release:dydxprotocol.bridge.MsgCompleteBridge.event)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dydxprotocol::bridge::BridgeEvent* temp = _impl_.event_;
  _impl_.event_ = nullptr;
  return temp;
}
inline ::dydxprotocol::bridge::BridgeEvent* MsgCompleteBridge::_internal_mutable_event() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.event_ == nullptr) {
    auto* p = CreateMaybeMessage<::dydxprotocol::bridge::BridgeEvent>(GetArenaForAllocation());
    _impl_.event_ = p;
  }
  return _impl_.event_;
}
inline ::dydxprotocol::bridge::BridgeEvent* MsgCompleteBridge::mutable_event() {
  ::dydxprotocol::bridge::BridgeEvent* _msg = _internal_mutable_event();
  // @@protoc_insertion_point(field_mutable:dydxprotocol.bridge.MsgCompleteBridge.event)
  return _msg;
}
inline void MsgCompleteBridge::set_allocated_event(::dydxprotocol::bridge::BridgeEvent* event) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.event_);
  }
  if (event) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(event));
    if (message_arena != submessage_arena) {
      event = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, event, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.event_ = event;
  // @@protoc_insertion_point(field_set_allocated:dydxprotocol.bridge.MsgCompleteBridge.event)
}

// -------------------------------------------------------------------

// MsgCompleteBridgeResponse

// -------------------------------------------------------------------

// MsgUpdateEventParams

// string authority = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgUpdateEventParams::clear_authority() {
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgUpdateEventParams::authority() const {
  // @@protoc_insertion_point(field_get:dydxprotocol.bridge.MsgUpdateEventParams.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateEventParams::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dydxprotocol.bridge.MsgUpdateEventParams.authority)
}
inline std::string* MsgUpdateEventParams::mutable_authority() {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:dydxprotocol.bridge.MsgUpdateEventParams.authority)
  return _s;
}
inline const std::string& MsgUpdateEventParams::_internal_authority() const {
  return _impl_.authority_.Get();
}
inline void MsgUpdateEventParams::_internal_set_authority(const std::string& value) {
  ;


  _impl_.authority_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgUpdateEventParams::_internal_mutable_authority() {
  ;
  return _impl_.authority_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgUpdateEventParams::release_authority() {
  // @@protoc_insertion_point(field_release:dydxprotocol.bridge.MsgUpdateEventParams.authority)
  return _impl_.authority_.Release();
}
inline void MsgUpdateEventParams::set_allocated_authority(std::string* value) {
  _impl_.authority_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.authority_.IsDefault()) {
          _impl_.authority_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dydxprotocol.bridge.MsgUpdateEventParams.authority)
}

// .dydxprotocol.bridge.EventParams params = 2 [(.gogoproto.nullable) = false];
inline bool MsgUpdateEventParams::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::dydxprotocol::bridge::EventParams& MsgUpdateEventParams::_internal_params() const {
  const ::dydxprotocol::bridge::EventParams* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::dydxprotocol::bridge::EventParams&>(
      ::dydxprotocol::bridge::_EventParams_default_instance_);
}
inline const ::dydxprotocol::bridge::EventParams& MsgUpdateEventParams::params() const {
  // @@protoc_insertion_point(field_get:dydxprotocol.bridge.MsgUpdateEventParams.params)
  return _internal_params();
}
inline void MsgUpdateEventParams::unsafe_arena_set_allocated_params(
    ::dydxprotocol::bridge::EventParams* params) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = params;
  if (params) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dydxprotocol.bridge.MsgUpdateEventParams.params)
}
inline ::dydxprotocol::bridge::EventParams* MsgUpdateEventParams::release_params() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dydxprotocol::bridge::EventParams* temp = _impl_.params_;
  _impl_.params_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::dydxprotocol::bridge::EventParams* MsgUpdateEventParams::unsafe_arena_release_params() {
  // @@protoc_insertion_point(field_release:dydxprotocol.bridge.MsgUpdateEventParams.params)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dydxprotocol::bridge::EventParams* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::dydxprotocol::bridge::EventParams* MsgUpdateEventParams::_internal_mutable_params() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.params_ == nullptr) {
    auto* p = CreateMaybeMessage<::dydxprotocol::bridge::EventParams>(GetArenaForAllocation());
    _impl_.params_ = p;
  }
  return _impl_.params_;
}
inline ::dydxprotocol::bridge::EventParams* MsgUpdateEventParams::mutable_params() {
  ::dydxprotocol::bridge::EventParams* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:dydxprotocol.bridge.MsgUpdateEventParams.params)
  return _msg;
}
inline void MsgUpdateEventParams::set_allocated_params(::dydxprotocol::bridge::EventParams* params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.params_);
  }
  if (params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params));
    if (message_arena != submessage_arena) {
      params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.params_ = params;
  // @@protoc_insertion_point(field_set_allocated:dydxprotocol.bridge.MsgUpdateEventParams.params)
}

// -------------------------------------------------------------------

// MsgUpdateEventParamsResponse

// -------------------------------------------------------------------

// MsgUpdateProposeParams

// string authority = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgUpdateProposeParams::clear_authority() {
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgUpdateProposeParams::authority() const {
  // @@protoc_insertion_point(field_get:dydxprotocol.bridge.MsgUpdateProposeParams.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateProposeParams::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dydxprotocol.bridge.MsgUpdateProposeParams.authority)
}
inline std::string* MsgUpdateProposeParams::mutable_authority() {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:dydxprotocol.bridge.MsgUpdateProposeParams.authority)
  return _s;
}
inline const std::string& MsgUpdateProposeParams::_internal_authority() const {
  return _impl_.authority_.Get();
}
inline void MsgUpdateProposeParams::_internal_set_authority(const std::string& value) {
  ;


  _impl_.authority_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgUpdateProposeParams::_internal_mutable_authority() {
  ;
  return _impl_.authority_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgUpdateProposeParams::release_authority() {
  // @@protoc_insertion_point(field_release:dydxprotocol.bridge.MsgUpdateProposeParams.authority)
  return _impl_.authority_.Release();
}
inline void MsgUpdateProposeParams::set_allocated_authority(std::string* value) {
  _impl_.authority_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.authority_.IsDefault()) {
          _impl_.authority_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dydxprotocol.bridge.MsgUpdateProposeParams.authority)
}

// .dydxprotocol.bridge.ProposeParams params = 2 [(.gogoproto.nullable) = false];
inline bool MsgUpdateProposeParams::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::dydxprotocol::bridge::ProposeParams& MsgUpdateProposeParams::_internal_params() const {
  const ::dydxprotocol::bridge::ProposeParams* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::dydxprotocol::bridge::ProposeParams&>(
      ::dydxprotocol::bridge::_ProposeParams_default_instance_);
}
inline const ::dydxprotocol::bridge::ProposeParams& MsgUpdateProposeParams::params() const {
  // @@protoc_insertion_point(field_get:dydxprotocol.bridge.MsgUpdateProposeParams.params)
  return _internal_params();
}
inline void MsgUpdateProposeParams::unsafe_arena_set_allocated_params(
    ::dydxprotocol::bridge::ProposeParams* params) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = params;
  if (params) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dydxprotocol.bridge.MsgUpdateProposeParams.params)
}
inline ::dydxprotocol::bridge::ProposeParams* MsgUpdateProposeParams::release_params() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dydxprotocol::bridge::ProposeParams* temp = _impl_.params_;
  _impl_.params_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::dydxprotocol::bridge::ProposeParams* MsgUpdateProposeParams::unsafe_arena_release_params() {
  // @@protoc_insertion_point(field_release:dydxprotocol.bridge.MsgUpdateProposeParams.params)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dydxprotocol::bridge::ProposeParams* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::dydxprotocol::bridge::ProposeParams* MsgUpdateProposeParams::_internal_mutable_params() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.params_ == nullptr) {
    auto* p = CreateMaybeMessage<::dydxprotocol::bridge::ProposeParams>(GetArenaForAllocation());
    _impl_.params_ = p;
  }
  return _impl_.params_;
}
inline ::dydxprotocol::bridge::ProposeParams* MsgUpdateProposeParams::mutable_params() {
  ::dydxprotocol::bridge::ProposeParams* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:dydxprotocol.bridge.MsgUpdateProposeParams.params)
  return _msg;
}
inline void MsgUpdateProposeParams::set_allocated_params(::dydxprotocol::bridge::ProposeParams* params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.params_);
  }
  if (params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params));
    if (message_arena != submessage_arena) {
      params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.params_ = params;
  // @@protoc_insertion_point(field_set_allocated:dydxprotocol.bridge.MsgUpdateProposeParams.params)
}

// -------------------------------------------------------------------

// MsgUpdateProposeParamsResponse

// -------------------------------------------------------------------

// MsgUpdateSafetyParams

// string authority = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgUpdateSafetyParams::clear_authority() {
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgUpdateSafetyParams::authority() const {
  // @@protoc_insertion_point(field_get:dydxprotocol.bridge.MsgUpdateSafetyParams.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateSafetyParams::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dydxprotocol.bridge.MsgUpdateSafetyParams.authority)
}
inline std::string* MsgUpdateSafetyParams::mutable_authority() {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:dydxprotocol.bridge.MsgUpdateSafetyParams.authority)
  return _s;
}
inline const std::string& MsgUpdateSafetyParams::_internal_authority() const {
  return _impl_.authority_.Get();
}
inline void MsgUpdateSafetyParams::_internal_set_authority(const std::string& value) {
  ;


  _impl_.authority_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgUpdateSafetyParams::_internal_mutable_authority() {
  ;
  return _impl_.authority_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgUpdateSafetyParams::release_authority() {
  // @@protoc_insertion_point(field_release:dydxprotocol.bridge.MsgUpdateSafetyParams.authority)
  return _impl_.authority_.Release();
}
inline void MsgUpdateSafetyParams::set_allocated_authority(std::string* value) {
  _impl_.authority_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.authority_.IsDefault()) {
          _impl_.authority_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dydxprotocol.bridge.MsgUpdateSafetyParams.authority)
}

// .dydxprotocol.bridge.SafetyParams params = 2 [(.gogoproto.nullable) = false];
inline bool MsgUpdateSafetyParams::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::dydxprotocol::bridge::SafetyParams& MsgUpdateSafetyParams::_internal_params() const {
  const ::dydxprotocol::bridge::SafetyParams* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::dydxprotocol::bridge::SafetyParams&>(
      ::dydxprotocol::bridge::_SafetyParams_default_instance_);
}
inline const ::dydxprotocol::bridge::SafetyParams& MsgUpdateSafetyParams::params() const {
  // @@protoc_insertion_point(field_get:dydxprotocol.bridge.MsgUpdateSafetyParams.params)
  return _internal_params();
}
inline void MsgUpdateSafetyParams::unsafe_arena_set_allocated_params(
    ::dydxprotocol::bridge::SafetyParams* params) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = params;
  if (params) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dydxprotocol.bridge.MsgUpdateSafetyParams.params)
}
inline ::dydxprotocol::bridge::SafetyParams* MsgUpdateSafetyParams::release_params() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dydxprotocol::bridge::SafetyParams* temp = _impl_.params_;
  _impl_.params_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::dydxprotocol::bridge::SafetyParams* MsgUpdateSafetyParams::unsafe_arena_release_params() {
  // @@protoc_insertion_point(field_release:dydxprotocol.bridge.MsgUpdateSafetyParams.params)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dydxprotocol::bridge::SafetyParams* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::dydxprotocol::bridge::SafetyParams* MsgUpdateSafetyParams::_internal_mutable_params() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.params_ == nullptr) {
    auto* p = CreateMaybeMessage<::dydxprotocol::bridge::SafetyParams>(GetArenaForAllocation());
    _impl_.params_ = p;
  }
  return _impl_.params_;
}
inline ::dydxprotocol::bridge::SafetyParams* MsgUpdateSafetyParams::mutable_params() {
  ::dydxprotocol::bridge::SafetyParams* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:dydxprotocol.bridge.MsgUpdateSafetyParams.params)
  return _msg;
}
inline void MsgUpdateSafetyParams::set_allocated_params(::dydxprotocol::bridge::SafetyParams* params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.params_);
  }
  if (params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params));
    if (message_arena != submessage_arena) {
      params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.params_ = params;
  // @@protoc_insertion_point(field_set_allocated:dydxprotocol.bridge.MsgUpdateSafetyParams.params)
}

// -------------------------------------------------------------------

// MsgUpdateSafetyParamsResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace bridge
}  // namespace dydxprotocol


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_dydxprotocol_2fbridge_2ftx_2eproto_2epb_2eh
