// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dydxprotocol/perpetuals/tx.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_dydxprotocol_2fperpetuals_2ftx_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_dydxprotocol_2fperpetuals_2ftx_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "cosmos_proto/cosmos.pb.h"
#include "cosmos/msg/v1/msg.pb.h"
#include "gogoproto/gogo.pb.h"
#include "dydxprotocol/perpetuals/perpetual.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_dydxprotocol_2fperpetuals_2ftx_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_dydxprotocol_2fperpetuals_2ftx_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_dydxprotocol_2fperpetuals_2ftx_2eproto;
namespace dydxprotocol {
namespace perpetuals {
class FundingPremium;
struct FundingPremiumDefaultTypeInternal;
extern FundingPremiumDefaultTypeInternal _FundingPremium_default_instance_;
class MsgAddPremiumVotes;
struct MsgAddPremiumVotesDefaultTypeInternal;
extern MsgAddPremiumVotesDefaultTypeInternal _MsgAddPremiumVotes_default_instance_;
class MsgAddPremiumVotesResponse;
struct MsgAddPremiumVotesResponseDefaultTypeInternal;
extern MsgAddPremiumVotesResponseDefaultTypeInternal _MsgAddPremiumVotesResponse_default_instance_;
class MsgCreatePerpetual;
struct MsgCreatePerpetualDefaultTypeInternal;
extern MsgCreatePerpetualDefaultTypeInternal _MsgCreatePerpetual_default_instance_;
class MsgCreatePerpetualResponse;
struct MsgCreatePerpetualResponseDefaultTypeInternal;
extern MsgCreatePerpetualResponseDefaultTypeInternal _MsgCreatePerpetualResponse_default_instance_;
class MsgSetLiquidityTier;
struct MsgSetLiquidityTierDefaultTypeInternal;
extern MsgSetLiquidityTierDefaultTypeInternal _MsgSetLiquidityTier_default_instance_;
class MsgSetLiquidityTierResponse;
struct MsgSetLiquidityTierResponseDefaultTypeInternal;
extern MsgSetLiquidityTierResponseDefaultTypeInternal _MsgSetLiquidityTierResponse_default_instance_;
}  // namespace perpetuals
}  // namespace dydxprotocol
PROTOBUF_NAMESPACE_OPEN
template <>
::dydxprotocol::perpetuals::FundingPremium* Arena::CreateMaybeMessage<::dydxprotocol::perpetuals::FundingPremium>(Arena*);
template <>
::dydxprotocol::perpetuals::MsgAddPremiumVotes* Arena::CreateMaybeMessage<::dydxprotocol::perpetuals::MsgAddPremiumVotes>(Arena*);
template <>
::dydxprotocol::perpetuals::MsgAddPremiumVotesResponse* Arena::CreateMaybeMessage<::dydxprotocol::perpetuals::MsgAddPremiumVotesResponse>(Arena*);
template <>
::dydxprotocol::perpetuals::MsgCreatePerpetual* Arena::CreateMaybeMessage<::dydxprotocol::perpetuals::MsgCreatePerpetual>(Arena*);
template <>
::dydxprotocol::perpetuals::MsgCreatePerpetualResponse* Arena::CreateMaybeMessage<::dydxprotocol::perpetuals::MsgCreatePerpetualResponse>(Arena*);
template <>
::dydxprotocol::perpetuals::MsgSetLiquidityTier* Arena::CreateMaybeMessage<::dydxprotocol::perpetuals::MsgSetLiquidityTier>(Arena*);
template <>
::dydxprotocol::perpetuals::MsgSetLiquidityTierResponse* Arena::CreateMaybeMessage<::dydxprotocol::perpetuals::MsgSetLiquidityTierResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace dydxprotocol {
namespace perpetuals {

// ===================================================================


// -------------------------------------------------------------------

class MsgCreatePerpetual final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dydxprotocol.perpetuals.MsgCreatePerpetual) */ {
 public:
  inline MsgCreatePerpetual() : MsgCreatePerpetual(nullptr) {}
  ~MsgCreatePerpetual() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgCreatePerpetual(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgCreatePerpetual(const MsgCreatePerpetual& from);
  MsgCreatePerpetual(MsgCreatePerpetual&& from) noexcept
    : MsgCreatePerpetual() {
    *this = ::std::move(from);
  }

  inline MsgCreatePerpetual& operator=(const MsgCreatePerpetual& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCreatePerpetual& operator=(MsgCreatePerpetual&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgCreatePerpetual& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgCreatePerpetual* internal_default_instance() {
    return reinterpret_cast<const MsgCreatePerpetual*>(
               &_MsgCreatePerpetual_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MsgCreatePerpetual& a, MsgCreatePerpetual& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgCreatePerpetual* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCreatePerpetual* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgCreatePerpetual* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgCreatePerpetual>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgCreatePerpetual& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgCreatePerpetual& from) {
    MsgCreatePerpetual::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgCreatePerpetual* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.perpetuals.MsgCreatePerpetual";
  }
  protected:
  explicit MsgCreatePerpetual(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAuthorityFieldNumber = 1,
    kParamsFieldNumber = 2,
  };
  // string authority = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* ptr);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // .dydxprotocol.perpetuals.PerpetualParams params = 2 [(.gogoproto.nullable) = false];
  bool has_params() const;
  void clear_params() ;
  const ::dydxprotocol::perpetuals::PerpetualParams& params() const;
  PROTOBUF_NODISCARD ::dydxprotocol::perpetuals::PerpetualParams* release_params();
  ::dydxprotocol::perpetuals::PerpetualParams* mutable_params();
  void set_allocated_params(::dydxprotocol::perpetuals::PerpetualParams* params);
  private:
  const ::dydxprotocol::perpetuals::PerpetualParams& _internal_params() const;
  ::dydxprotocol::perpetuals::PerpetualParams* _internal_mutable_params();
  public:
  void unsafe_arena_set_allocated_params(
      ::dydxprotocol::perpetuals::PerpetualParams* params);
  ::dydxprotocol::perpetuals::PerpetualParams* unsafe_arena_release_params();
  // @@protoc_insertion_point(class_scope:dydxprotocol.perpetuals.MsgCreatePerpetual)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr authority_;
    ::dydxprotocol::perpetuals::PerpetualParams* params_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dydxprotocol_2fperpetuals_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgCreatePerpetualResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:dydxprotocol.perpetuals.MsgCreatePerpetualResponse) */ {
 public:
  inline MsgCreatePerpetualResponse() : MsgCreatePerpetualResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgCreatePerpetualResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgCreatePerpetualResponse(const MsgCreatePerpetualResponse& from);
  MsgCreatePerpetualResponse(MsgCreatePerpetualResponse&& from) noexcept
    : MsgCreatePerpetualResponse() {
    *this = ::std::move(from);
  }

  inline MsgCreatePerpetualResponse& operator=(const MsgCreatePerpetualResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCreatePerpetualResponse& operator=(MsgCreatePerpetualResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgCreatePerpetualResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgCreatePerpetualResponse* internal_default_instance() {
    return reinterpret_cast<const MsgCreatePerpetualResponse*>(
               &_MsgCreatePerpetualResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MsgCreatePerpetualResponse& a, MsgCreatePerpetualResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgCreatePerpetualResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCreatePerpetualResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgCreatePerpetualResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgCreatePerpetualResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgCreatePerpetualResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgCreatePerpetualResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.perpetuals.MsgCreatePerpetualResponse";
  }
  protected:
  explicit MsgCreatePerpetualResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dydxprotocol.perpetuals.MsgCreatePerpetualResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_dydxprotocol_2fperpetuals_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgSetLiquidityTier final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dydxprotocol.perpetuals.MsgSetLiquidityTier) */ {
 public:
  inline MsgSetLiquidityTier() : MsgSetLiquidityTier(nullptr) {}
  ~MsgSetLiquidityTier() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgSetLiquidityTier(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgSetLiquidityTier(const MsgSetLiquidityTier& from);
  MsgSetLiquidityTier(MsgSetLiquidityTier&& from) noexcept
    : MsgSetLiquidityTier() {
    *this = ::std::move(from);
  }

  inline MsgSetLiquidityTier& operator=(const MsgSetLiquidityTier& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSetLiquidityTier& operator=(MsgSetLiquidityTier&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgSetLiquidityTier& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgSetLiquidityTier* internal_default_instance() {
    return reinterpret_cast<const MsgSetLiquidityTier*>(
               &_MsgSetLiquidityTier_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MsgSetLiquidityTier& a, MsgSetLiquidityTier& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgSetLiquidityTier* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSetLiquidityTier* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgSetLiquidityTier* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgSetLiquidityTier>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgSetLiquidityTier& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgSetLiquidityTier& from) {
    MsgSetLiquidityTier::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSetLiquidityTier* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.perpetuals.MsgSetLiquidityTier";
  }
  protected:
  explicit MsgSetLiquidityTier(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAuthorityFieldNumber = 1,
    kLiquidityTierFieldNumber = 2,
  };
  // string authority = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* ptr);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // .dydxprotocol.perpetuals.LiquidityTier liquidity_tier = 2 [(.gogoproto.nullable) = false];
  bool has_liquidity_tier() const;
  void clear_liquidity_tier() ;
  const ::dydxprotocol::perpetuals::LiquidityTier& liquidity_tier() const;
  PROTOBUF_NODISCARD ::dydxprotocol::perpetuals::LiquidityTier* release_liquidity_tier();
  ::dydxprotocol::perpetuals::LiquidityTier* mutable_liquidity_tier();
  void set_allocated_liquidity_tier(::dydxprotocol::perpetuals::LiquidityTier* liquidity_tier);
  private:
  const ::dydxprotocol::perpetuals::LiquidityTier& _internal_liquidity_tier() const;
  ::dydxprotocol::perpetuals::LiquidityTier* _internal_mutable_liquidity_tier();
  public:
  void unsafe_arena_set_allocated_liquidity_tier(
      ::dydxprotocol::perpetuals::LiquidityTier* liquidity_tier);
  ::dydxprotocol::perpetuals::LiquidityTier* unsafe_arena_release_liquidity_tier();
  // @@protoc_insertion_point(class_scope:dydxprotocol.perpetuals.MsgSetLiquidityTier)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr authority_;
    ::dydxprotocol::perpetuals::LiquidityTier* liquidity_tier_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dydxprotocol_2fperpetuals_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgSetLiquidityTierResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:dydxprotocol.perpetuals.MsgSetLiquidityTierResponse) */ {
 public:
  inline MsgSetLiquidityTierResponse() : MsgSetLiquidityTierResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgSetLiquidityTierResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgSetLiquidityTierResponse(const MsgSetLiquidityTierResponse& from);
  MsgSetLiquidityTierResponse(MsgSetLiquidityTierResponse&& from) noexcept
    : MsgSetLiquidityTierResponse() {
    *this = ::std::move(from);
  }

  inline MsgSetLiquidityTierResponse& operator=(const MsgSetLiquidityTierResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSetLiquidityTierResponse& operator=(MsgSetLiquidityTierResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgSetLiquidityTierResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgSetLiquidityTierResponse* internal_default_instance() {
    return reinterpret_cast<const MsgSetLiquidityTierResponse*>(
               &_MsgSetLiquidityTierResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MsgSetLiquidityTierResponse& a, MsgSetLiquidityTierResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgSetLiquidityTierResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSetLiquidityTierResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgSetLiquidityTierResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgSetLiquidityTierResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgSetLiquidityTierResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgSetLiquidityTierResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.perpetuals.MsgSetLiquidityTierResponse";
  }
  protected:
  explicit MsgSetLiquidityTierResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dydxprotocol.perpetuals.MsgSetLiquidityTierResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_dydxprotocol_2fperpetuals_2ftx_2eproto;
};// -------------------------------------------------------------------

class FundingPremium final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dydxprotocol.perpetuals.FundingPremium) */ {
 public:
  inline FundingPremium() : FundingPremium(nullptr) {}
  ~FundingPremium() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FundingPremium(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  FundingPremium(const FundingPremium& from);
  FundingPremium(FundingPremium&& from) noexcept
    : FundingPremium() {
    *this = ::std::move(from);
  }

  inline FundingPremium& operator=(const FundingPremium& from) {
    CopyFrom(from);
    return *this;
  }
  inline FundingPremium& operator=(FundingPremium&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FundingPremium& default_instance() {
    return *internal_default_instance();
  }
  static inline const FundingPremium* internal_default_instance() {
    return reinterpret_cast<const FundingPremium*>(
               &_FundingPremium_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(FundingPremium& a, FundingPremium& b) {
    a.Swap(&b);
  }
  inline void Swap(FundingPremium* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FundingPremium* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FundingPremium* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FundingPremium>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const FundingPremium& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const FundingPremium& from) {
    FundingPremium::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FundingPremium* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.perpetuals.FundingPremium";
  }
  protected:
  explicit FundingPremium(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPerpetualIdFieldNumber = 1,
    kPremiumPpmFieldNumber = 2,
  };
  // uint32 perpetual_id = 1;
  void clear_perpetual_id() ;
  ::uint32_t perpetual_id() const;
  void set_perpetual_id(::uint32_t value);

  private:
  ::uint32_t _internal_perpetual_id() const;
  void _internal_set_perpetual_id(::uint32_t value);

  public:
  // int32 premium_ppm = 2;
  void clear_premium_ppm() ;
  ::int32_t premium_ppm() const;
  void set_premium_ppm(::int32_t value);

  private:
  ::int32_t _internal_premium_ppm() const;
  void _internal_set_premium_ppm(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:dydxprotocol.perpetuals.FundingPremium)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t perpetual_id_;
    ::int32_t premium_ppm_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dydxprotocol_2fperpetuals_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgAddPremiumVotes final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dydxprotocol.perpetuals.MsgAddPremiumVotes) */ {
 public:
  inline MsgAddPremiumVotes() : MsgAddPremiumVotes(nullptr) {}
  ~MsgAddPremiumVotes() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgAddPremiumVotes(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgAddPremiumVotes(const MsgAddPremiumVotes& from);
  MsgAddPremiumVotes(MsgAddPremiumVotes&& from) noexcept
    : MsgAddPremiumVotes() {
    *this = ::std::move(from);
  }

  inline MsgAddPremiumVotes& operator=(const MsgAddPremiumVotes& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgAddPremiumVotes& operator=(MsgAddPremiumVotes&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgAddPremiumVotes& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgAddPremiumVotes* internal_default_instance() {
    return reinterpret_cast<const MsgAddPremiumVotes*>(
               &_MsgAddPremiumVotes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MsgAddPremiumVotes& a, MsgAddPremiumVotes& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgAddPremiumVotes* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgAddPremiumVotes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgAddPremiumVotes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgAddPremiumVotes>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MsgAddPremiumVotes& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MsgAddPremiumVotes& from) {
    MsgAddPremiumVotes::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgAddPremiumVotes* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.perpetuals.MsgAddPremiumVotes";
  }
  protected:
  explicit MsgAddPremiumVotes(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVotesFieldNumber = 1,
  };
  // repeated .dydxprotocol.perpetuals.FundingPremium votes = 1 [(.gogoproto.nullable) = false];
  int votes_size() const;
  private:
  int _internal_votes_size() const;

  public:
  void clear_votes() ;
  ::dydxprotocol::perpetuals::FundingPremium* mutable_votes(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dydxprotocol::perpetuals::FundingPremium >*
      mutable_votes();
  private:
  const ::dydxprotocol::perpetuals::FundingPremium& _internal_votes(int index) const;
  ::dydxprotocol::perpetuals::FundingPremium* _internal_add_votes();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::dydxprotocol::perpetuals::FundingPremium>& _internal_votes() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::dydxprotocol::perpetuals::FundingPremium>* _internal_mutable_votes();
  public:
  const ::dydxprotocol::perpetuals::FundingPremium& votes(int index) const;
  ::dydxprotocol::perpetuals::FundingPremium* add_votes();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dydxprotocol::perpetuals::FundingPremium >&
      votes() const;
  // @@protoc_insertion_point(class_scope:dydxprotocol.perpetuals.MsgAddPremiumVotes)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dydxprotocol::perpetuals::FundingPremium > votes_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dydxprotocol_2fperpetuals_2ftx_2eproto;
};// -------------------------------------------------------------------

class MsgAddPremiumVotesResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:dydxprotocol.perpetuals.MsgAddPremiumVotesResponse) */ {
 public:
  inline MsgAddPremiumVotesResponse() : MsgAddPremiumVotesResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MsgAddPremiumVotesResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MsgAddPremiumVotesResponse(const MsgAddPremiumVotesResponse& from);
  MsgAddPremiumVotesResponse(MsgAddPremiumVotesResponse&& from) noexcept
    : MsgAddPremiumVotesResponse() {
    *this = ::std::move(from);
  }

  inline MsgAddPremiumVotesResponse& operator=(const MsgAddPremiumVotesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgAddPremiumVotesResponse& operator=(MsgAddPremiumVotesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgAddPremiumVotesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgAddPremiumVotesResponse* internal_default_instance() {
    return reinterpret_cast<const MsgAddPremiumVotesResponse*>(
               &_MsgAddPremiumVotesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(MsgAddPremiumVotesResponse& a, MsgAddPremiumVotesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(MsgAddPremiumVotesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgAddPremiumVotesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgAddPremiumVotesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MsgAddPremiumVotesResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgAddPremiumVotesResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgAddPremiumVotesResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "dydxprotocol.perpetuals.MsgAddPremiumVotesResponse";
  }
  protected:
  explicit MsgAddPremiumVotesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dydxprotocol.perpetuals.MsgAddPremiumVotesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_dydxprotocol_2fperpetuals_2ftx_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MsgCreatePerpetual

// string authority = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgCreatePerpetual::clear_authority() {
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgCreatePerpetual::authority() const {
  // @@protoc_insertion_point(field_get:dydxprotocol.perpetuals.MsgCreatePerpetual.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgCreatePerpetual::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dydxprotocol.perpetuals.MsgCreatePerpetual.authority)
}
inline std::string* MsgCreatePerpetual::mutable_authority() {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:dydxprotocol.perpetuals.MsgCreatePerpetual.authority)
  return _s;
}
inline const std::string& MsgCreatePerpetual::_internal_authority() const {
  return _impl_.authority_.Get();
}
inline void MsgCreatePerpetual::_internal_set_authority(const std::string& value) {
  ;


  _impl_.authority_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgCreatePerpetual::_internal_mutable_authority() {
  ;
  return _impl_.authority_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgCreatePerpetual::release_authority() {
  // @@protoc_insertion_point(field_release:dydxprotocol.perpetuals.MsgCreatePerpetual.authority)
  return _impl_.authority_.Release();
}
inline void MsgCreatePerpetual::set_allocated_authority(std::string* value) {
  _impl_.authority_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.authority_.IsDefault()) {
          _impl_.authority_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dydxprotocol.perpetuals.MsgCreatePerpetual.authority)
}

// .dydxprotocol.perpetuals.PerpetualParams params = 2 [(.gogoproto.nullable) = false];
inline bool MsgCreatePerpetual::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::dydxprotocol::perpetuals::PerpetualParams& MsgCreatePerpetual::_internal_params() const {
  const ::dydxprotocol::perpetuals::PerpetualParams* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::dydxprotocol::perpetuals::PerpetualParams&>(
      ::dydxprotocol::perpetuals::_PerpetualParams_default_instance_);
}
inline const ::dydxprotocol::perpetuals::PerpetualParams& MsgCreatePerpetual::params() const {
  // @@protoc_insertion_point(field_get:dydxprotocol.perpetuals.MsgCreatePerpetual.params)
  return _internal_params();
}
inline void MsgCreatePerpetual::unsafe_arena_set_allocated_params(
    ::dydxprotocol::perpetuals::PerpetualParams* params) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = params;
  if (params) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dydxprotocol.perpetuals.MsgCreatePerpetual.params)
}
inline ::dydxprotocol::perpetuals::PerpetualParams* MsgCreatePerpetual::release_params() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dydxprotocol::perpetuals::PerpetualParams* temp = _impl_.params_;
  _impl_.params_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::dydxprotocol::perpetuals::PerpetualParams* MsgCreatePerpetual::unsafe_arena_release_params() {
  // @@protoc_insertion_point(field_release:dydxprotocol.perpetuals.MsgCreatePerpetual.params)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dydxprotocol::perpetuals::PerpetualParams* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::dydxprotocol::perpetuals::PerpetualParams* MsgCreatePerpetual::_internal_mutable_params() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.params_ == nullptr) {
    auto* p = CreateMaybeMessage<::dydxprotocol::perpetuals::PerpetualParams>(GetArenaForAllocation());
    _impl_.params_ = p;
  }
  return _impl_.params_;
}
inline ::dydxprotocol::perpetuals::PerpetualParams* MsgCreatePerpetual::mutable_params() {
  ::dydxprotocol::perpetuals::PerpetualParams* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:dydxprotocol.perpetuals.MsgCreatePerpetual.params)
  return _msg;
}
inline void MsgCreatePerpetual::set_allocated_params(::dydxprotocol::perpetuals::PerpetualParams* params) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.params_);
  }
  if (params) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(params));
    if (message_arena != submessage_arena) {
      params = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, params, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.params_ = params;
  // @@protoc_insertion_point(field_set_allocated:dydxprotocol.perpetuals.MsgCreatePerpetual.params)
}

// -------------------------------------------------------------------

// MsgCreatePerpetualResponse

// -------------------------------------------------------------------

// MsgSetLiquidityTier

// string authority = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgSetLiquidityTier::clear_authority() {
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgSetLiquidityTier::authority() const {
  // @@protoc_insertion_point(field_get:dydxprotocol.perpetuals.MsgSetLiquidityTier.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgSetLiquidityTier::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ;
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:dydxprotocol.perpetuals.MsgSetLiquidityTier.authority)
}
inline std::string* MsgSetLiquidityTier::mutable_authority() {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:dydxprotocol.perpetuals.MsgSetLiquidityTier.authority)
  return _s;
}
inline const std::string& MsgSetLiquidityTier::_internal_authority() const {
  return _impl_.authority_.Get();
}
inline void MsgSetLiquidityTier::_internal_set_authority(const std::string& value) {
  ;


  _impl_.authority_.Set(value, GetArenaForAllocation());
}
inline std::string* MsgSetLiquidityTier::_internal_mutable_authority() {
  ;
  return _impl_.authority_.Mutable( GetArenaForAllocation());
}
inline std::string* MsgSetLiquidityTier::release_authority() {
  // @@protoc_insertion_point(field_release:dydxprotocol.perpetuals.MsgSetLiquidityTier.authority)
  return _impl_.authority_.Release();
}
inline void MsgSetLiquidityTier::set_allocated_authority(std::string* value) {
  _impl_.authority_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.authority_.IsDefault()) {
          _impl_.authority_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:dydxprotocol.perpetuals.MsgSetLiquidityTier.authority)
}

// .dydxprotocol.perpetuals.LiquidityTier liquidity_tier = 2 [(.gogoproto.nullable) = false];
inline bool MsgSetLiquidityTier::has_liquidity_tier() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.liquidity_tier_ != nullptr);
  return value;
}
inline const ::dydxprotocol::perpetuals::LiquidityTier& MsgSetLiquidityTier::_internal_liquidity_tier() const {
  const ::dydxprotocol::perpetuals::LiquidityTier* p = _impl_.liquidity_tier_;
  return p != nullptr ? *p : reinterpret_cast<const ::dydxprotocol::perpetuals::LiquidityTier&>(
      ::dydxprotocol::perpetuals::_LiquidityTier_default_instance_);
}
inline const ::dydxprotocol::perpetuals::LiquidityTier& MsgSetLiquidityTier::liquidity_tier() const {
  // @@protoc_insertion_point(field_get:dydxprotocol.perpetuals.MsgSetLiquidityTier.liquidity_tier)
  return _internal_liquidity_tier();
}
inline void MsgSetLiquidityTier::unsafe_arena_set_allocated_liquidity_tier(
    ::dydxprotocol::perpetuals::LiquidityTier* liquidity_tier) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.liquidity_tier_);
  }
  _impl_.liquidity_tier_ = liquidity_tier;
  if (liquidity_tier) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dydxprotocol.perpetuals.MsgSetLiquidityTier.liquidity_tier)
}
inline ::dydxprotocol::perpetuals::LiquidityTier* MsgSetLiquidityTier::release_liquidity_tier() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dydxprotocol::perpetuals::LiquidityTier* temp = _impl_.liquidity_tier_;
  _impl_.liquidity_tier_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::dydxprotocol::perpetuals::LiquidityTier* MsgSetLiquidityTier::unsafe_arena_release_liquidity_tier() {
  // @@protoc_insertion_point(field_release:dydxprotocol.perpetuals.MsgSetLiquidityTier.liquidity_tier)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::dydxprotocol::perpetuals::LiquidityTier* temp = _impl_.liquidity_tier_;
  _impl_.liquidity_tier_ = nullptr;
  return temp;
}
inline ::dydxprotocol::perpetuals::LiquidityTier* MsgSetLiquidityTier::_internal_mutable_liquidity_tier() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.liquidity_tier_ == nullptr) {
    auto* p = CreateMaybeMessage<::dydxprotocol::perpetuals::LiquidityTier>(GetArenaForAllocation());
    _impl_.liquidity_tier_ = p;
  }
  return _impl_.liquidity_tier_;
}
inline ::dydxprotocol::perpetuals::LiquidityTier* MsgSetLiquidityTier::mutable_liquidity_tier() {
  ::dydxprotocol::perpetuals::LiquidityTier* _msg = _internal_mutable_liquidity_tier();
  // @@protoc_insertion_point(field_mutable:dydxprotocol.perpetuals.MsgSetLiquidityTier.liquidity_tier)
  return _msg;
}
inline void MsgSetLiquidityTier::set_allocated_liquidity_tier(::dydxprotocol::perpetuals::LiquidityTier* liquidity_tier) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.liquidity_tier_);
  }
  if (liquidity_tier) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(liquidity_tier));
    if (message_arena != submessage_arena) {
      liquidity_tier = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, liquidity_tier, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.liquidity_tier_ = liquidity_tier;
  // @@protoc_insertion_point(field_set_allocated:dydxprotocol.perpetuals.MsgSetLiquidityTier.liquidity_tier)
}

// -------------------------------------------------------------------

// MsgSetLiquidityTierResponse

// -------------------------------------------------------------------

// FundingPremium

// uint32 perpetual_id = 1;
inline void FundingPremium::clear_perpetual_id() {
  _impl_.perpetual_id_ = 0u;
}
inline ::uint32_t FundingPremium::perpetual_id() const {
  // @@protoc_insertion_point(field_get:dydxprotocol.perpetuals.FundingPremium.perpetual_id)
  return _internal_perpetual_id();
}
inline void FundingPremium::set_perpetual_id(::uint32_t value) {
  _internal_set_perpetual_id(value);
  // @@protoc_insertion_point(field_set:dydxprotocol.perpetuals.FundingPremium.perpetual_id)
}
inline ::uint32_t FundingPremium::_internal_perpetual_id() const {
  return _impl_.perpetual_id_;
}
inline void FundingPremium::_internal_set_perpetual_id(::uint32_t value) {
  ;
  _impl_.perpetual_id_ = value;
}

// int32 premium_ppm = 2;
inline void FundingPremium::clear_premium_ppm() {
  _impl_.premium_ppm_ = 0;
}
inline ::int32_t FundingPremium::premium_ppm() const {
  // @@protoc_insertion_point(field_get:dydxprotocol.perpetuals.FundingPremium.premium_ppm)
  return _internal_premium_ppm();
}
inline void FundingPremium::set_premium_ppm(::int32_t value) {
  _internal_set_premium_ppm(value);
  // @@protoc_insertion_point(field_set:dydxprotocol.perpetuals.FundingPremium.premium_ppm)
}
inline ::int32_t FundingPremium::_internal_premium_ppm() const {
  return _impl_.premium_ppm_;
}
inline void FundingPremium::_internal_set_premium_ppm(::int32_t value) {
  ;
  _impl_.premium_ppm_ = value;
}

// -------------------------------------------------------------------

// MsgAddPremiumVotes

// repeated .dydxprotocol.perpetuals.FundingPremium votes = 1 [(.gogoproto.nullable) = false];
inline int MsgAddPremiumVotes::_internal_votes_size() const {
  return _impl_.votes_.size();
}
inline int MsgAddPremiumVotes::votes_size() const {
  return _internal_votes_size();
}
inline void MsgAddPremiumVotes::clear_votes() {
  _internal_mutable_votes()->Clear();
}
inline ::dydxprotocol::perpetuals::FundingPremium* MsgAddPremiumVotes::mutable_votes(int index) {
  // @@protoc_insertion_point(field_mutable:dydxprotocol.perpetuals.MsgAddPremiumVotes.votes)
  return _internal_mutable_votes()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dydxprotocol::perpetuals::FundingPremium >*
MsgAddPremiumVotes::mutable_votes() {
  // @@protoc_insertion_point(field_mutable_list:dydxprotocol.perpetuals.MsgAddPremiumVotes.votes)
  return _internal_mutable_votes();
}
inline const ::dydxprotocol::perpetuals::FundingPremium& MsgAddPremiumVotes::_internal_votes(int index) const {
  return _internal_votes().Get(index);
}
inline const ::dydxprotocol::perpetuals::FundingPremium& MsgAddPremiumVotes::votes(int index) const {
  // @@protoc_insertion_point(field_get:dydxprotocol.perpetuals.MsgAddPremiumVotes.votes)
  return _internal_votes(index);
}
inline ::dydxprotocol::perpetuals::FundingPremium* MsgAddPremiumVotes::_internal_add_votes() {
  return _internal_mutable_votes()->Add();
}
inline ::dydxprotocol::perpetuals::FundingPremium* MsgAddPremiumVotes::add_votes() {
  ::dydxprotocol::perpetuals::FundingPremium* _add = _internal_add_votes();
  // @@protoc_insertion_point(field_add:dydxprotocol.perpetuals.MsgAddPremiumVotes.votes)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dydxprotocol::perpetuals::FundingPremium >&
MsgAddPremiumVotes::votes() const {
  // @@protoc_insertion_point(field_list:dydxprotocol.perpetuals.MsgAddPremiumVotes.votes)
  return _internal_votes();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::dydxprotocol::perpetuals::FundingPremium>&
MsgAddPremiumVotes::_internal_votes() const {
  return _impl_.votes_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::dydxprotocol::perpetuals::FundingPremium>*
MsgAddPremiumVotes::_internal_mutable_votes() {
  return &_impl_.votes_;
}

// -------------------------------------------------------------------

// MsgAddPremiumVotesResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace perpetuals
}  // namespace dydxprotocol


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_dydxprotocol_2fperpetuals_2ftx_2eproto_2epb_2eh
