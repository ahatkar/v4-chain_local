// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dydxprotocol/daemons/liquidation/liquidation.proto

#include "dydxprotocol/daemons/liquidation/liquidation.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace dydxprotocol {
namespace daemons {
namespace liquidation {
template <typename>
PROTOBUF_CONSTEXPR LiquidateSubaccountsRequest::LiquidateSubaccountsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.subaccount_ids_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LiquidateSubaccountsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LiquidateSubaccountsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LiquidateSubaccountsRequestDefaultTypeInternal() {}
  union {
    LiquidateSubaccountsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LiquidateSubaccountsRequestDefaultTypeInternal _LiquidateSubaccountsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR LiquidateSubaccountsResponse::LiquidateSubaccountsResponse(
    ::_pbi::ConstantInitialized) {}
struct LiquidateSubaccountsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LiquidateSubaccountsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LiquidateSubaccountsResponseDefaultTypeInternal() {}
  union {
    LiquidateSubaccountsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LiquidateSubaccountsResponseDefaultTypeInternal _LiquidateSubaccountsResponse_default_instance_;
}  // namespace liquidation
}  // namespace daemons
}  // namespace dydxprotocol
static ::_pb::Metadata file_level_metadata_dydxprotocol_2fdaemons_2fliquidation_2fliquidation_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_dydxprotocol_2fdaemons_2fliquidation_2fliquidation_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_dydxprotocol_2fdaemons_2fliquidation_2fliquidation_2eproto = nullptr;
const ::uint32_t TableStruct_dydxprotocol_2fdaemons_2fliquidation_2fliquidation_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::daemons::liquidation::LiquidateSubaccountsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::daemons::liquidation::LiquidateSubaccountsRequest, _impl_.subaccount_ids_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::daemons::liquidation::LiquidateSubaccountsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::dydxprotocol::daemons::liquidation::LiquidateSubaccountsRequest)},
        { 9, -1, -1, sizeof(::dydxprotocol::daemons::liquidation::LiquidateSubaccountsResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::dydxprotocol::daemons::liquidation::_LiquidateSubaccountsRequest_default_instance_._instance,
    &::dydxprotocol::daemons::liquidation::_LiquidateSubaccountsResponse_default_instance_._instance,
};
const char descriptor_table_protodef_dydxprotocol_2fdaemons_2fliquidation_2fliquidation_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n2dydxprotocol/daemons/liquidation/liqui"
    "dation.proto\022 dydxprotocol.daemons.liqui"
    "dation\032\024gogoproto/gogo.proto\032)dydxprotoc"
    "ol/subaccounts/subaccount.proto\"c\n\033Liqui"
    "dateSubaccountsRequest\022D\n\016subaccount_ids"
    "\030\001 \003(\0132&.dydxprotocol.subaccounts.Subacc"
    "ountIdB\004\310\336\037\000\"\036\n\034LiquidateSubaccountsResp"
    "onse2\254\001\n\022LiquidationService\022\225\001\n\024Liquidat"
    "eSubaccounts\022=.dydxprotocol.daemons.liqu"
    "idation.LiquidateSubaccountsRequest\032>.dy"
    "dxprotocol.daemons.liquidation.Liquidate"
    "SubaccountsResponseBCZAgithub.com/dydxpr"
    "otocol/v4-chain/protocol/daemons/liquida"
    "tion/apib\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_dydxprotocol_2fdaemons_2fliquidation_2fliquidation_2eproto_deps[2] =
    {
        &::descriptor_table_dydxprotocol_2fsubaccounts_2fsubaccount_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
};
static ::absl::once_flag descriptor_table_dydxprotocol_2fdaemons_2fliquidation_2fliquidation_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_dydxprotocol_2fdaemons_2fliquidation_2fliquidation_2eproto = {
    false,
    false,
    536,
    descriptor_table_protodef_dydxprotocol_2fdaemons_2fliquidation_2fliquidation_2eproto,
    "dydxprotocol/daemons/liquidation/liquidation.proto",
    &descriptor_table_dydxprotocol_2fdaemons_2fliquidation_2fliquidation_2eproto_once,
    descriptor_table_dydxprotocol_2fdaemons_2fliquidation_2fliquidation_2eproto_deps,
    2,
    2,
    schemas,
    file_default_instances,
    TableStruct_dydxprotocol_2fdaemons_2fliquidation_2fliquidation_2eproto::offsets,
    file_level_metadata_dydxprotocol_2fdaemons_2fliquidation_2fliquidation_2eproto,
    file_level_enum_descriptors_dydxprotocol_2fdaemons_2fliquidation_2fliquidation_2eproto,
    file_level_service_descriptors_dydxprotocol_2fdaemons_2fliquidation_2fliquidation_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_dydxprotocol_2fdaemons_2fliquidation_2fliquidation_2eproto_getter() {
  return &descriptor_table_dydxprotocol_2fdaemons_2fliquidation_2fliquidation_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_dydxprotocol_2fdaemons_2fliquidation_2fliquidation_2eproto(&descriptor_table_dydxprotocol_2fdaemons_2fliquidation_2fliquidation_2eproto);
namespace dydxprotocol {
namespace daemons {
namespace liquidation {
// ===================================================================

class LiquidateSubaccountsRequest::_Internal {
 public:
};

void LiquidateSubaccountsRequest::clear_subaccount_ids() {
  _internal_mutable_subaccount_ids()->Clear();
}
LiquidateSubaccountsRequest::LiquidateSubaccountsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dydxprotocol.daemons.liquidation.LiquidateSubaccountsRequest)
}
LiquidateSubaccountsRequest::LiquidateSubaccountsRequest(const LiquidateSubaccountsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LiquidateSubaccountsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.subaccount_ids_){from._impl_.subaccount_ids_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dydxprotocol.daemons.liquidation.LiquidateSubaccountsRequest)
}

inline void LiquidateSubaccountsRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.subaccount_ids_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

LiquidateSubaccountsRequest::~LiquidateSubaccountsRequest() {
  // @@protoc_insertion_point(destructor:dydxprotocol.daemons.liquidation.LiquidateSubaccountsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LiquidateSubaccountsRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_subaccount_ids()->~RepeatedPtrField();
}

void LiquidateSubaccountsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LiquidateSubaccountsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dydxprotocol.daemons.liquidation.LiquidateSubaccountsRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_subaccount_ids()->Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LiquidateSubaccountsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .dydxprotocol.subaccounts.SubaccountId subaccount_ids = 1 [(.gogoproto.nullable) = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_subaccount_ids(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* LiquidateSubaccountsRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dydxprotocol.daemons.liquidation.LiquidateSubaccountsRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dydxprotocol.subaccounts.SubaccountId subaccount_ids = 1 [(.gogoproto.nullable) = false];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_subaccount_ids_size()); i < n; i++) {
    const auto& repfield = this->_internal_subaccount_ids(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dydxprotocol.daemons.liquidation.LiquidateSubaccountsRequest)
  return target;
}

::size_t LiquidateSubaccountsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dydxprotocol.daemons.liquidation.LiquidateSubaccountsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dydxprotocol.subaccounts.SubaccountId subaccount_ids = 1 [(.gogoproto.nullable) = false];
  total_size += 1UL * this->_internal_subaccount_ids_size();
  for (const auto& msg : this->_internal_subaccount_ids()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LiquidateSubaccountsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LiquidateSubaccountsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LiquidateSubaccountsRequest::GetClassData() const { return &_class_data_; }


void LiquidateSubaccountsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LiquidateSubaccountsRequest*>(&to_msg);
  auto& from = static_cast<const LiquidateSubaccountsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dydxprotocol.daemons.liquidation.LiquidateSubaccountsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_subaccount_ids()->MergeFrom(from._internal_subaccount_ids());
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LiquidateSubaccountsRequest::CopyFrom(const LiquidateSubaccountsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dydxprotocol.daemons.liquidation.LiquidateSubaccountsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LiquidateSubaccountsRequest::IsInitialized() const {
  return true;
}

void LiquidateSubaccountsRequest::InternalSwap(LiquidateSubaccountsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _internal_mutable_subaccount_ids()->InternalSwap(other->_internal_mutable_subaccount_ids());
}

::PROTOBUF_NAMESPACE_ID::Metadata LiquidateSubaccountsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dydxprotocol_2fdaemons_2fliquidation_2fliquidation_2eproto_getter, &descriptor_table_dydxprotocol_2fdaemons_2fliquidation_2fliquidation_2eproto_once,
      file_level_metadata_dydxprotocol_2fdaemons_2fliquidation_2fliquidation_2eproto[0]);
}
// ===================================================================

class LiquidateSubaccountsResponse::_Internal {
 public:
};

LiquidateSubaccountsResponse::LiquidateSubaccountsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:dydxprotocol.daemons.liquidation.LiquidateSubaccountsResponse)
}
LiquidateSubaccountsResponse::LiquidateSubaccountsResponse(const LiquidateSubaccountsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  LiquidateSubaccountsResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dydxprotocol.daemons.liquidation.LiquidateSubaccountsResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LiquidateSubaccountsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LiquidateSubaccountsResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata LiquidateSubaccountsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dydxprotocol_2fdaemons_2fliquidation_2fliquidation_2eproto_getter, &descriptor_table_dydxprotocol_2fdaemons_2fliquidation_2fliquidation_2eproto_once,
      file_level_metadata_dydxprotocol_2fdaemons_2fliquidation_2fliquidation_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace liquidation
}  // namespace daemons
}  // namespace dydxprotocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::dydxprotocol::daemons::liquidation::LiquidateSubaccountsRequest*
Arena::CreateMaybeMessage< ::dydxprotocol::daemons::liquidation::LiquidateSubaccountsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dydxprotocol::daemons::liquidation::LiquidateSubaccountsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dydxprotocol::daemons::liquidation::LiquidateSubaccountsResponse*
Arena::CreateMaybeMessage< ::dydxprotocol::daemons::liquidation::LiquidateSubaccountsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dydxprotocol::daemons::liquidation::LiquidateSubaccountsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
