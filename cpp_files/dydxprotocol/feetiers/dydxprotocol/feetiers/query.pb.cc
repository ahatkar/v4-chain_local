// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dydxprotocol/feetiers/query.proto

#include "dydxprotocol/feetiers/query.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace dydxprotocol {
namespace feetiers {
template <typename>
PROTOBUF_CONSTEXPR QueryPerpetualFeeParamsRequest::QueryPerpetualFeeParamsRequest(
    ::_pbi::ConstantInitialized) {}
struct QueryPerpetualFeeParamsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryPerpetualFeeParamsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryPerpetualFeeParamsRequestDefaultTypeInternal() {}
  union {
    QueryPerpetualFeeParamsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryPerpetualFeeParamsRequestDefaultTypeInternal _QueryPerpetualFeeParamsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryPerpetualFeeParamsResponse::QueryPerpetualFeeParamsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.params_)*/nullptr} {}
struct QueryPerpetualFeeParamsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryPerpetualFeeParamsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryPerpetualFeeParamsResponseDefaultTypeInternal() {}
  union {
    QueryPerpetualFeeParamsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryPerpetualFeeParamsResponseDefaultTypeInternal _QueryPerpetualFeeParamsResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryUserFeeTierRequest::QueryUserFeeTierRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.user_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct QueryUserFeeTierRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryUserFeeTierRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryUserFeeTierRequestDefaultTypeInternal() {}
  union {
    QueryUserFeeTierRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryUserFeeTierRequestDefaultTypeInternal _QueryUserFeeTierRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR QueryUserFeeTierResponse::QueryUserFeeTierResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.tier_)*/nullptr
  , /*decltype(_impl_.index_)*/ 0u
} {}
struct QueryUserFeeTierResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryUserFeeTierResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryUserFeeTierResponseDefaultTypeInternal() {}
  union {
    QueryUserFeeTierResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryUserFeeTierResponseDefaultTypeInternal _QueryUserFeeTierResponse_default_instance_;
}  // namespace feetiers
}  // namespace dydxprotocol
static ::_pb::Metadata file_level_metadata_dydxprotocol_2ffeetiers_2fquery_2eproto[4];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_dydxprotocol_2ffeetiers_2fquery_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_dydxprotocol_2ffeetiers_2fquery_2eproto = nullptr;
const ::uint32_t TableStruct_dydxprotocol_2ffeetiers_2fquery_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::feetiers::QueryPerpetualFeeParamsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::feetiers::QueryPerpetualFeeParamsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::feetiers::QueryPerpetualFeeParamsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::feetiers::QueryPerpetualFeeParamsResponse, _impl_.params_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::feetiers::QueryUserFeeTierRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::feetiers::QueryUserFeeTierRequest, _impl_.user_),
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::feetiers::QueryUserFeeTierResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::feetiers::QueryUserFeeTierResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::feetiers::QueryUserFeeTierResponse, _impl_.index_),
    PROTOBUF_FIELD_OFFSET(::dydxprotocol::feetiers::QueryUserFeeTierResponse, _impl_.tier_),
    ~0u,
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::dydxprotocol::feetiers::QueryPerpetualFeeParamsRequest)},
        { 8, 17, -1, sizeof(::dydxprotocol::feetiers::QueryPerpetualFeeParamsResponse)},
        { 18, -1, -1, sizeof(::dydxprotocol::feetiers::QueryUserFeeTierRequest)},
        { 27, 37, -1, sizeof(::dydxprotocol::feetiers::QueryUserFeeTierResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::dydxprotocol::feetiers::_QueryPerpetualFeeParamsRequest_default_instance_._instance,
    &::dydxprotocol::feetiers::_QueryPerpetualFeeParamsResponse_default_instance_._instance,
    &::dydxprotocol::feetiers::_QueryUserFeeTierRequest_default_instance_._instance,
    &::dydxprotocol::feetiers::_QueryUserFeeTierResponse_default_instance_._instance,
};
const char descriptor_table_protodef_dydxprotocol_2ffeetiers_2fquery_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n!dydxprotocol/feetiers/query.proto\022\025dyd"
    "xprotocol.feetiers\032\031cosmos_proto/cosmos."
    "proto\032\024gogoproto/gogo.proto\032\034google/api/"
    "annotations.proto\032\"dydxprotocol/feetiers"
    "/params.proto\" \n\036QueryPerpetualFeeParams"
    "Request\"b\n\037QueryPerpetualFeeParamsRespon"
    "se\022\?\n\006params\030\001 \001(\0132).dydxprotocol.feetie"
    "rs.PerpetualFeeParamsB\004\310\336\037\000\"A\n\027QueryUser"
    "FeeTierRequest\022&\n\004user\030\001 \001(\tB\030\322\264-\024cosmos"
    ".AddressString\"`\n\030QueryUserFeeTierRespon"
    "se\022\r\n\005index\030\001 \001(\r\0225\n\004tier\030\002 \001(\0132\'.dydxpr"
    "otocol.feetiers.PerpetualFeeTier2\347\002\n\005Que"
    "ry\022\273\001\n\022PerpetualFeeParams\0225.dydxprotocol"
    ".feetiers.QueryPerpetualFeeParamsRequest"
    "\0326.dydxprotocol.feetiers.QueryPerpetualF"
    "eeParamsResponse\"6\202\323\344\223\0020\022./dydxprotocol/"
    "v4/feetiers/perpetual_fee_params\022\237\001\n\013Use"
    "rFeeTier\022..dydxprotocol.feetiers.QueryUs"
    "erFeeTierRequest\032/.dydxprotocol.feetiers"
    ".QueryUserFeeTierResponse\"/\202\323\344\223\002)\022\'/dydx"
    "protocol/v4/feetiers/user_fee_tierB<Z:gi"
    "thub.com/dydxprotocol/v4-chain/protocol/"
    "x/feetiers/typesb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_dydxprotocol_2ffeetiers_2fquery_2eproto_deps[4] =
    {
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_dydxprotocol_2ffeetiers_2fparams_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
};
static ::absl::once_flag descriptor_table_dydxprotocol_2ffeetiers_2fquery_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_dydxprotocol_2ffeetiers_2fquery_2eproto = {
    false,
    false,
    904,
    descriptor_table_protodef_dydxprotocol_2ffeetiers_2fquery_2eproto,
    "dydxprotocol/feetiers/query.proto",
    &descriptor_table_dydxprotocol_2ffeetiers_2fquery_2eproto_once,
    descriptor_table_dydxprotocol_2ffeetiers_2fquery_2eproto_deps,
    4,
    4,
    schemas,
    file_default_instances,
    TableStruct_dydxprotocol_2ffeetiers_2fquery_2eproto::offsets,
    file_level_metadata_dydxprotocol_2ffeetiers_2fquery_2eproto,
    file_level_enum_descriptors_dydxprotocol_2ffeetiers_2fquery_2eproto,
    file_level_service_descriptors_dydxprotocol_2ffeetiers_2fquery_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_dydxprotocol_2ffeetiers_2fquery_2eproto_getter() {
  return &descriptor_table_dydxprotocol_2ffeetiers_2fquery_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_dydxprotocol_2ffeetiers_2fquery_2eproto(&descriptor_table_dydxprotocol_2ffeetiers_2fquery_2eproto);
namespace dydxprotocol {
namespace feetiers {
// ===================================================================

class QueryPerpetualFeeParamsRequest::_Internal {
 public:
};

QueryPerpetualFeeParamsRequest::QueryPerpetualFeeParamsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:dydxprotocol.feetiers.QueryPerpetualFeeParamsRequest)
}
QueryPerpetualFeeParamsRequest::QueryPerpetualFeeParamsRequest(const QueryPerpetualFeeParamsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  QueryPerpetualFeeParamsRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dydxprotocol.feetiers.QueryPerpetualFeeParamsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryPerpetualFeeParamsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryPerpetualFeeParamsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata QueryPerpetualFeeParamsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dydxprotocol_2ffeetiers_2fquery_2eproto_getter, &descriptor_table_dydxprotocol_2ffeetiers_2fquery_2eproto_once,
      file_level_metadata_dydxprotocol_2ffeetiers_2fquery_2eproto[0]);
}
// ===================================================================

class QueryPerpetualFeeParamsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryPerpetualFeeParamsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryPerpetualFeeParamsResponse, _impl_._has_bits_);
  static const ::dydxprotocol::feetiers::PerpetualFeeParams& params(const QueryPerpetualFeeParamsResponse* msg);
  static void set_has_params(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::dydxprotocol::feetiers::PerpetualFeeParams&
QueryPerpetualFeeParamsResponse::_Internal::params(const QueryPerpetualFeeParamsResponse* msg) {
  return *msg->_impl_.params_;
}
void QueryPerpetualFeeParamsResponse::clear_params() {
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryPerpetualFeeParamsResponse::QueryPerpetualFeeParamsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dydxprotocol.feetiers.QueryPerpetualFeeParamsResponse)
}
QueryPerpetualFeeParamsResponse::QueryPerpetualFeeParamsResponse(const QueryPerpetualFeeParamsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryPerpetualFeeParamsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.params_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.params_ = new ::dydxprotocol::feetiers::PerpetualFeeParams(*from._impl_.params_);
  }
  // @@protoc_insertion_point(copy_constructor:dydxprotocol.feetiers.QueryPerpetualFeeParamsResponse)
}

inline void QueryPerpetualFeeParamsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.params_){nullptr}
  };
}

QueryPerpetualFeeParamsResponse::~QueryPerpetualFeeParamsResponse() {
  // @@protoc_insertion_point(destructor:dydxprotocol.feetiers.QueryPerpetualFeeParamsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryPerpetualFeeParamsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.params_;
}

void QueryPerpetualFeeParamsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryPerpetualFeeParamsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dydxprotocol.feetiers.QueryPerpetualFeeParamsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.params_ != nullptr);
    _impl_.params_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryPerpetualFeeParamsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .dydxprotocol.feetiers.PerpetualFeeParams params = 1 [(.gogoproto.nullable) = false];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryPerpetualFeeParamsResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dydxprotocol.feetiers.QueryPerpetualFeeParamsResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .dydxprotocol.feetiers.PerpetualFeeParams params = 1 [(.gogoproto.nullable) = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::params(this),
        _Internal::params(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dydxprotocol.feetiers.QueryPerpetualFeeParamsResponse)
  return target;
}

::size_t QueryPerpetualFeeParamsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dydxprotocol.feetiers.QueryPerpetualFeeParamsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .dydxprotocol.feetiers.PerpetualFeeParams params = 1 [(.gogoproto.nullable) = false];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.params_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryPerpetualFeeParamsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryPerpetualFeeParamsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryPerpetualFeeParamsResponse::GetClassData() const { return &_class_data_; }


void QueryPerpetualFeeParamsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryPerpetualFeeParamsResponse*>(&to_msg);
  auto& from = static_cast<const QueryPerpetualFeeParamsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dydxprotocol.feetiers.QueryPerpetualFeeParamsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_params()->::dydxprotocol::feetiers::PerpetualFeeParams::MergeFrom(
        from._internal_params());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryPerpetualFeeParamsResponse::CopyFrom(const QueryPerpetualFeeParamsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dydxprotocol.feetiers.QueryPerpetualFeeParamsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryPerpetualFeeParamsResponse::IsInitialized() const {
  return true;
}

void QueryPerpetualFeeParamsResponse::InternalSwap(QueryPerpetualFeeParamsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.params_, other->_impl_.params_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryPerpetualFeeParamsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dydxprotocol_2ffeetiers_2fquery_2eproto_getter, &descriptor_table_dydxprotocol_2ffeetiers_2fquery_2eproto_once,
      file_level_metadata_dydxprotocol_2ffeetiers_2fquery_2eproto[1]);
}
// ===================================================================

class QueryUserFeeTierRequest::_Internal {
 public:
};

QueryUserFeeTierRequest::QueryUserFeeTierRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dydxprotocol.feetiers.QueryUserFeeTierRequest)
}
QueryUserFeeTierRequest::QueryUserFeeTierRequest(const QueryUserFeeTierRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryUserFeeTierRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.user_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.user_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.user_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user().empty()) {
    _this->_impl_.user_.Set(from._internal_user(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:dydxprotocol.feetiers.QueryUserFeeTierRequest)
}

inline void QueryUserFeeTierRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.user_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.user_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.user_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

QueryUserFeeTierRequest::~QueryUserFeeTierRequest() {
  // @@protoc_insertion_point(destructor:dydxprotocol.feetiers.QueryUserFeeTierRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryUserFeeTierRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.user_.Destroy();
}

void QueryUserFeeTierRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryUserFeeTierRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dydxprotocol.feetiers.QueryUserFeeTierRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryUserFeeTierRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string user = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_user();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "dydxprotocol.feetiers.QueryUserFeeTierRequest.user"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryUserFeeTierRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dydxprotocol.feetiers.QueryUserFeeTierRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string user = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_user().empty()) {
    const std::string& _s = this->_internal_user();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "dydxprotocol.feetiers.QueryUserFeeTierRequest.user");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dydxprotocol.feetiers.QueryUserFeeTierRequest)
  return target;
}

::size_t QueryUserFeeTierRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dydxprotocol.feetiers.QueryUserFeeTierRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user = 1 [(.cosmos_proto.scalar) = "cosmos.AddressString"];
  if (!this->_internal_user().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_user());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryUserFeeTierRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryUserFeeTierRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryUserFeeTierRequest::GetClassData() const { return &_class_data_; }


void QueryUserFeeTierRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryUserFeeTierRequest*>(&to_msg);
  auto& from = static_cast<const QueryUserFeeTierRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dydxprotocol.feetiers.QueryUserFeeTierRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user().empty()) {
    _this->_internal_set_user(from._internal_user());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryUserFeeTierRequest::CopyFrom(const QueryUserFeeTierRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dydxprotocol.feetiers.QueryUserFeeTierRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryUserFeeTierRequest::IsInitialized() const {
  return true;
}

void QueryUserFeeTierRequest::InternalSwap(QueryUserFeeTierRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_, lhs_arena,
                                       &other->_impl_.user_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryUserFeeTierRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dydxprotocol_2ffeetiers_2fquery_2eproto_getter, &descriptor_table_dydxprotocol_2ffeetiers_2fquery_2eproto_once,
      file_level_metadata_dydxprotocol_2ffeetiers_2fquery_2eproto[2]);
}
// ===================================================================

class QueryUserFeeTierResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<QueryUserFeeTierResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(QueryUserFeeTierResponse, _impl_._has_bits_);
  static const ::dydxprotocol::feetiers::PerpetualFeeTier& tier(const QueryUserFeeTierResponse* msg);
  static void set_has_tier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::dydxprotocol::feetiers::PerpetualFeeTier&
QueryUserFeeTierResponse::_Internal::tier(const QueryUserFeeTierResponse* msg) {
  return *msg->_impl_.tier_;
}
void QueryUserFeeTierResponse::clear_tier() {
  if (_impl_.tier_ != nullptr) _impl_.tier_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryUserFeeTierResponse::QueryUserFeeTierResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dydxprotocol.feetiers.QueryUserFeeTierResponse)
}
QueryUserFeeTierResponse::QueryUserFeeTierResponse(const QueryUserFeeTierResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  QueryUserFeeTierResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.tier_){nullptr}
    , decltype(_impl_.index_) {}
  };

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.tier_ = new ::dydxprotocol::feetiers::PerpetualFeeTier(*from._impl_.tier_);
  }
  _this->_impl_.index_ = from._impl_.index_;
  // @@protoc_insertion_point(copy_constructor:dydxprotocol.feetiers.QueryUserFeeTierResponse)
}

inline void QueryUserFeeTierResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.tier_){nullptr}
    , decltype(_impl_.index_) { 0u }

  };
}

QueryUserFeeTierResponse::~QueryUserFeeTierResponse() {
  // @@protoc_insertion_point(destructor:dydxprotocol.feetiers.QueryUserFeeTierResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void QueryUserFeeTierResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.tier_;
}

void QueryUserFeeTierResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void QueryUserFeeTierResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dydxprotocol.feetiers.QueryUserFeeTierResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.tier_ != nullptr);
    _impl_.tier_->Clear();
  }
  _impl_.index_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryUserFeeTierResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .dydxprotocol.feetiers.PerpetualFeeTier tier = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_tier(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* QueryUserFeeTierResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dydxprotocol.feetiers.QueryUserFeeTierResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 index = 1;
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_index(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .dydxprotocol.feetiers.PerpetualFeeTier tier = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::tier(this),
        _Internal::tier(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dydxprotocol.feetiers.QueryUserFeeTierResponse)
  return target;
}

::size_t QueryUserFeeTierResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dydxprotocol.feetiers.QueryUserFeeTierResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .dydxprotocol.feetiers.PerpetualFeeTier tier = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.tier_);
  }

  // uint32 index = 1;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData QueryUserFeeTierResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    QueryUserFeeTierResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*QueryUserFeeTierResponse::GetClassData() const { return &_class_data_; }


void QueryUserFeeTierResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<QueryUserFeeTierResponse*>(&to_msg);
  auto& from = static_cast<const QueryUserFeeTierResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dydxprotocol.feetiers.QueryUserFeeTierResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_tier()->::dydxprotocol::feetiers::PerpetualFeeTier::MergeFrom(
        from._internal_tier());
  }
  if (from._internal_index() != 0) {
    _this->_internal_set_index(from._internal_index());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void QueryUserFeeTierResponse::CopyFrom(const QueryUserFeeTierResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dydxprotocol.feetiers.QueryUserFeeTierResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryUserFeeTierResponse::IsInitialized() const {
  return true;
}

void QueryUserFeeTierResponse::InternalSwap(QueryUserFeeTierResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryUserFeeTierResponse, _impl_.index_)
      + sizeof(QueryUserFeeTierResponse::_impl_.index_)
      - PROTOBUF_FIELD_OFFSET(QueryUserFeeTierResponse, _impl_.tier_)>(
          reinterpret_cast<char*>(&_impl_.tier_),
          reinterpret_cast<char*>(&other->_impl_.tier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryUserFeeTierResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dydxprotocol_2ffeetiers_2fquery_2eproto_getter, &descriptor_table_dydxprotocol_2ffeetiers_2fquery_2eproto_once,
      file_level_metadata_dydxprotocol_2ffeetiers_2fquery_2eproto[3]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace feetiers
}  // namespace dydxprotocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::dydxprotocol::feetiers::QueryPerpetualFeeParamsRequest*
Arena::CreateMaybeMessage< ::dydxprotocol::feetiers::QueryPerpetualFeeParamsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dydxprotocol::feetiers::QueryPerpetualFeeParamsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dydxprotocol::feetiers::QueryPerpetualFeeParamsResponse*
Arena::CreateMaybeMessage< ::dydxprotocol::feetiers::QueryPerpetualFeeParamsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dydxprotocol::feetiers::QueryPerpetualFeeParamsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dydxprotocol::feetiers::QueryUserFeeTierRequest*
Arena::CreateMaybeMessage< ::dydxprotocol::feetiers::QueryUserFeeTierRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dydxprotocol::feetiers::QueryUserFeeTierRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dydxprotocol::feetiers::QueryUserFeeTierResponse*
Arena::CreateMaybeMessage< ::dydxprotocol::feetiers::QueryUserFeeTierResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dydxprotocol::feetiers::QueryUserFeeTierResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
